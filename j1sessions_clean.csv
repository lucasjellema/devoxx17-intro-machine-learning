session_id;session_title;first_speaker;track;session_type;experience_Level;session_abstract
1492901668615001brln;Preventing Errors Before They Happen;Are you tired of null pointer exceptions, unintended side effects, SQL injections, concurrency errors, mistaken equality tests, and other runtime errors? Are your users tired of them in your code? This presentation shows you how to guarantee, at compile time, that these runtime exceptions cannot occur. You have nothing to lose but your bugs!;Werner Dietl;Java Development Tools;Tutorial;Introductory;Are you tired of null pointer exceptions, unintended side effects, SQL injections, concurrency errors, mistaken equality tests, and other runtime errors? Are your users tired of them in your code? This presentation shows you how to guarantee, at compile time, that these runtime exceptions cannot occur. You have nothing to lose but your bugs!
1493067940188001bzR3;Techniques for Getting More Kids, Especially Girls, Involved in STEAM;Getting kids involved and engaged in STEAM is important, not just because STEAM fields offer awesome job opportunities but also because our future depends on it! STEAM topics provide skills that ensure success in any number of careers. This session presents several hands-on activities that will spark the interest and curiosity of young minds and notes some activities in particular that engage girls, including techniques for teaching Scratch, a simple yet powerful programming language for children that is very easy to use yet contains many programming constructs, and some maker project ideas. It also discusses visuals that work and the importance of role models and demonstrates some role model activities. ;Sharat Chander;Java Community;Tutorial;Introductory;Getting kids involved and engaged in STEAM is important, not just because STEAM fields offer awesome job opportunities but also because our future depends on it! STEAM topics provide skills that ensure success in any number of careers. This session presents several hands-on activities that will spark the interest and curiosity of young minds and notes some activities in particular that engage girls, including techniques for teaching Scratch, a simple yet powerful programming language for children that is very easy to use yet contains many programming constructs, and some maker project ideas. It also discusses visuals that work and the importance of role models and demonstrates some role model activities. 
1493071517800001TdAu;Move Data Between Apache Hadoop and Oracle Database for Customer 360-Degree Analytics;Customer 360-degree views require data from mobile device feeds, online community logs, social media feeds (often processed with Apache Hadoop), and a wealth of information stored in the database. Tools for data movement between big data platforms and Oracle Database are necessary for machine learning and complex analytics using all this data. In this session, step through using some of these tools with direct path load, SQL, and custom Hive SerDes and understand how they work with big data and database services in Oracle Cloud Infrastructure.;Melliyal Annamalai;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Tutorial;Introductory;Customer 360-degree views require data from mobile device feeds, online community logs, social media feeds (often processed with Apache Hadoop), and a wealth of information stored in the database. Tools for data movement between big data platforms and Oracle Database are necessary for machine learning and complex analytics using all this data. In this session, step through using some of these tools with direct path load, SQL, and custom Hive SerDes and understand how they work with big data and database services in Oracle Cloud Infrastructure.
14932222361110010ba2;Meet the Oracle JavaFX and JDK Client Team;This BOF session is an excellent opportunity to meet development engineers from the Oracle JavaFX, AWT/Swing, and Java 2D teams. It’s expected to be a lively discussion about the development process, issues faced by developers, progress over the past year, and future plans for the Java UI. Likely topics include the new features in JDK 9 and beyond and a discussion of involvement in OpenJDK and OpenJFX projects.;Kevin Rushforth;Java Clients and User Interfaces;BOF (Birds-of-a-Feather) Session;Intermediate;This BOF session is an excellent opportunity to meet development engineers from the Oracle JavaFX, AWT/Swing, and Java 2D teams. It’s expected to be a lively discussion about the development process, issues faced by developers, progress over the past year, and future plans for the Java UI. Likely topics include the new features in JDK 9 and beyond and a discussion of involvement in OpenJDK and OpenJFX projects.
1493070354579001bztO;HarfBuzz: Modern OpenType Layout Comes to JDK 9 (JEP 258);HarfBuzz is the standard OpenType complex text layout library for open source projects, used in Firefox, GNOME, ChromeOS, Chrome, LibreOffice, XeTeX, Android, and KDE. In JDK 9, HarfBuzz is used for text layout, replacing the long-standing use of the deprecated layout component of the ICU library. This gives Java 2D and Swing applications a modern, secure, performant, up-to-date library with better script and font support and better support for advanced typography. This work was done to implement JEP 258 in OpenJDK. This BOF session compares and contrasts its impact on applications, especially emphasizing new-feature support. The session is a forum where the project’s developers can interact with interested Java developers and solicit ideas and feedback.;Philip Race;Java Clients and User Interfaces;BOF (Birds-of-a-Feather) Session;Advanced;HarfBuzz is the standard OpenType complex text layout library for open source projects, used in Firefox, GNOME, ChromeOS, Chrome, LibreOffice, XeTeX, Android, and KDE. In JDK 9, HarfBuzz is used for text layout, replacing the long-standing use of the deprecated layout component of the ICU library. This gives Java 2D and Swing applications a modern, secure, performant, up-to-date library with better script and font support and better support for advanced typography. This work was done to implement JEP 258 in OpenJDK. This BOF session compares and contrasts its impact on applications, especially emphasizing new-feature support. The session is a forum where the project’s developers can interact with interested Java developers and solicit ideas and feedback.
1499782723898001QZ9J;JUnit 5;This BOF session briefly reviews the journey that has led to the upcoming release of JUnit 5. One or more members of the JUnit 5 team will be there to share what they’ve learned in the past two years and to answer any questions you have. Anyone interested in learning more about JUnit Jupiter (the new programming and extension models in JUnit 5) or in discussing how to build a TestEngine on the new JUnit platform is welcome to join.;Sam Brannen;Core Java Platform;BOF (Birds-of-a-Feather) Session;Introductory;This BOF session briefly reviews the journey that has led to the upcoming release of JUnit 5. One or more members of the JUnit 5 team will be there to share what they’ve learned in the past two years and to answer any questions you have. Anyone interested in learning more about JUnit Jupiter (the new programming and extension models in JUnit 5) or in discussing how to build a TestEngine on the new JUnit platform is welcome to join.
1499986328105001Y3U5;Blockchain Introduction for Developers;This session introduces blockchain technology to nonfinancial people. It highlights the architecture, history, and technical solutions. It also investigates what blockchain means in fintech (the financial technology industry) and how this can be applied to healthcare (electronic patient files) and general case management involving many stakeholders. The session concludes with some code examples from open source projects to help developers who want to get started with this architectural style.;Lonneke Dikmans;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;BOF (Birds-of-a-Feather) Session;Introductory;This session introduces blockchain technology to nonfinancial people. It highlights the architecture, history, and technical solutions. It also investigates what blockchain means in fintech (the financial technology industry) and how this can be applied to healthcare (electronic patient files) and general case management involving many stakeholders. The session concludes with some code examples from open source projects to help developers who want to get started with this architectural style.
1499986691137001Ydml;Machine Learning Applied to Regulatory Technology;Financial authorities face big challenges today: the number of rules that need to be enforced is increasing, and they are becoming more complex. The increased workload forces them to hire new people with less experience. In this session, you will learn how machine learning can help regulatory organizations improve supervision quality while decreasing the effort of training new people. The presentation discusses different types of machine learning that can be applied in such situations, the challenges associated with implementing machine learning, and the technologies that can be used. ;Lonneke Dikmans;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;BOF (Birds-of-a-Feather) Session;Introductory;Financial authorities face big challenges today: the number of rules that need to be enforced is increasing, and they are becoming more complex. The increased workload forces them to hire new people with less experience. In this session, you will learn how machine learning can help regulatory organizations improve supervision quality while decreasing the effort of training new people. The presentation discusses different types of machine learning that can be applied in such situations, the challenges associated with implementing machine learning, and the technologies that can be used. 
1492567077162001YXjb;Goin’ Mobile: Developing JavaFX Apps for iOS and Android with Java 9;JavaFX 9 offers a rich set of visually appealing GUI components with a convenient property binding mechanism for event handling. This tutorial shows you how to develop modular mobile applications on Java 9 with JavaFX and deploy them to iOS and Android devices. The tutorial begins with an overview of JavaFX GUI controls, property binding techniques, and how to use FXML effectively with JavaFX. You’ll learn how to design and deploy mobile applications with Java 9 modules and deploy them to different platforms from one codebase. You’ll also learn how to use local binding techniques with GUI control properties and how to apply remote binding to cloud application connections.;Paul Anderson;Java Clients and User Interfaces;Tutorial;Introductory;JavaFX 9 offers a rich set of visually appealing GUI components with a convenient property binding mechanism for event handling. This tutorial shows you how to develop modular mobile applications on Java 9 with JavaFX and deploy them to iOS and Android devices. The tutorial begins with an overview of JavaFX GUI controls, property binding techniques, and how to use FXML effectively with JavaFX. You’ll learn how to design and deploy mobile applications with Java 9 modules and deploy them to different platforms from one codebase. You’ll also learn how to use local binding techniques with GUI control properties and how to apply remote binding to cloud application connections.
1494000355088001Udpv;Lambda Programming Laboratory;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Interested in trying out the Lambda and Streams features of Java 8? If so, this “higher-order lab” is for you. Participants will use JDK 8 and NetBeans to work on exercises intended to teach them about the Lambda feature of the Java programming language and the new Streams Library API. The exercises start off very simply, so beginners can learn the fundamentals. Additional exercises covering grouping and parallel reduction aim to challenge more-advanced participants. You need not have any prior knowledge of Lambda, although having attended a prior JavaOne Lambda session or tutorial will be helpful.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf;Stuart Marks;Core Java Platform;HOL (Hands-on Lab) Session;Introductory;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Interested in trying out the Lambda and Streams features of Java 8? If so, this “higher-order lab” is for you. Participants will use JDK 8 and NetBeans to work on exercises intended to teach them about the Lambda feature of the Java programming language and the new Streams Library API. The exercises start off very simply, so beginners can learn the fundamentals. Additional exercises covering grouping and parallel reduction aim to challenge more-advanced participants. You need not have any prior knowledge of Lambda, although having attended a prior JavaOne Lambda session or tutorial will be helpful.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf
1492670983774001k2Sv;“So, What Are They Talking About Now?”: Visual Topic Analysis with Graph ;As data sources become more and more numerous, value is extracted via recognition of the relationships and patterns between them. An example is topic modeling: a company may, for example, want to get the most-important topics in customer support requests and track those topics over time. This tutorial uses a graph-based approach on a dataset from an online forum. Graph representation of the dataset naturally reveals relationships and patterns between data elements as well as their clustering. Also, visualizing the data as a graph can give new insights into what has been discovered. The session also uses modern notebook technology. The user can program the analysis pipeline with JVM languages remotely within a browser. ;Hassan Chafi;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Tutorial;Introductory;As data sources become more and more numerous, value is extracted via recognition of the relationships and patterns between them. An example is topic modeling: a company may, for example, want to get the most-important topics in customer support requests and track those topics over time. This tutorial uses a graph-based approach on a dataset from an online forum. Graph representation of the dataset naturally reveals relationships and patterns between data elements as well as their clustering. Also, visualizing the data as a graph can give new insights into what has been discovered. The session also uses modern notebook technology. The user can program the analysis pipeline with JVM languages remotely within a browser. 
1492779358494001ks44;Adventures with Higher-Order Types in a Purely Functional Language;The Frege project brings Haskell and its extreme type system to the JVM. These types can express higher-order constructs that would otherwise require annotations, extra tooling, or design patterns. This session explores the use of higher-rank and higher-kinded types and shows how they can provide new guarantees at compile time. We can disallow side effects in calls to software transactional memory (STM). We can make sure that JavaFX components are ever touched only in the UI thread. We can assert that parallel computations change no state. Let’s explore these benefits and how knowing the very foundations of computational science can change your programming style.;Dierk Koenig;Emerging Languages;Tutorial;Intermediate;The Frege project brings Haskell and its extreme type system to the JVM. These types can express higher-order constructs that would otherwise require annotations, extra tooling, or design patterns. This session explores the use of higher-rank and higher-kinded types and shows how they can provide new guarantees at compile time. We can disallow side effects in calls to software transactional memory (STM). We can make sure that JavaFX components are ever touched only in the UI thread. We can assert that parallel computations change no state. Let’s explore these benefits and how knowing the very foundations of computational science can change your programming style.
1492680434398001jcuk;Baking a Java EE 8 Micro Pi;Microservices are already a popular architecture for new applications, particularly with the modern need for applications to be cloud-native and light enough for the Internet of Things. One of the key challenges of breaking up monoliths into microservices is orchestration. This tutorial looks at some of the brand-new features and APIs in Java EE 8 that can help and presents an interactive Raspberry Pi-based demo that shows how easily messaging can be made cloud-ready with JCA connectors.;Ondrej Mihalyi;Java, Cloud, and Server-Side Development;Tutorial;Introductory;Microservices are already a popular architecture for new applications, particularly with the modern need for applications to be cloud-native and light enough for the Internet of Things. One of the key challenges of breaking up monoliths into microservices is orchestration. This tutorial looks at some of the brand-new features and APIs in Java EE 8 that can help and presents an interactive Raspberry Pi-based demo that shows how easily messaging can be made cloud-ready with JCA connectors.
1492712048741001kFVu;Free Your Lambdas;Lambdas can be used in many places and in many ways. This tutorial session shows how lambdas and functional interfaces can be used to create new APIs and implement well-known patterns. It starts at the very beginning: how to write a lambda from an instance of an anonymous class. Then it shows some of the new methods added to the Collection API that leverage lambdas and default methods in interfaces, allowing for the addition of new methods while improving performance. The presentation also covers how functional interfaces have been used to create new APIs, mainly on real examples from the JDK. Finally, it shows how well-known patterns can be implemented with lambdas, leading to cleaner and more robust code.;José Paumard;Core Java Platform;Tutorial;Introductory;Lambdas can be used in many places and in many ways. This tutorial session shows how lambdas and functional interfaces can be used to create new APIs and implement well-known patterns. It starts at the very beginning: how to write a lambda from an instance of an anonymous class. Then it shows some of the new methods added to the Collection API that leverage lambdas and default methods in interfaces, allowing for the addition of new methods while improving performance. The presentation also covers how functional interfaces have been used to create new APIs, mainly on real examples from the JDK. Finally, it shows how well-known patterns can be implemented with lambdas, leading to cleaner and more robust code.
1492764737203001085Z;Managing Microservices with Terraform, Docker, and the Cloud;Much has been written about how to write microservices but not enough about how to effectively deploy and manage them. Microservices architecture multiplies the number of deployables IT has to manage by at least 10x. Terraform and Docker are increasingly being leveraged to facilitate microservice environments. Terraform has become the leading coding framework for building and managing change in cloud environments. In this tutorial, learn best practices for deploying and managing microservices in cloud environments. It leverages true “infrastructure as code,” using Terraform. That code makes it easy to deploy and scale software including Docker images. The session is targeted at architects and team leads.;Derek Ashmore;Java, Cloud, and Server-Side Development;Tutorial;Intermediate;Much has been written about how to write microservices but not enough about how to effectively deploy and manage them. Microservices architecture multiplies the number of deployables IT has to manage by at least 10x. Terraform and Docker are increasingly being leveraged to facilitate microservice environments. Terraform has become the leading coding framework for building and managing change in cloud environments. In this tutorial, learn best practices for deploying and managing microservices in cloud environments. It leverages true “infrastructure as code,” using Terraform. That code makes it easy to deploy and scale software including Docker images. The session is targeted at architects and team leads.
1492891282691001gpJo;Rapid Development Tools for Java EE 8;The NetBeans IDE brings the speed of enterprise applications development to a new level. You can create a fully operational Java EE 8 application in a few minutes from scratch, and you can select the technologies based on preferences such as JAX-RS 2.1, JSON-B, JPA, JAXB, Security API, JWT, CDI, Bean Validation 2.0, Swagger, MVC 1.0, Angular, Payara, Docker, Arquillian, and jUnit 5. The solution features a rich web UI, business logic, security, a REST API, and more. Don’t miss this session if you are serious about saving time.;Mert Caliskan;Java Development Tools;Tutorial;Intermediate;The NetBeans IDE brings the speed of enterprise applications development to a new level. You can create a fully operational Java EE 8 application in a few minutes from scratch, and you can select the technologies based on preferences such as JAX-RS 2.1, JSON-B, JPA, JAXB, Security API, JWT, CDI, Bean Validation 2.0, Swagger, MVC 1.0, Angular, Payara, Docker, Arquillian, and jUnit 5. The solution features a rich web UI, business logic, security, a REST API, and more. Don’t miss this session if you are serious about saving time.
1494198846083001UUOK;Journey’s End: Collection and Reduction in the Streams API;For streams to do useful work, they must end in a terminal operation. Most often that will be a collector, a new kind of operation invented for the Streams API. To use streams effectively, you need to understand how collectors work, what predefined collectors are available, and the factors that affect collector performance. This deep dive into the Collectors API explores the many predefined collectors and how to combine them for added power. You’ll do practical work, learning how to choose the right composition of collectors to solve practical programming problems. And you’ll see the difference between collection and reduction, how to recognize when you need to write your own collector, and the principles and rules for doing that.;Maurice Naftalin;Core Java Platform;Tutorial;Intermediate;For streams to do useful work, they must end in a terminal operation. Most often that will be a collector, a new kind of operation invented for the Streams API. To use streams effectively, you need to understand how collectors work, what predefined collectors are available, and the factors that affect collector performance. This deep dive into the Collectors API explores the many predefined collectors and how to combine them for added power. You’ll do practical work, learning how to choose the right composition of collectors to solve practical programming problems. And you’ll see the difference between collection and reduction, how to recognize when you need to write your own collector, and the principles and rules for doing that.
1497013440585001CPVf;A Practical Guide to Cloud-Native Java Apps and Continuous Delivery;This session shows how to get started with getting a simple Java app to run on  Kubernetes in minutes, make changes on your workstation, and deploying it onto a Kubernetes cluster instantly. It then introduces concepts of continuous delivery, focusing on monitoring the app with Prometheus. Having shown a simple app, the presentation follows up with a complete microservices demo app, a sock shop that uses Spring as well as non-Java services (including Node.js and Go).;Ilya Dmitrichenko;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Tutorial;Introductory;This session shows how to get started with getting a simple Java app to run on  Kubernetes in minutes, make changes on your workstation, and deploying it onto a Kubernetes cluster instantly. It then introduces concepts of continuous delivery, focusing on monitoring the app with Prometheus. Having shown a simple app, the presentation follows up with a complete microservices demo app, a sock shop that uses Spring as well as non-Java services (including Node.js and Go).
14945781523240017TAs;Simplified and Fast Fraud Detection;This session demonstrates how, using SQL pattern matching techniques, you can speed up searching for fraudulent events within unstructured data, such as JSON files, compared to using other programming languages. As part of the presentation, a live demo reviews a specific business use case from financial services and provides conceptual simplified SQL to solve an evolving set of business requirements. You’ll see a simple five-step framework for constructing pattern-matching queries, and a live demonstration shows how easy it is to write and amend SQL-based pattern queries, compared to other programming languages.;Keith Laker;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Tutorial;Intermediate;This session demonstrates how, using SQL pattern matching techniques, you can speed up searching for fraudulent events within unstructured data, such as JSON files, compared to using other programming languages. As part of the presentation, a live demo reviews a specific business use case from financial services and provides conceptual simplified SQL to solve an evolving set of business requirements. You’ll see a simple five-step framework for constructing pattern-matching queries, and a live demonstration shows how easy it is to write and amend SQL-based pattern queries, compared to other programming languages.
1498574182891001k21t;Refactoring to Functional Style;In Java we've programmed with the imperative style for a few decades now. With Java 8, we can also code in functional style, which has several benefits: concise code that’s more expressive, easier to understand, and easier to change. But the transition from imperative to functional style is a hard journey. It’s not as much an issue of getting comfortable with the syntax—it’s the challenge of thinking functionally. What better way to learn that transition than taking imperative code and refactoring it to a more functional style. This presentation starts with multiple code examples written in imperative style and shows how to approach refactoring them to functional style.;Venkat Subramaniam;Core Java Platform;Conference Session;Introductory;In Java we've programmed with the imperative style for a few decades now. With Java 8, we can also code in functional style, which has several benefits: concise code that’s more expressive, easier to understand, and easier to change. But the transition from imperative to functional style is a hard journey. It’s not as much an issue of getting comfortable with the syntax—it’s the challenge of thinking functionally. What better way to learn that transition than taking imperative code and refactoring it to a more functional style. This presentation starts with multiple code examples written in imperative style and shows how to approach refactoring them to functional style.
1498574555090001Be6V;Twelve Ways to Make Code Suck Less;We all have seen our share of bad code and some really good code as well. What are some of the common antipatterns that seem to be recurring over and over in code that sucks? By learning about these code smells and avoiding them, we can greatly help make our code better. Come to this session to learn about some common code smells and how to improve the quality of code.;Venkat Subramaniam;Core Java Platform;Conference Session;Introductory;We all have seen our share of bad code and some really good code as well. What are some of the common antipatterns that seem to be recurring over and over in code that sucks? By learning about these code smells and avoiding them, we can greatly help make our code better. Come to this session to learn about some common code smells and how to improve the quality of code.
1498573747781001kQIG;Java 8 Programming Idioms;Several developers and organizations are beginning to make use of Java 8. With anything that’s new, we often learn it the hard way. By stepping back and taking a look at programming style as idioms, we can quickly gravitate toward better coding style and also avoid some common traps we often get drawn toward. Learn more in this session.;Venkat Subramaniam;Core Java Platform;Conference Session;Intermediate;Several developers and organizations are beginning to make use of Java 8. With anything that’s new, we often learn it the hard way. By stepping back and taking a look at programming style as idioms, we can quickly gravitate toward better coding style and also avoid some common traps we often get drawn toward. Learn more in this session.
1497776110080001uaIr;Developer Advocate Amotivational Syndrome;Having been a dev advocate for more than 10 years and at a range of companies, this session’s speaker talks about things that have killed his zest for his job. He covers examples from the small things up to the things that end up either leading to quitting or maybe even changing careers. ;Steven Pousty;Developer Community Day: Developer Relations;Conference Session;Introductory;Having been a dev advocate for more than 10 years and at a range of companies, this session’s speaker talks about things that have killed his zest for his job. He covers examples from the small things up to the things that end up either leading to quitting or maybe even changing careers. 
1505401671852001d3PS;Opening Up Java EE: Panel Discussion with Oracle, IBM, Red Hat, and the Eclipse Foundation;Oracle, in partnership with IBM and Red Hat, has announced its intention to move Java EE technologies to the Eclipse Foundation, following the delivery and completion of Java EE 8. Attend this session to hear from representatives of Oracle, IBM, Red Hat, and the Eclipse Foundation on the status of the project, what to expect over the next three to six months, and how this will benefit the Java EE community. Come learn how you can participate.;Mark Little;Java, Cloud, and Server-Side Development;Conference Session;Introductory;Oracle, in partnership with IBM and Red Hat, has announced its intention to move Java EE technologies to the Eclipse Foundation, following the delivery and completion of Java EE 8. Attend this session to hear from representatives of Oracle, IBM, Red Hat, and the Eclipse Foundation on the status of the project, what to expect over the next three to six months, and how this will benefit the Java EE community. Come learn how you can participate.
1506051272965001dxnT;The Influential Engineer: Overcoming Resistance to Change;By the end of this conference, you will have learned about many new tools and technologies. The easy part is done—now for the hard part: getting the rest of the team and management on board with the new ideas. Easier said than done. Whether you want to effect culture change in your organization, lead the transition toward a new technology, or simply ask for better tools, you must first understand that having a “good idea” is just the beginning. How can you dramatically increase your odds of success? You will learn 12 concrete strategies to build consensus within your team as well as 6 techniques to dramatically increase the odds that the other person will say “Yes” to your requests.;Michael Carducci;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;By the end of this conference, you will have learned about many new tools and technologies. The easy part is done—now for the hard part: getting the rest of the team and management on board with the new ideas. Easier said than done. Whether you want to effect culture change in your organization, lead the transition toward a new technology, or simply ask for better tools, you must first understand that having a “good idea” is just the beginning. How can you dramatically increase your odds of success?You will learn 12 concrete strategies to build consensus within your team as well as 6 techniques to dramatically increase the odds that the other person will say “Yes” to your requests.
1506928380991001AuKh;Deep Learning for Enterprise With Skymind's Deeplearning4j;Deep learning is capable of state-of-the-art accuracy on many machine perception tasks, like image recognition and anomaly detection. But data science teams have trouble shipping their work to production. Deeplearning4j makes it easy to build robust data pipelines, train deep learning models quickly, and deploy them to production environments. With its enterprise distribution, the Skymind Intelligence Layer, Skymind helps large organizations increase the productivity of their data science teams on top of their existing stack to create create high-throughput AI solutions. ;Chris Nicholson;Core Java Platform;Conference Session;Introductory;Deep learning is capable of state-of-the-art accuracy on many machine perception tasks, like image recognition and anomaly detection. But data science teams have trouble shipping their work to production. Deeplearning4j makes it easy to build robust data pipelines, train deep learning models quickly, and deploy them to production environments. With its enterprise distribution, the Skymind Intelligence Layer, Skymind helps large organizations increase the productivity of their data science teams on top of their existing stack to create create high-throughput AI solutions. 
1505254317854001aKAl;Five Killer Tricks to Make Your Java Web App Look Awesome;Java developers are often frustrated with the results they get when trying to design web apps. In the words of Java Champion Bruno Souza, “we always do ugly things... always.” In this session learn a five-step lesson on how to get from a blank page to a fully responsive, mobile-first, accessible dashboard ready to use on enterprise applications. And discover how to apply it on your existing Java web codebase. The session also covers how to use Bootstrap, the world’s most popular front-end component library, and explores Patternfly, a Bootstrap-based UI framework for enterprise web applications. Come away understanding how to connect to your legacy Java back-end frustration-free, giving your web app an instant facelift that your customers will love.;Andres Galante;Developer Community Day: Community;Conference Session;Intermediate;Java developers are often frustrated with the results they get when trying to design web apps. In the words of Java Champion Bruno Souza, “we always do ugly things... always.” In this session learn a five-step lesson on how to get from a blank page to a fully responsive, mobile-first, accessible dashboard ready to use on enterprise applications. And discover how to apply it on your existing Java web codebase. The session also covers how to use Bootstrap, the world’s most popular front-end component library, and explores Patternfly, a Bootstrap-based UI framework for enterprise web applications. Come away understanding how to connect to your legacy Java back-end frustration-free, giving your web app an instant facelift that your customers will love.
1505255284753001aa5h;Learn the Concepts Behind Those 10 Java Challenges and Eliminate Stressful Bugs;Bugs are a daily stress in our work as Java developers. Those pesky bugs hide behind important Java concepts, there is no way out of this. But can we have fun hunting them? How about solving a series of Java puzzles and challenges as a way to learn concepts and save a lot of time finding those tricky bugs? In this session attendees solve fun Java challenges and gain a clear understanding of what causes the most stressful Java bugs—and have fun eliminating them from your projects.;Rafael Chinelato Del Nero rafaDelNero;Developer Community Day: Community;Conference Session;Intermediate;Bugs are a daily stress in our work as Java developers. Those pesky bugs hide behind important Java concepts, there is no way out of this. But can we have fun hunting them? How about solving a series of Java puzzles and challenges as a way to learn concepts and save a lot of time finding those tricky bugs? In this session attendees solve fun Java challenges and gain a clear understanding of what causes the most stressful Java bugs—and have fun eliminating them from your projects.
149357880659700185Hb;JGrounds: Playgrounds App for Java;Java is one of the most relevant languages and among the most powerful software platforms that exist today. Using Java for primary programming education is challenging, however, due to the complexity of the language and existing IDEs. Instead of teaching “toy” languages at the beginning, we need the right interactive tools for teaching Java. This BoF session discusses the present and the future of the JGrounds app and related projects. The JGrounds app features interesting story-based introductions to various topics. Everybody is welcome to participate! We need coders, artists, and teachers. We need <i>you</i>!;Michael Hoffer;Java Development Tools;BOF (Birds-of-a-Feather) Session;Introductory;Java is one of the most relevant languages and among the most powerful software platforms that exist today. Using Java for primary programming education is challenging, however, due to the complexity of the language and existing IDEs. Instead of teaching “toy” languages at the beginning, we need the right interactive tools for teaching Java. This BoF session discusses the present and the future of the JGrounds app and related projects. The JGrounds app features interesting story-based introductions to various topics. Everybody is welcome to participate! We need coders, artists, and teachers. We need <i>you</i>!
1493711970153001seFW;Autonomous Driving and Factory Automation: JSR 282 Brings Java to New Domains;The Real-Time Specification for Java (RTSJ) is increasingly being used in control and monitoring applications such as autonomous driving and factory automation. The latest release helps drive this change. Conventional Java has made inroads into the Industrial Internet of Things (IIoT) by providing gateway functionality but cannot meet the requirements of edge analytics and system control, which require real-time response. RTSJ 2.0 bridges the gap between the requirements of the internet and device programming to produce secure, dynamic embedded systems. The RTSJ refines the semantics of the Java virtual machine and adds APIs necessary for real-time applications while retaining full compatibility with conventional Java programs. Learn more in this session.;James Hunt;Java and Devices;BOF (Birds-of-a-Feather) Session;Intermediate;The Real-Time Specification for Java (RTSJ) is increasingly being used in control and monitoring applications such as autonomous driving and factory automation. The latest release helps drive this change. Conventional Java has made inroads into the Industrial Internet of Things (IIoT) by providing gateway functionality but cannot meet the requirements of edge analytics and system control, which require real-time response. RTSJ 2.0 bridges the gap between the requirements of the internet and device programming to produce secure, dynamic embedded systems. The RTSJ refines the semantics of the Java virtual machine and adds APIs necessary for real-time applications while retaining full compatibility with conventional Java programs. Learn more in this session.
14936467492310018kOo;The Legacy Developer’s Guide to Java 9;One of the challenges of having to maintain a legacy Java application is that you might be shut out from all the fun when a new version of Java comes along. Java 9, like its predecessors, has a bunch of great new APIs and language features, but developers remembering past experiences need to know how to use those new features without breaking compatibility with earlier versions of Java. Java 9’s designers are aware of this, and they’ve worked hard to make new features accessible to developers who have to think about their applications’ support of older versions of Java. In this session, learn about Java 9 features that are ready to use even if you have an older application and that ensure that customers can run your application with ease.;Wayne Citrin;Java Development Tools;BOF (Birds-of-a-Feather) Session;Advanced;One of the challenges of having to maintain a legacy Java application is that you might be shut out from all the fun when a new version of Java comes along. Java 9, like its predecessors, has a bunch of great new APIs and language features, but developers remembering past experiences need to know how to use those new features without breaking compatibility with earlier versions of Java. Java 9’s designers are aware of this, and they’ve worked hard to make new features accessible to developers who have to think about their applications’ support of older versions of Java. In this session, learn about Java 9 features that are ready to use even if you have an older application and that ensure that customers can run your application with ease.
1493795540086001PJWy;Distinguish Pop Music from Heavy Metal with Apache Spark MLlib;Machine learning may be overhyped nowadays, but there is still a strong belief that this area is exclusively for data scientists with an in-depth mathematical background who leverage the Python or R ecosystems. Obviously, there is some truth to this statement, but Java engineers can also take the best of the machine-learning world from an applied perspective by using our native language and familiar frameworks such as Apache Spark. This presentation explains how to use Apache Spark MLlib to build, step by step, a supervised learning NLP pipeline to distinguish pop music from heavy metal—and have fun in the process. Along the way, you’ll get an overview of the simplest machine-learning tasks and algorithms as well as feature extraction approaches.;Taras Matyashovskyy;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;BOF (Birds-of-a-Feather) Session;Introductory;Machine learning may be overhyped nowadays, but there is still a strong belief that this area is exclusively for data scientists with an in-depth mathematical background who leverage the Python or R ecosystems. Obviously, there is some truth to this statement, but Java engineers can also take the best of the machine-learning world from an applied perspective by using our native language and familiar frameworks such as Apache Spark. This presentation explains how to use Apache Spark MLlib to build, step by step, a supervised learning NLP pipeline to distinguish pop music from heavy metal—and have fun in the process. Along the way, you’ll get an overview of the simplest machine-learning tasks and algorithms as well as feature extraction approaches.
14936825958460018M46;How to Be Accepted to Speak at a Conference;Speaking at well-recognized software conferences can be a great boost to your career. It opens up new career or business opportunities and gives you the opportunity to meet new people, not to mention the ability to attend a conference for free. Most conferences have a call for papers. It’s easy: just send your awesome bio and abstract, wait a couple of weeks/months, and voilà, you’ll be a speaker. Not so fast! Some conferences get a lot of submissions…. This session reveals what the review process looks like, how to make your abstract stand out, and all the other things you might have been afraid to ask but always wanted to.;Andrzej Grzesik;Java Community;BOF (Birds-of-a-Feather) Session;Introductory;Speaking at well-recognized software conferences can be a great boost to your career. It opens up new career or business opportunities and gives you the opportunity to meet new people, not to mention the ability to attend a conference for free. Most conferences have a call for papers. It’s easy: just send your awesome bio and abstract, wait a couple of weeks/months, and voilà, you’ll be a speaker. Not so fast! Some conferences get a lot of submissions…. This session reveals what the review process looks like, how to make your abstract stand out, and all the other things you might have been afraid to ask but always wanted to.
1493752926873001Pt7f;Microservices Mishaps;Clearent’s greenfield project started three years ago, and the company was excited to use microservices from the start. This session goes into some of the successes of that project but focuses on the failures, from small missteps to large architecture misses and holes that had this session’s speaker and her colleagues scrambling to refactor and innovate. With all the failures, she also talks about solutions and different ways of thinking about software development. It’s really about the journey into microservices and the new delivery style in software development that is becoming the norm. Jenkins, Docker, Rancher, and automated testing are all included in the discussion.;Jill Willard;Java Development Tools;BOF (Birds-of-a-Feather) Session;Introductory;Clearent’s greenfield project started three years ago, and the company was excited to use microservices from the start. This session goes into some of the successes of that project but focuses on the failures, from small missteps to large architecture misses and holes that had this session’s speaker and her colleagues scrambling to refactor and innovate. With all the failures, she also talks about solutions and different ways of thinking about software development. It’s really about the journey into microservices and the new delivery style in software development that is becoming the norm. Jenkins, Docker, Rancher, and automated testing are all included in the discussion.
14939872592540015sQj;Securing Your Java Application: Is SecurityManager the Answer?;The SecurityManager is the central point of access control for Java applications. However, using or deploying it is not always straightforward. And depending on your use case, it may not satisfy all your security requirements. This BOF session is an informal discussion about the SecurityManager and how it is used in practice. Together we will try to identify various challenges associated with using the SecurityManager.;Sean Mullan;Core Java Platform;BOF (Birds-of-a-Feather) Session;Intermediate;The SecurityManager is the central point of access control for Java applications. However, using or deploying it is not always straightforward. And depending on your use case, it may not satisfy all your security requirements. This BOF session is an informal discussion about the SecurityManager and how it is used in practice. Together we will try to identify various challenges associated with using the SecurityManager.
1492809991437001Aeqi;JSF 2.3 in Action;JavaServer Faces (JSF) is still one of the most popular Java web application frameworks. JSF 2.3, part of Java EE 8, is now available. This version includes some great community-driven features such as multicomponent validation, enhanced CDI integration, WebSocket integration, Java Time API support, and support for other collection types for UIDat and UIRepeat. This session examines these new features as well as some JSF 2.2 features such as HTML5-friendly markup, Faces Flows, and Resource Library Contracts. Come to this session to see demos of these features live, in action. ;Kito Mann;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Intermediate;JavaServer Faces (JSF) is still one of the most popular Java web application frameworks. JSF 2.3, part of Java EE 8, is now available. This version includes some great community-driven features such as multicomponent validation, enhanced CDI integration, WebSocket integration, Java Time API support, and support for other collection types for UIDat and UIRepeat. This session examines these new features as well as some JSF 2.2 features such as HTML5-friendly markup, Faces Flows, and Resource Library Contracts. Come to this session to see demos of these features live, in action. 
1492847122815001ADi0;Java, Pi’s, and Flying Sharks: Or How to Create a Java Airship in <127 Grams;We tell ourselves that Java is everywhere. Well, maybe now that’s true. Air Swimmers are inflatable devices that have infrared-based remote controls. The usual way to hack these Swimmers is to replace the handheld infrared controller with a computer. This session’s speaker explains how he went one step further and put Java running on a Raspberry Pi inside an Air Swimmer Shark to make the first-ever autonomous Java Shark with webcam. Apart from the challenges of controlling the shark, he discusses how to make this all happen within a weight limit of 5 ounces. How do you power the Pi? How to make it autonomous? How does it communicate with the world? And how do you get the shark down from the ceiling when the juice runs out? ;Steve Poole;Java and Devices;BOF (Birds-of-a-Feather) Session;Introductory;We tell ourselves that Java is everywhere. Well, maybe now that’s true. Air Swimmers are inflatable devices that have infrared-based remote controls. The usual way to hack these Swimmers is to replace the handheld infrared controller with a computer. This session’s speaker explains how he went one step further and put Java running on a Raspberry Pi inside an Air Swimmer Shark to make the first-ever autonomous Java Shark with webcam. Apart from the challenges of controlling the shark, he discusses how to make this all happen within a weight limit of 5 ounces. How do you power the Pi? How to make it autonomous? How does it communicate with the world? And how do you get the shark down from the ceiling when the juice runs out? 
14927743892970010Or7;TomTom Cloud Healer: Cloud-Agnostic Self-Managed Instance Recycling for Java;Java apps in the cloud can sometimes become unhealthy or experience slower performance. TomTom Cloud Healer (TTCH), a cloud-agnostic open source java library, enables graceful self-termination of the unhealthy instance and replacing it with a healthier instance or a bunch of instances. This session presents real-life scenarios illustrating when custom recycling is required, explains TTCH advantages over load balancer health probes, and shows how your app can use TTCH. Participants will develop a simple Java app, deploy it into the cloud, and see TTCH in action. The end of the session covers the inner stucture of TTCH, so you will know how TTHC hides low-level cloud APIs and how to extend supported cloud providers if you need to. Currently TTCH supports AWS and Azure.;Fedor Romanov;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Intermediate;Java apps in the cloud can sometimes become unhealthy or experience slower performance. TomTom Cloud Healer (TTCH), a cloud-agnostic open source java library, enables graceful self-termination of the unhealthy instance and replacing it with a healthier instance or a bunch of instances. This session presents real-life scenarios illustrating when custom recycling is required, explains TTCH advantages over load balancer health probes, and shows how your app can use TTCH. Participants will develop a simple Java app, deploy it into the cloud, and see TTCH in action. The end of the session covers the inner stucture of TTCH, so you will know how TTHC hides low-level cloud APIs and how to extend supported cloud providers if you need to. Currently TTCH supports AWS and Azure.
1492845239226001AosI;Deep Learning and Image Recognition for Java Developers;Deep learning provides state-of-the-art image recognition that can be used for tasks such as object recognition, automatic image classification, and tagging. Application domains include augmented reality, visual search, medical imaging, advertising, and more. This session presents a tool for building image recognition solutions based on deep learning and the NetBeans platform. The tool can also be integrated with the NetBeans IDE to provide an out-of-the box deep learning solution for Java developers. The session is intended for developers interested in the development of Java applications that require advanced image recognition. Participants will get the basics  of image recognition with deep learning and how to implement it in their Java applications.;Zoran Sevarac;Java Development Tools;BOF (Birds-of-a-Feather) Session;Intermediate;Deep learning provides state-of-the-art image recognition that can be used for tasks such as object recognition, automatic image classification, and tagging. Application domains include augmented reality, visual search, medical imaging, advertising, and more. This session presents a tool for building image recognition solutions based on deep learning and the NetBeans platform. The tool can also be integrated with the NetBeans IDE to provide an out-of-the box deep learning solution for Java developers. The session is intended for developers interested in the development of Java applications that require advanced image recognition. Participants will get the basics  of image recognition with deep learning and how to implement it in their Java applications.
1492827559810001TIT5;How to Run a Successful Open Source Java EE Project;Running an open source Java EE project can bring unique challenges for project managers and developers. Dataverse, an open source research data repository platform developed in an academic environment, has attracted interest from a growing number of developers who need to be brought up to speed with technologies such as JSF and CDI. Sysadmins in higher education have little to no experience with GlassFish. The Dataverse team at Harvard has more than 10 years of experience promoting and supporting the use of Java EE. This session covers community building, sysadmin support, automating installations, writing effective documentation, streamlining open source contributions, juggling communication channels, balancing priorities, and more.;Philip Durbin;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Intermediate;Running an open source Java EE project can bring unique challenges for project managers and developers. Dataverse, an open source research data repository platform developed in an academic environment, has attracted interest from a growing number of developers who need to be brought up to speed with technologies such as JSF and CDI. Sysadmins in higher education have little to no experience with GlassFish. The Dataverse team at Harvard has more than 10 years of experience promoting and supporting the use of Java EE. This session covers community building, sysadmin support, automating installations, writing effective documentation, streamlining open source contributions, juggling communication channels, balancing priorities, and more.
14927108422590010PkF;Meet the JCP and Java Standards Leaders;In this informal BOF session, meet leaders working on Java standards: JCP spec leads, OpenJDK Adoption Group leads, JCP EC members, JCP program office members/leaders, and Adopt-a-JSR leaders. Ask questions of the people working to gain more developer involvement in Java standards as well as the language and the platform itself. All levels of experience are welcome. Get your questions answered, and come away with some concrete activities you can start to help influence the future of Java.;Linda DeMichiel;Java Community;BOF (Birds-of-a-Feather) Session;Introductory;In this informal BOF session, meet leaders working on Java standards: JCP spec leads, OpenJDK Adoption Group leads, JCP EC members, JCP program office members/leaders, and Adopt-a-JSR leaders. Ask questions of the people working to gain more developer involvement in Java standards as well as the language and the platform itself. All levels of experience are welcome. Get your questions answered, and come away with some concrete activities you can start to help influence the future of Java.
1491849007966001S80B;Apache Maven BOF;This BOF session gives you a  chance to talk with some developers behind Apache Maven. Hear about Maven 3.5.0 and the drafts they have for the short and longer term. Ask questions about best practices, Jigsaw, or any other issue that has been bothering you for some time. This is also a meeting in which the Maven team can hear the wishes of the community and understand developers’ needs.;Manfred Moser;Java Development Tools;BOF (Birds-of-a-Feather) Session;Intermediate;This BOF session gives you a  chance to talk with some developers behind Apache Maven. Hear about Maven 3.5.0 and the drafts they have for the short and longer term. Ask questions about best practices, Jigsaw, or any other issue that has been bothering you for some time. This is also a meeting in which the Maven team can hear the wishes of the community and understand developers’ needs.
1492107796229001S0CZ;Introduction to Spark Streaming for Real-Time Data Analysis;Spark Streaming is a core extension of the Spark engine for large-scale data processing. It provides scalable, fault-tolerant, high-throughput processing of live data streams. This BOF session examines Spark Streaming in relation to other streaming technologies, such as Storm, Kafka, Flume, and Kinesis. It also provides an overview of how Spark Streaming works as an integral part of Apache Spark and how it integrates with other streaming technologies, and it presents sample code and a demo of real-time analysis combining Spark machine learning and Spark Streaming.;Robert Treacy;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Introductory;Spark Streaming is a core extension of the Spark engine for large-scale data processing. It provides scalable, fault-tolerant, high-throughput processing of live data streams. This BOF session examines Spark Streaming in relation to other streaming technologies, such as Storm, Kafka, Flume, and Kinesis. It also provides an overview of how Spark Streaming works as an integral part of Apache Spark and how it integrates with other streaming technologies, and it presents sample code and a demo of real-time analysis combining Spark machine learning and Spark Streaming.
1491398239137001p7Zk;JavaFX Real-World Applications: Reloaded;Another year has passed, and—believe it or not—some companies are still resisting making the switch to JavaFX. This presentation is the ultimate weapon to convince them that JavaFX is ready for prime time. It shows how JavaFX has been successfully deployed as part of many large and small business-critical applications. The session presents dozen applications from various domains: planning and scheduling solutions, emergency room solutions, call center software, and more.;Alexander Casall;Java Clients and User Interfaces;BOF (Birds-of-a-Feather) Session;Advanced;Another year has passed, and—believe it or not—some companies are still resisting making the switch to JavaFX. This presentation is the ultimate weapon to convince them that JavaFX is ready for prime time. It shows how JavaFX has been successfully deployed as part of many large and small business-critical applications. The session presents dozen applications from various domains: planning and scheduling solutions, emergency room solutions, call center software, and more.
14920915134060015aBG;Modernizing an Enterprise Application with JavaFX 8;This presentation is geared toward technology decision-makers. During the lifecycle of an application, the user interface can end up looking old and tired, long before the ERP system needs replacing. The goal of this presentation is to share some lessons the speaker and his colleagues learned while using JavaFX to incrementally replace the user interface of their ERP application. During this project, Java FX provided greater control of internal software, rapid UI prototyping, and development—proving that a desktop toolkit such as JavaFX can feasibly compete with browser-dependent technologies. It can help enterprise clients in similar situations determine the viability of adding JavaFX into their technology stack.;Derek Fues;Java Clients and User Interfaces;BOF (Birds-of-a-Feather) Session;Introductory;This presentation is geared toward technology decision-makers. During the lifecycle of an application, the user interface can end up looking old and tired, long before the ERP system needs replacing. The goal of this presentation is to share some lessons the speaker and his colleagues learned while using JavaFX to incrementally replace the user interface of their ERP application. During this project, Java FX provided greater control of internal software, rapid UI prototyping, and development—proving that a desktop toolkit such as JavaFX can feasibly compete with browser-dependent technologies. It can help enterprise clients in similar situations determine the viability of adding JavaFX into their technology stack.
1491565492991001AHdD;Big Data Processing with Apache Spark: Scala or Java?;As the de facto standard for large-scale data processing in the Java world, Apache Spark is the logical choice when you want to investigate big data processing. Unfortunately, most resources online refer to the Scala API that is exposed by Spark. What to do if you and your company are much more comfortable with Java than the Scala language? This session discusses whether it makes sense to learn and introduce an entirely new language just for your big data processing.;Erik-Berndt Scheper;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Introductory;As the de facto standard for large-scale data processing in the Java world, Apache Spark is the logical choice when you want to investigate big data processing. Unfortunately, most resources online refer to the Scala API that is exposed by Spark. What to do if you and your company are much more comfortable with Java than the Scala language? This session discusses whether it makes sense to learn and introduce an entirely new language just for your big data processing.
1492450042324001YqnN;Confessions of a Java Educator: 10 Java Insights I Wish I’d Had Earlier;You have made it. Congratulations! You’re a Java developer, and your employer thinks so highly of you that it is sending you to JavaOne to attend great sessions and mingle with amazing people. But this session’s speaker needs your help. He teaches Java programming to 20-year-olds and to adults looking for a career change. He last worked in industry in the ’80s. That is why he is attending JavaOne. What he wants from you is twofold. He asks that you tell him what you learned that you have never used and that you discovered was just plain wrong in the workplace. Then he would like to hear what you wish you had learned. He even reveals some of his own mistakes and discoveries. Here is your opportunity to tell an academic how to do his job. ;Kenneth Fogel;Core Java Platform;BOF (Birds-of-a-Feather) Session;Intermediate;You have made it. Congratulations! You’re a Java developer, and your employer thinks so highly of you that it is sending you to JavaOne to attend great sessions and mingle with amazing people. But this session’s speaker needs your help. He teaches Java programming to 20-year-olds and to adults looking for a career change. He last worked in industry in the ’80s. That is why he is attending JavaOne. What he wants from you is twofold. He asks that you tell him what you learned that you have never used and that you discovered was just plain wrong in the workplace. Then he would like to hear what you wish you had learned. He even reveals some of his own mistakes and discoveries. Here is your opportunity to tell an academic how to do his job. 
1491221883327001fQW9;DevOps: State of the Union;This BOF explores the current status of DevOps, both tooling (such as with Oracle Cloud, Wercker, or Docker) and concepts. It discusses new trends and the future of DevOps, particularly its influence on IoT, and the next evolutionary steps of DevOps in general. This is a great opportunity to meet a lot of well-known DevOps experts and learn from each other. ;Michael Hüttermann;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;BOF (Birds-of-a-Feather) Session;Introductory;This BOF explores the current status of DevOps, both tooling (such as with Oracle Cloud, Wercker, or Docker) and concepts. It discusses new trends and the future of DevOps, particularly its influence on IoT, and the next evolutionary steps of DevOps in general. This is a great opportunity to meet a lot of well-known DevOps experts and learn from each other. 
1492513215372001dkhN;From VMs to Containers: Decompose and Migrate Old Legacy Java EE Applications;It is not a trivial task to decompose large monolithic enterprise applications and migrate them into a multicontainer architecture without redesign. This presentation dives deeply into the decomposition process and the ways to make it smooth as well as how to remove autoscaling and load balancing bottlenecks. You’ll hear about the main roadblocks and possible solutions during migration of GlassFish- and WildFly-based applications, from VMs to containers, based on real experience. ;Ruslan Synytsky;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Intermediate;It is not a trivial task to decompose large monolithic enterprise applications and migrate them into a multicontainer architecture without redesign. This presentation dives deeply into the decomposition process and the ways to make it smooth as well as how to remove autoscaling and load balancing bottlenecks. You’ll hear about the main roadblocks and possible solutions during migration of GlassFish- and WildFly-based applications, from VMs to containers, based on real experience. 
1492977672546001bp8f;Automated Functional Web Testing on the JVM with Geb;The presentation centers on automated functional testing in the Java world, with a particular focus on smoke testing and how to prevent catastrophic failures from reaching the production environment. It shows you how CERN has leveraged Geb—a Groovy-based browser automation tool built on top of Selenium—to develop a full suite of smoke tests for CERN’s electronic document handling (EDH) system, a large web application with more than a million lines of Java code, in production since 1998. It is used to automate as many as 65 administrative processes across all of CERN’s key business areas, such as safety, procurement, finance, customs, and training.;João Silva;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Introductory;The presentation centers on automated functional testing in the Java world, with a particular focus on smoke testing and how to prevent catastrophic failures from reaching the production environment. It shows you how CERN has leveraged Geb—a Groovy-based browser automation tool built on top of Selenium—to develop a full suite of smoke tests for CERN’s electronic document handling (EDH) system, a large web application with more than a million lines of Java code, in production since 1998. It is used to automate as many as 65 administrative processes across all of CERN’s key business areas, such as safety, procurement, finance, customs, and training.
1493044082147001AyP0;How to Write and Ship Better Code with the Apache NetBeans IDE;The mantra of NetBeans is to work out of the box. It contains a wealth of features, tools, and options to help put you ahead with your development. You can reconfigure NetBeans to match your exact preferences and remove features you do not need. The productivity enhancements in NetBeans include a wide range of formatting, code completion, hints, templates, and keyboard options that enable you to write bug-free code quickly and easily. It even enables you to update your codebase to Java 8 with lambda expressions. Integration with Checkstyle, FindBugs, and PMD gives you your own expert code reviewer. In this session, find out how to get NetBeans working harder for you. Also learn why so many developers have already switched to NetBeans.;Georgia Ingham;Java Development Tools;BOF (Birds-of-a-Feather) Session;Intermediate;The mantra of NetBeans is to work out of the box. It contains a wealth of features, tools, and options to help put you ahead with your development. You can reconfigure NetBeans to match your exact preferences and remove features you do not need. The productivity enhancements in NetBeans include a wide range of formatting, code completion, hints, templates, and keyboard options that enable you to write bug-free code quickly and easily. It even enables you to update your codebase to Java 8 with lambda expressions. Integration with Checkstyle, FindBugs, and PMD gives you your own expert code reviewer. In this session, find out how to get NetBeans working harder for you. Also learn why so many developers have already switched to NetBeans.
1492995972846001XZsQ;No More Duplicate Transactions: A Java API for At-Most-Once COMMIT;Ever end up paying your taxes or for the same flight or the same article twice? Upon a break in communication between web applications and the RDBMS, the COMMIT operation returns an error, making a reliable determination of the outcome of the in-flight work a long-standing challenge for web applications. Failing to reliably determine the outcome of the failed COMMIT statement leads to resubmission of the same transaction, so application users end up paying for or buying the same product or service twice. This session describes a Java API that enables applications to ensure at-most-once COMMIT in cooperation with the RDBMs. The session walks through the steps and includes a live demo.;Jean De Lavarene;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Advanced;Ever end up paying your taxes or for the same flight or the same article twice? Upon a break in communication between web applications and the RDBMS, the COMMIT operation returns an error, making a reliable determination of the outcome of the in-flight work a long-standing challenge for web applications. Failing to reliably determine the outcome of the failed COMMIT statement leads to resubmission of the same transaction, so application users end up paying for or buying the same product or service twice. This session describes a Java API that enables applications to ensure at-most-once COMMIT in cooperation with the RDBMs. The session walks through the steps and includes a live demo.
1492996480416001TP7p;Herding Cats: Harvard Dataverse’s Approach to Technical Community Management;Dataverse, an open source Java EE data repository application, has welcomed code contributions from external contributors for more than 10 years. This BOF session begins with a brief introduction to the best ways the presenters have discovered to make these contributions more successful: creating a design/review/QA process for accepting external pull requests to the core code, developing an extensible architecture using the Service Provider Interface (SPI) for plugins to the application, and building a robust API to allow for complementary tools to be created by experts in those areas. The audience will then be engaged in a lively discussion to learn the successful (and the not so successful) ways the speakers have interacted with the technical members of their communities.;Gustavo Durand;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Introductory;Dataverse, an open source Java EE data repository application, has welcomed code contributions from external contributors for more than 10 years. This BOF session begins with a brief introduction to the best ways the presenters have discovered to make these contributions more successful: creating a design/review/QA process for accepting external pull requests to the core code, developing an extensible architecture using the Service Provider Interface (SPI) for plugins to the application, and building a robust API to allow for complementary tools to be created by experts in those areas. The audience will then be engaged in a lively discussion to learn the successful (and the not so successful) ways the speakers have interacted with the technical members of their communities.
1493021944707001gcvs;Modules Are Coming...to Libraries??;Modules are here! Just as with winter in a well-known series, you had to wait. Java 9 was released this year, and with it comes the module system. This is a groundbreaking change in the Java ecosystem: you can now isolate the private (but declared public) classes of your library from users who always would flush them out, use them, and then complain when they changed. What are the challenges for library developers? Still supporting 1.6? What about this (pre-)modular design where you have common packages across different JARs? Multirelease JARs, anyone? How to handle dependencies slow to migrate? Attend this BOF to discuss and hear about issues others are facing and how together we can make the ecosystem move fast and furious to modules.;Louis Jacomet;Core Java Platform;BOF (Birds-of-a-Feather) Session;Advanced;Modules are here! Just as with winter in a well-known series, you had to wait. Java 9 was released this year, and with it comes the module system. This is a groundbreaking change in the Java ecosystem: you can now isolate the private (but declared public) classes of your library from users who always would flush them out, use them, and then complain when they changed. What are the challenges for library developers? Still supporting 1.6? What about this (pre-)modular design where you have common packages across different JARs? Multirelease JARs, anyone? How to handle dependencies slow to migrate? Attend this BOF to discuss and hear about issues others are facing and how together we can make the ecosystem move fast and furious to modules.
1492977062578001TdWh;The Secret of Developing a High-Performance Website with No Budget;You need to create a high-performance website in a short time with almost no budget and almost no team? This is the session for you. Have you wondered how to develop a website that can serve million of requests in a small amount of time  with a small team, almost no budget at all, and a ridiculous deadline. Come learn many secrets the speaker has learned over the years in developing some of the most visited websites. Afterward you will immediately know what you’ve done well and what you’ve done badly. Also you will be able to put skills to work right away and make your dreams come true.;Vladimir Dejanovic;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;BOF (Birds-of-a-Feather) Session;Intermediate;You need to create a high-performance website in a short time with almost no budget and almost no team? This is the session for you. Have you wondered how to develop a website that can serve million of requests in a small amount of time  with a small team, almost no budget at all, and a ridiculous deadline. Come learn many secrets the speaker has learned over the years in developing some of the most visited websites. Afterward you will immediately know what you’ve done well and what you’ve done badly. Also you will be able to put skills to work right away and make your dreams come true.
1492979390545001AgSA;Java EE: Revolutionizing Design Pattern Use;Java EE has innovated the implementation of traditional design patterns. By removing boilerplate code and focusing on the essence that makes the pattern the solution to a problem, Java EE has made their implementation simple and effortless, releasing developers to focus on the actual job of coding business logic. This presentation demonstrates how to benefit from this advancement and to implement some of the most commonly used design patterns in Java EE. It also shows how its programming model facilitates the use of design patterns such as Factory, Singleton, Observer, and Decorator.;Alex Theedom;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Introductory;Java EE has innovated the implementation of traditional design patterns. By removing boilerplate code and focusing on the essence that makes the pattern the solution to a problem, Java EE has made their implementation simple and effortless, releasing developers to focus on the actual job of coding business logic. This presentation demonstrates how to benefit from this advancement and to implement some of the most commonly used design patterns in Java EE. It also shows how its programming model facilitates the use of design patterns such as Factory, Singleton, Observer, and Decorator.
1492976060897001b0GJ;MVC 1.0: Community Involvement Matters!;When JSR 371 was dropped from the scope of Java EE, Oracle decided to allow the community to finalize the specification. This means that we, as a community, must step up and show that we are capable of doing such a thing. In this BOF, you will get the opportunity to meet the experts and discuss what you can do to contribute to making MVC 1.0 the most open and available specification out there.;Ivar Grimstad;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Intermediate;When JSR 371 was dropped from the scope of Java EE, Oracle decided to allow the community to finalize the specification. This means that we, as a community, must step up and show that we are capable of doing such a thing. In this BOF, you will get the opportunity to meet the experts and discuss what you can do to contribute to making MVC 1.0 the most open and available specification out there.
1493016717958001bBE3;OpenJDK Ins and Outs;Although Java is ubiquitous today, the OpenJDK, which provides the Java reference implementation, is still a huge and hard-to-follow project with its own culture, tools, and idiosyncrasies. In this session, OpenJDK veteran and JCP EC member Volker Simonis explains the setup and internal workings of the project and its relationship to the Java Community Process. After the session, you will be able to easily find and consume the artifacts produced by the OpenJDK project and effectively use its infrastructure to get help and support for current Java versions while always staying up to date with future Java developments. Finally you will be able to actively engage in the various OpenJDK activities or even start new subprojects.;Volker Simonis;Core Java Platform;BOF (Birds-of-a-Feather) Session;Introductory;Although Java is ubiquitous today, the OpenJDK, which provides the Java reference implementation, is still a huge and hard-to-follow project with its own culture, tools, and idiosyncrasies. In this session, OpenJDK veteran and JCP EC member Volker Simonis explains the setup and internal workings of the project and its relationship to the Java Community Process. After the session, you will be able to easily find and consume the artifacts produced by the OpenJDK project and effectively use its infrastructure to get help and support for current Java versions while always staying up to date with future Java developments. Finally you will be able to actively engage in the various OpenJDK activities or even start new subprojects.
1492902046759001grXb;Using Type Annotations to Improve Your Code;Java 8 provides the ability to add annotations to all uses of types in a program. Type annotations can be used to improve code quality by adding fine-grained documentation and supporting pluggable type systems. This BOF brings together people and projects using type annotations to exchange experiences and brainstorm possible use cases, applications, and future extensions.;Werner Dietl;Core Java Platform;BOF (Birds-of-a-Feather) Session;Intermediate;Java 8 provides the ability to add annotations to all uses of types in a program. Type annotations can be used to improve code quality by adding fine-grained documentation and supporting pluggable type systems. This BOF brings together people and projects using type annotations to exchange experiences and brainstorm possible use cases, applications, and future extensions.
14941873545840015sEh;How to Tame a Tweetwall;What started out as a request to the community for a JavaFX alternative for a Tweetwall written in Flash back in 2014 has turned into a community- and conference-driven project modifying and enhancing TweetwallFX further. This BOF session provides a brief overview of the technologies used and demonstrates current and planned features. It also presents a live demo showcasing the configurability of TweetwallFX. ;Sven Reimers;Java Clients and User Interfaces;BOF (Birds-of-a-Feather) Session;Introductory;What started out as a request to the community for a JavaFX alternative for a Tweetwall written in Flash back in 2014 has turned into a community- and conference-driven project modifying and enhancing TweetwallFX further. This BOF session provides a brief overview of the technologies used and demonstrates current and planned features. It also presents a live demo showcasing the configurability of TweetwallFX. 
1495928445991001N55K;Kubernetes BOF;This BOF includes Short presentations from Kubernetes contributors and experts<br>• Q&A, discussion, networking;Tamao Nakahara;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;BOF (Birds-of-a-Feather) Session;Introductory;This BOF includes<br>• A quick overview of Kubernetes for beginners<br>• Short presentations from Kubernetes contributors and experts<br>• Q&A, discussion, networking
14940405748740015bpS;Maintenance: The Silent Killer;Maintenance is a general phenomenon that is easily overlooked. Most things require maintenance, and all maintenance has costs. How are these costs accounted for and paid? Large public works, such as bridges, collect tolls to cover maintenance. Other kinds of civic infrastructure (streets, lights, water, electricity) are highly visible, but their costs are not. Many people drive cars, but few are aware of the full cost of owning a car. Physical objects wear out, so the need for maintenance is obvious. Software doesn’t wear out, so it shouldn’t need any maintenance—but, of course, it does. This session is a discussion about the phenomenon of maintenance, how to think about it, and how this thinking can be applied to software systems.;Stuart Marks;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;BOF (Birds-of-a-Feather) Session;Introductory;Maintenance is a general phenomenon that is easily overlooked. Most things require maintenance, and all maintenance has costs. How are these costs accounted for and paid? Large public works, such as bridges, collect tolls to cover maintenance. Other kinds of civic infrastructure (streets, lights, water, electricity) are highly visible, but their costs are not. Many people drive cars, but few are aware of the full cost of owning a car. Physical objects wear out, so the need for maintenance is obvious. Software doesn’t wear out, so it shouldn’t need any maintenance—but, of course, it does. This session is a discussion about the phenomenon of maintenance, how to think about it, and how this thinking can be applied to software systems.
1497302506144001LnOL;The Power of Java Technologies;Java is the backbone and the foundation for every type of application and is the worldwide standard for developing embedded applications, games, web applications, and enterprise applications. Java also provides a robust, flexible environment for applications running on embedded and mobile devices such as mobile phones, TV sets, and printers. Learn more in this session.;Azzouz Boulenouar;Core Java Platform;BOF (Birds-of-a-Feather) Session;Intermediate;Java is the backbone and the foundation for every type of application and is the worldwide standard for developing embedded applications, games, web applications, and enterprise applications. Java also provides a robust, flexible environment for applications running on embedded and mobile devices such as mobile phones, TV sets, and printers. Learn more in this session.
1494188750560001Tcpq;CDI Ecosystem;CDI is a great spec providing a powerful programming model and a new and clean way to integrate third-party technology. So what about the CDI ecosystem? This BoF session is an open discussion about the state of the CDI ecosystem and how we can make this ecosystem better known and enhance it.;Antoine Sabot-Durand;Java, Cloud, and Server-Side Development;BOF (Birds-of-a-Feather) Session;Intermediate;CDI is a great spec providing a powerful programming model and a new and clean way to integrate third-party technology. So what about the CDI ecosystem? This BoF session is an open discussion about the state of the CDI ecosystem and how we can make this ecosystem better known and enhance it.
1494108853691001TKuc;The Java Council: Live Podcast;Don’t miss this fun, entertaining, and enlightening session presented by the Virtual JUG Java Council Jedis: Martijn Verburg and Simon Maple. They look at what has happened in Java over the last year, interviewing many high-profile Java Rock Stars live on stage. You’ll see ignite talks, panel discussions, Just a Java Minute, and much more.;Simon Maple;Core Java Platform;BOF (Birds-of-a-Feather) Session;Introductory;Don’t miss this fun, entertaining, and enlightening session presented by the Virtual JUG Java Council Jedis: Martijn Verburg and Simon Maple. They look at what has happened in Java over the last year, interviewing many high-profile Java Rock Stars live on stage. You’ll see ignite talks, panel discussions, Just a Java Minute, and much more.
1504873445916001kPFq;Building Cloud-Native Applications with IBM Cloud Private;Enterprise developers need to create cloud-native applications that meet their security and regulatory needs. IBM Cloud private provides a platform for rapidly developing and deploying new cloud-native applications while meeting the security and regulatory needs of the enterprise. Learn how to build new cloud-native applications with IBM Cloud private in this hands-on lab.;Roland Barcia;Java, Cloud, and Server-Side Development;HOL (Hands-on Lab) Session;Advanced;Enterprise developers need to create cloud-native applications that meet their security and regulatory needs. IBM Cloud private provides a platform for rapidly developing and deploying new cloud-native applications while meeting the security and regulatory needs of the enterprise. Learn how to build new cloud-native applications with IBM Cloud private in this hands-on lab.
1504219848495001Ojd6;Get Your Hands Dirty with Oracle JavaScript Extension Toolkit;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Have you ever tried to create a large enterprise application in JavaScript? It’s not much fun and not very easy. Oracle JavaScript Extension Toolkit to the rescue. Oracle JavaScript Extension Toolkit is a free and open source toolbox filled with solutions for common problems in enterprise applications targeted at the browser. In this session Oracle JavaScript Extension Toolkit users get hands-on experience with the various features of the toolkit, such as Knockout and Require. Beginners create their first Oracle JavaScript Extension Toolkit application, and knowledgeable Oracle JavaScript Extension Toolkit developers learn new techniques, such as solutions for internationalization and the development of widgets based on the Web Component standard.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf;Graeme Mawson;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;HOL (Hands-on Lab) Session;Introductory;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Have you ever tried to create a large enterprise application in JavaScript? It’s not much fun and not very easy. Oracle JavaScript Extension Toolkit to the rescue. Oracle JavaScript Extension Toolkit is a free and open source toolbox filled with solutions for common problems in enterprise applications targeted at the browser. In this session Oracle JavaScript Extension Toolkit users get hands-on experience with the various features of the toolkit, such as Knockout and Require. Beginners create their first Oracle JavaScript Extension Toolkit application, and knowledgeable Oracle JavaScript Extension Toolkit developers learn new techniques, such as solutions for internationalization and the development of widgets based on the Web Component standard.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf
1504629185697001g7bJ;Serverless @ Oracle;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Serverless computing platforms free developers from the need to manage and maintain compute infrastructure and are increasingly popular. Who wouldn't want a way to deploy code and let the platform take care of all the compute and network issues and scale automatically? In this session learn about the latest advances in serverless from Oracle.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf;Owen Cliffe;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;HOL (Hands-on Lab) Session;Introductory;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Serverless computing platforms free developers from the need to manage and maintain compute infrastructure and are increasingly popular. Who wouldn't want a way to deploy code and let the platform take care of all the compute and network issues and scale automatically? In this session learn about the latest advances in serverless from Oracle.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf
1503326728479001v3uc;Create and Deploy Java Microservices with MicroProfile and Kubernetes;With today’s fast-paced development standards, utilizing the latest container technologies and robust DevOps practices is paramount to success. Although Java has firmly planted itself as the leader in enterprise development, it’s undergoing an evolution to fit in with these latest tools and development methodologies. MicroProfile, an open source platform that optimizes enterprise Java for microservices, is the next step of this evolution. In this hands-on lab, you’ll learn how easy it is to develop a Java-based microservices application with MicroProfile and then deploy it to a Kubernetes cluster. ;Sai Vennam;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;HOL (Hands-on Lab) Session;Advanced;With today’s fast-paced development standards, utilizing the latest container technologies and robust DevOps practices is paramount to success. Although Java has firmly planted itself as the leader in enterprise development, it’s undergoing an evolution to fit in with these latest tools and development methodologies. MicroProfile, an open source platform that optimizes enterprise Java for microservices, is the next step of this evolution. In this hands-on lab, you’ll learn how easy it is to develop a Java-based microservices application with MicroProfile and then deploy it to a Kubernetes cluster. 
1504735132067001aXMp;Hands-on Lab: Docker 101;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>If you are just getting started learning about Docker and want to get up to speed, this is the lab for you. Come learn Docker basics including running containers, building images, and basics on networking, orchestration, security, and volumes.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf;Dennis Foley;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;HOL (Hands-on Lab) Session;Intermediate;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>If you are just getting started learning about Docker and want to get up to speed, this is the lab for you. Come learn Docker basics including running containers, building images, and basics on networking, orchestration, security, and volumes.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf
1504295142852001QV78;Hands-on Lab: Get Started on Oracle Cloud - Java Apps with Containers and DevOps;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Take the first step in using Oracle Cloud services in your development process. In this hands-on lab take a locally developed application and use a trial Oracle Cloud Service account to deploy it to the cloud. Attendees are guided through automating the build and deployment process using Oracle Developer Cloud Service and Oracle Application Container Cloud Service.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf;Susan Jang;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;HOL (Hands-on Lab) Session;;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Take the first step in using Oracle Cloud services in your development process. In this hands-on lab take a locally developed application and use a trial Oracle Cloud Service account to deploy it to the cloud. Attendees are guided through automating the build and deployment process using Oracle Developer Cloud Service and Oracle Application Container Cloud Service.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf
1504101843284001eyBI;Introduction to Reactive Systems;In this two-hour workshop, IBM and Lightbend are teaming up to introduce you to developing reactive microservices on Kubernetes. Lagom is a microservice framework built atop Lightbend’s tried-and-proven distributed systems toolkit, Akka. This framework helps you build microservices as systems—reactive systems, to be precise—so that your microservices are elastic and resilient by nature. The reactive programming model aims to ensure systems availability and performance while processing streaming data. You will use Lagom’s development environment to avoid tedious setup and scripting when developing locally and will deploy your application to a Kubernetes cluster, so others in the workshop (and at JavaOne) can test out what you built.;Erin Schnabel;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;HOL (Hands-on Lab) Session;Advanced;In this two-hour workshop, IBM and Lightbend are teaming up to introduce you to developing reactive microservices on Kubernetes. Lagom is a microservice framework built atop Lightbend’s tried-and-proven distributed systems toolkit, Akka. This framework helps you build microservices as systems—reactive systems, to be precise—so that your microservices are elastic and resilient by nature. The reactive programming model aims to ensure systems availability and performance while processing streaming data. You will use Lagom’s development environment to avoid tedious setup and scripting when developing locally and will deploy your application to a Kubernetes cluster, so others in the workshop (and at JavaOne) can test out what you built.
1504718109282001wBcK;Build, Test, Deploy, Operate: A Four-Step Docker, Kubernetes, Java Tutorial;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Join the Wercker + Oracle team in this hands-on lab, and learn how to build and deploy a Java application in four easy, entirely automated steps with Docker, Kubernetes, and Java. This session is BYOL (bring your own laptop).Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf;Micha Hernandez van Leuffen;Java, Cloud, and Server-Side Development;HOL (Hands-on Lab) Session;Introductory;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Join the Wercker + Oracle team in this hands-on lab, and learn how to build and deploy a Java application in four easy, entirely automated steps with Docker, Kubernetes, and Java. This session is BYOL (bring your own laptop).Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf
1504036175855001c2W1;Docker, Kubernetes, and OpenShift for Java Developers;This lab prepares web and application developers to build applications with containers, Kubernetes, and OpenShift. It starts with a short introduction to containers and Kubernetes, which are the foundation of OpenShift. Hands-on exercises walk you through a variety of applications and use cases for OpenShift. How about seeing how easy it can be to deploy your prebuilt containers? And how health checks to OpenShift can heal your application? We’ll dig into build containers, using just a Git repository. Want to see easy application scaling? No problem. Wish you could do A/B deployment? Your wish is our command. And finally, you’ll see a complete microservice application with database and polyglot back-end services.;Grant Shipley;Java, Cloud, and Server-Side Development;HOL (Hands-on Lab) Session;Introductory;This lab prepares web and application developers to build applications with containers, Kubernetes, and OpenShift. It starts with a short introduction to containers and Kubernetes, which are the foundation of OpenShift. Hands-on exercises walk you through a variety of applications and use cases for OpenShift. How about seeing how easy it can be to deploy your prebuilt containers? And how health checks to OpenShift can heal your application? We’ll dig into build containers, using just a Git repository. Want to see easy application scaling? No problem. Wish you could do A/B deployment? Your wish is our command. And finally, you’ll see a complete microservice application with database and polyglot back-end services.
1504239836395001OzIm;Get Started on Oracle Cloud: Java Apps with Containers and DevOps;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Take the first step in using Oracle Cloud services in your development process. In this hands-on lab take a locally developed application and use a trial Oracle Cloud Service account to deploy it to the cloud. Attendees are guided through automating the build and deployment process using Oracle Developer Cloud Service and Oracle Application Container Cloud.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf;Susan Jang;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;HOL (Hands-on Lab) Session;Intermediate;<b>NOTE: THIS IS A BRING YOUR OWN LAPTOP HANDS-ON LAB.</b><br><br>Take the first step in using Oracle Cloud services in your development process. In this hands-on lab take a locally developed application and use a trial Oracle Cloud Service account to deploy it to the cloud. Attendees are guided through automating the build and deployment process using Oracle Developer Cloud Service and Oracle Application Container Cloud.Lab Requirements may be found here: https://static.rainfocus.com/oracle/oow17/ses/Attendee_BYOL_lab_Set_Ups_OOW17.pdf
1493549838291001fzfT;Java EE 7 with Apache Spark for the World’s Largest Credit Card Core Systems;Financial industry companies need Java EE for powering their business today. Rakuten Card, one of the largest credit card companies in Japan, adopted Java EE 7 for its credit card core systems rearchitecture from one of the oldest COBOL-based mainframes in Japan. Additionally, it chose Apache Spark as a superrapid batch execution platform. The company completed this big core system migration project successfully. In this session, you’ll learn why it chose Java EE and Apache Spark and hear about its experiences and lessons learned. How do you start such a big project? Why did the company choose it, how did it do the porting, how did it use Apache Spark for performance improvements, and how did the launch go? The presentation answers these questions and any others you may have.;Hirofumi Iwasaki;Java, Cloud, and Server-Side Development;Conference Session;Advanced;Financial industry companies need Java EE for powering their business today. Rakuten Card, one of the largest credit card companies in Japan, adopted Java EE 7 for its credit card core systems rearchitecture from one of the oldest COBOL-based mainframes in Japan. Additionally, it chose Apache Spark as a superrapid batch execution platform. The company completed this big core system migration project successfully. In this session, you’ll learn why it chose Java EE and Apache Spark and hear about its experiences and lessons learned. How do you start such a big project? Why did the company choose it, how did it do the porting, how did it use Apache Spark for performance improvements, and how did the launch go? The presentation answers these questions and any others you may have.
1493085416573001XHMc;Java, Machine Learning, and Healthcare: How Developers Can Make a Difference;Recent innovations in machine learning (ML) have enabled significant strides in healthcare. Java developers now have access to a variety of powerful ML engines and a large group of frameworks for visual and pattern recognition. These tools enable Java developers to use ML techniques such as visual recognition (VisRec) to detect patterns in x-rays and MRIs faster than ever. This session covers these specific tools and trends, with real-life examples of Java in healthcare. It also discusses JSR 381, a pending Java standard for VisRec. With JSR 381, Java developers have a set of standard, abstract APIs that work across the various ML engines.;Frank Greco;Java and Devices;Conference Session;Intermediate;Recent innovations in machine learning (ML) have enabled significant strides in healthcare. Java developers now have access to a variety of powerful ML engines and a large group of frameworks for visual and pattern recognition. These tools enable Java developers to use ML techniques such as visual recognition (VisRec) to detect patterns in x-rays and MRIs faster than ever. This session covers these specific tools and trends, with real-life examples of Java in healthcare. It also discusses JSR 381, a pending Java standard for VisRec. With JSR 381, Java developers have a set of standard, abstract APIs that work across the various ML engines.
1493066499488001boff;JUnit5: Features, Architecture, and Extensibility—Part 2;The JUnit 5 project updates the de facto standard in Java testing tools to make the best use of the modern features of Java 8 and  focus on consistent extensibility. Last year’s session described the team’s progress with the release of test parameters and dynamic test generation. Two more milestones add JUnit 4 interoperability, test templates, and parameterized tests. The GA release will add scenario tests as well as Java 9 support. Modularity and extensibility are key facets of the reimagined test framework. After introducing JUnit5, this session presents demonstrations including how to run JUnit5 tests, how to write JUnit5 tests, and how to write extensions to alter the default test engine behavior. No familiarity with automated testing is assumed.;Steve Moyer;Java Development Tools;Conference Session;Intermediate;The JUnit 5 project updates the de facto standard in Java testing tools to make the best use of the modern features of Java 8 and  focus on consistent extensibility. Last year’s session described the team’s progress with the release of test parameters and dynamic test generation. Two more milestones add JUnit 4 interoperability, test templates, and parameterized tests. The GA release will add scenario tests as well as Java 9 support. Modularity and extensibility are key facets of the reimagined test framework. After introducing JUnit5, this session presents demonstrations including how to run JUnit5 tests, how to write JUnit5 tests, and how to write extensions to alter the default test engine behavior. No familiarity with automated testing is assumed.
1493318889875001w3rb;The Top 10 Dos and Don'ts of JSON Processing in a Database;JSON is a popular format because of schema flexibility and easy mapping to programming languages.APIs that consume or generate JSON are typically forgiving when dealing with missing or redundant fields. But all that changes when JSON gets written to disk and large amounts of JSON need to be queried,  indexed, or joined. Preserving the benefits of JSON while guaranteeing high query performance is crucial when persisting  JSON in a database (whether NoSQL, ObjectStores, or relational). This session presents common mistakes, tips, and tricks acquired from hundreds of customers over the last 10+ years. It covers size considerations, indexing strategies, and good choices for data types—especially for those unknown to JSON, such as dates.;Beda Hammerschmidt;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Advanced;JSON is a popular format because of schema flexibility and easy mapping to programming languages.APIs that consume or generate JSON are typically forgiving when dealing with missing or redundant fields. But all that changes when JSON gets written to disk and large amounts of JSON need to be queried,  indexed, or joined. Preserving the benefits of JSON while guaranteeing high query performance is crucial when persisting  JSON in a database (whether NoSQL, ObjectStores, or relational). This session presents common mistakes, tips, and tricks acquired from hundreds of customers over the last 10+ years. It covers size considerations, indexing strategies, and good choices for data types—especially for those unknown to JSON, such as dates.
1493075051652001XLes;Three Microservice Patterns to Tear Down Your Monoliths;Do you think switching to a microservice-oriented architecture is easier said than done? You are not alone. Many organizations today struggle with tightly coupled software and unmaintainable monoliths, but migrating a decade-old codebase is both expensive and tiresome. This session shows you how you can start developing microservices for an existing infrastructure today, using a combination of top-notch technologies, including Speedment and others. You’ll see the magic triangle of event sourcing, command-query responsibility segregation (CQRS), and materialized views and learn why these concepts will change the way you look at scalable software development forever, whether you’re working with servers or with apps. ;Per-Ake Minborg;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Do you think switching to a microservice-oriented architecture is easier said than done? You are not alone. Many organizations today struggle with tightly coupled software and unmaintainable monoliths, but migrating a decade-old codebase is both expensive and tiresome. This session shows you how you can start developing microservices for an existing infrastructure today, using a combination of top-notch technologies, including Speedment and others. You’ll see the magic triangle of event sourcing, command-query responsibility segregation (CQRS), and materialized views and learn why these concepts will change the way you look at scalable software development forever, whether you’re working with servers or with apps. 
1493071692263001bVeJ;Transforming IoT with Voice UI,  Java, AI, and the Cloud;“This morning I had a conversation on politics with my vacuum-cleaner robot.” This session’s speaker, an entrepreneur and developer advocate, demonstrates the power of voice UI, mobile, and cognitive services from the cloud platform to securely connect and manage devices, analyze social network data, and apply cognitive services to add humanlike interaction to lightweight IoT products. He shows how you can quickly and securely turn a simple idea into reality by transforming a regular robot vacuum into a cognitive-enabled smart and chatty device that could be turned into a media information center with an opinion on virtually any subject, based on digestion of social network sentiment with cognitive services. ;Marek Sadowski;Java and Devices;Conference Session;Intermediate;“This morning I had a conversation on politics with my vacuum-cleaner robot.” This session’s speaker, an entrepreneur and developer advocate, demonstrates the power of voice UI, mobile, and cognitive services from the cloud platform to securely connect and manage devices, analyze social network data, and apply cognitive services to add humanlike interaction to lightweight IoT products. He shows how you can quickly and securely turn a simple idea into reality by transforming a regular robot vacuum into a cognitive-enabled smart and chatty device that could be turned into a media information center with an opinion on virtually any subject, based on digestion of social network sentiment with cognitive services. 
14931955145190010Yoc;Tuning G1 for Real-World Applications;G1 is going to become the default garbage collector for Java 9. For several use cases, G1 will give good pause time, throughput, and heap size performance. However, as with any one-size-fits-all algorithm, there are, of course, use cases where extra tuning is required, along with a deep understanding of how the internals of G1 work. In this session, the Diabolical Developer and Kirk Pepperdine take you through several real-world G1 tuning scenarios they went through on behalf of some of the world’s most complex JVM applications from leading ecommerce sites, banks, and deep tech organizations. Leave this session knowing how to tackle the common tuning scenarios for your app under G1.;Kirk Pepperdine;Core Java Platform;Conference Session;Intermediate;G1 is going to become the default garbage collector for Java 9. For several use cases, G1 will give good pause time, throughput, and heap size performance. However, as with any one-size-fits-all algorithm, there are, of course, use cases where extra tuning is required, along with a deep understanding of how the internals of G1 work. In this session, the Diabolical Developer and Kirk Pepperdine take you through several real-world G1 tuning scenarios they went through on behalf of some of the world’s most complex JVM applications from leading ecommerce sites, banks, and deep tech organizations. Leave this session knowing how to tackle the common tuning scenarios for your app under G1.
1493063597635001TwRo;Asynchronous API with CompletableFuture: Performance Tips and Tricks;Since Java 8, CompletableFuture has enabled asynchronous, future-based programming in Java and is one of the most powerful features suitable for creating asynchronous APIs.This presentation, based on real project experience, goes beyond the CompletableFuture public API. It reveals internal details and shows who stands to benefit from it for better performance. ;Sergey Kuksenko;Core Java Platform;Conference Session;Advanced;Since Java 8, CompletableFuture has enabled asynchronous, future-based programming in Java and is one of the most powerful features suitable for creating asynchronous APIs.This presentation, based on real project experience, goes beyond the CompletableFuture public API. It reveals internal details and shows who stands to benefit from it for better performance. 
1493060075702001Abak;Enterprise Cross-Platform Mobile Applications with Gluon;Enterprises’ demand for mobile apps is growing exponentially, and the strategy is changing to cloud-first, mobile-first. Mobile platforms require a new portfolio of architectures, tools, and IDEs and improved access to enterprise data, back ends, and cloud services to stay agile and competitive. This session explains and demonstrates how you can leverage your Java skills and use NetBeans to build applications with one cross-platform Java API and deploy to mobile platforms, with compelling UI, native services integration, and seamless connection with the cloud and enterprise back end. You can benefit from improved security and common mobile features such as push notifications, authentication, data synchronization, or persistence, among others.;José Pereda;Developer Community Day: NetBeans;Conference Session;Introductory;Enterprises’ demand for mobile apps is growing exponentially, and the strategy is changing to cloud-first, mobile-first. Mobile platforms require a new portfolio of architectures, tools, and IDEs and improved access to enterprise data, back ends, and cloud services to stay agile and competitive. This session explains and demonstrates how you can leverage your Java skills and use NetBeans to build applications with one cross-platform Java API and deploy to mobile platforms, with compelling UI, native services integration, and seamless connection with the cloud and enterprise back end. You can benefit from improved security and common mobile features such as push notifications, authentication, data synchronization, or persistence, among others.
1493271659656001T9HN;G1GC Concepts and Performance Tuning;This session illustrates how to tune G1 performance production workloads and how G1 ergonomics work so the audience understands the reasoning behind the tuning suggestions. The presentation uses GC logs and JFR recordings to show how to improve application performance with G1 GC.;Erik Helin;Core Java Platform;Conference Session;Introductory;This session illustrates how to tune G1 performance production workloads and how G1 ergonomics work so the audience understands the reasoning behind the tuning suggestions. The presentation uses GC logs and JFR recordings to show how to improve application performance with G1 GC.
1493058721733001bMvg;Ground Systems for the NASA James Webb Space Telescope Using the Java Platform;The modern Java technology stack is an software platform that is attractive to space-mission-operations-oriented customers such as NASA and the US Air Force. These use cases have extended computing and visualization requirements for which desktop applications built on the vast Java ecosystem provide a cost-effective solution. This session discusses the NASA James Webb Space Telescope Flight Dynamics Ground System. It covers implementation patterns used and how they are beneficial to enterprise development and mission-critical operational workflows. Examples provided include automated space mission simulation tools such as FreeFlyer, custom visualizations built in JavaFX, and NoSQL data persistence over MongoDB with JPA/Morphia.;Geertjan Wielenga;Java Clients and User Interfaces;Conference Session;Intermediate;The modern Java technology stack is an software platform that is attractive to space-mission-operations-oriented customers such as NASA and the US Air Force. These use cases have extended computing and visualization requirements for which desktop applications built on the vast Java ecosystem provide a cost-effective solution. This session discusses the NASA James Webb Space Telescope Flight Dynamics Ground System. It covers implementation patterns used and how they are beneficial to enterprise development and mission-critical operational workflows. Examples provided include automated space mission simulation tools such as FreeFlyer, custom visualizations built in JavaFX, and NoSQL data persistence over MongoDB with JPA/Morphia.
1493298714409001DyGD;Making the JDK More Secure;In today’s internet-connected world, Java applications are increasingly under attack. Over time cryptographic algorithms and security protocols become weaker and need to be replaced or enhanced with stronger alternatives. In this session, find out how Oracle is continuously making the JDK more secure by adding new features that improve security and by providing a default security configuration that protects your applications from the security risks of  weak or broken cryptographic algorithms. Learn more about the new JDK 9 security features such as SHA-3, OCSP stapling, DTLS, DRBG SecureRandom, and the disabling of SHA-1 certificates.;Sean Mullan;Core Java Platform;Conference Session;Intermediate;In today’s internet-connected world, Java applications are increasingly under attack. Over time cryptographic algorithms and security protocols become weaker and need to be replaced or enhanced with stronger alternatives. In this session, find out how Oracle is continuously making the JDK more secure by adding new features that improve security and by providing a default security configuration that protects your applications from the security risks of  weak or broken cryptographic algorithms. Learn more about the new JDK 9 security features such as SHA-3, OCSP stapling, DTLS, DRBG SecureRandom, and the disabling of SHA-1 certificates.
1493541586641001sWBb;Streams in JDK 8: The Good, the Bad, and the Ugly;The Streams API, combined with lambda expressions, both introduced in JDK 8, provide a way for developers to use a functional style of programming for the first time in Java. As with all powerful features such as these, it is easy to abuse them and produce code that is difficult to read and hard to maintain. This session presents examples of streams to discuss whether the code is good, bad, or ugly and discusses ways the code could be changed. At the end of the session, you will have learned some new ways to use streams and lambdas—and some ways not to!;Stuart Marks;Core Java Platform;Conference Session;Intermediate;The Streams API, combined with lambda expressions, both introduced in JDK 8, provide a way for developers to use a functional style of programming for the first time in Java. As with all powerful features such as these, it is easy to abuse them and produce code that is difficult to read and hard to maintain. This session presents examples of streams to discuss whether the code is good, bad, or ugly and discusses ways the code could be changed. At the end of the session, you will have learned some new ways to use streams and lambdas—and some ways not to!
1493194980650001uaTh;The Diabolical Developer’s Guide to Surviving Java 9;Java 9 comes with a new modularity system (Jigsaw), restrictions on the use of internal libraries such as sun.misc.Unsafe, a new REPL (JShell), a change of the default garbage collector to G1, and much more. All of this combined means that Java 9 is potentially the most groundbreaking release since Java 5 introduced generics. In this session, the Diabolical Developer presents a pragmatic guide to migrating your apps to Java 9 and how to avoid the common pitfalls. He covers how to still gain access to those restricted internal libraries, how to deal with the performance impact of moving to G1, how to split your app to use both the classpath approach and the new modularization approach, and more.Leave this session with the confidence to move to Java 9!;Martijn Verburg;Core Java Platform;Conference Session;Intermediate;Java 9 comes with a new modularity system (Jigsaw), restrictions on the use of internal libraries such as sun.misc.Unsafe, a new REPL (JShell), a change of the default garbage collector to G1, and much more. All of this combined means that Java 9 is potentially the most groundbreaking release since Java 5 introduced generics. In this session, the Diabolical Developer presents a pragmatic guide to migrating your apps to Java 9 and how to avoid the common pitfalls. He covers how to still gain access to those restricted internal libraries, how to deal with the performance impact of moving to G1, how to split your app to use both the classpath approach and the new modularization approach, and more.Leave this session with the confidence to move to Java 9!
1493105420186001KISK;Breaking up the Monolith with Jigsaw: An Architect’s View;This session shows how to break up a monolithic application into Jigsaw modules by using NetBeans and Jdeps. You will learn how to analyze and refactor a monolithic example codebase into service-oriented Jigsaw modules. ;Sven Reimers;Developer Community Day: NetBeans;Conference Session;Intermediate;This session shows how to break up a monolithic application into Jigsaw modules by using NetBeans and Jdeps. You will learn how to analyze and refactor a monolithic example codebase into service-oriented Jigsaw modules. 
1493075602649001AVvm;Bridging the Gap Between Database and Stream;Whenever you write code that mixes languages and domains, such as Java and SQL, you are going to get bugs. A solution is to move away from query languages such as SQL and instead write your business logic with the type-safe and object-oriented constructs we have learned to love in Java, such as streams, predicates, and functions. In this session, you will rediscover the power of the Stream interface in a completely new domain: relational databases. You will also learn how nicely it blends in with your existing application, even with no modifications on the database layer. This will not only increase your productivity but also help you build safer and more maintainable Java code.;Per-Ake Minborg;Java Development Tools;Conference Session;Introductory;Whenever you write code that mixes languages and domains, such as Java and SQL, you are going to get bugs. A solution is to move away from query languages such as SQL and instead write your business logic with the type-safe and object-oriented constructs we have learned to love in Java, such as streams, predicates, and functions. In this session, you will rediscover the power of the Stream interface in a completely new domain: relational databases. You will also learn how nicely it blends in with your existing application, even with no modifications on the database layer. This will not only increase your productivity but also help you build safer and more maintainable Java code.
1493243594050001THhQ;Build, Test, and Deliver Code Faster with Containers;Is automating your development and delivery process still a pain? Tired of hearing about wonderful processes that you can never apply? Swamped with technologies and suggestions? Despondent about how little control you actually have in your company? This session covers an easy but powerful step-by-step automation process you can apply to your projects. No matter if you’re working with complex projects or simple deploys, whether you are the delivery hero or you depend on the good will of your production team, come find out how to use containers running on Oracle Cloud or on your laptop. Get your automated delivery pipeline up and running.;Bruno Souza;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Is automating your development and delivery process still a pain? Tired of hearing about wonderful processes that you can never apply? Swamped with technologies and suggestions? Despondent about how little control you actually have in your company? This session covers an easy but powerful step-by-step automation process you can apply to your projects. No matter if you’re working with complex projects or simple deploys, whether you are the delivery hero or you depend on the good will of your production team, come find out how to use containers running on Oracle Cloud or on your laptop. Get your automated delivery pipeline up and running.
1493072089852001TgWz;Continuous Code Quality with SonarQube and SonarLint;It is a pretty common practice to use static analysis during the development process to check on quality, but what are we looking for exactly and what do we do with the findings?This presentation explains the benefits of continuous code quality, which mechanically improves quality and sets very clear rules on the level of code expected from developers. It also demonstrates open source SonarLint and SonarQube to show how to use them to implement such a practice.;Olivier Gaudin;Java Development Tools;Conference Session;Intermediate;It is a pretty common practice to use static analysis during the development process to check on quality, but what are we looking for exactly and what do we do with the findings?This presentation explains the benefits of continuous code quality, which mechanically improves quality and sets very clear rules on the level of code expected from developers. It also demonstrates open source SonarLint and SonarQube to show how to use them to implement such a practice.
1493064743215001AwZO;Fun Things to Do with Nashorn in Java 9;With several of Java 9’s big features in the spotlight, it’s easy to overlook that Nashorn has also gotten some upgrades, big and small. Its own shell, jjs, has been seriously upgraded, with in-editor document browsing and code completion. It supports a much larger subset of ES6 than Nashorn in Java 8 does. It comes with a parser API that enablesyou to use Java to write tools for analysis and transformation of JavaScript source code, something that’s often needed in today’s world. It also has Dynalink—another library new to Java 9—underneath it, which enables the language itself to be extended and even integrated with other languages. This presentation demonstrates the uses to which you can put these new goodies in Nashorn.;Attila Szegedi;Emerging Languages;Conference Session;Intermediate;With several of Java 9’s big features in the spotlight, it’s easy to overlook that Nashorn has also gotten some upgrades, big and small. Its own shell, jjs, has been seriously upgraded, with in-editor document browsing and code completion. It supports a much larger subset of ES6 than Nashorn in Java 8 does. It comes with a parser API that enablesyou to use Java to write tools for analysis and transformation of JavaScript source code, something that’s often needed in today’s world. It also has Dynalink—another library new to Java 9—underneath it, which enables the language itself to be extended and even integrated with other languages. This presentation demonstrates the uses to which you can put these new goodies in Nashorn.
1493283952943001GXSJ;How to Speed Up 150K Functional Tests in a 17-Year-Old Codebase;Last year this session’s speaker and his team rewrote а testing framework for DataGrip, the IDE for SQL, and speeded up the whole test suite severalfold. This year they’re doing almost the same for its 17-year-old sibling, IntelliJ IDEA. He describes the optimizations they have applied in all layers: from their approach to testing and settings for the virtualization and operating systems to the server for build agents and their tailor-made Git repository. In addition to faster tests, they have<br>&bull, An easy-to-use harness for local testing and development;Sergey Ignatov;Java Development Tools;Conference Session;Intermediate;Last year this session’s speaker and his team rewrote а testing framework for DataGrip, the IDE for SQL, and speeded up the whole test suite severalfold. This year they’re doing almost the same for its 17-year-old sibling, IntelliJ IDEA. He describes the optimizations they have applied in all layers: from their approach to testing and settings for the virtualization and operating systems to the server for build agents and their tailor-made Git repository. In addition to faster tests, they have<br>&bull, A robust and scalable Docker-based framework for testing the application in CI<br>&bull, A standalone service for manual testing<br>&bull, An easy-to-use harness for local testing and development
1493076220192001gVLO;Java 9: Search 9 TB in 0.9 Microseconds;Leveraging off-heap memory and memory-mapped files, Chronicle Engine and Speedment support large maps that can easily exceed the size of your server’s RAM—without having an impact on garbage collection. Because the Java maps are mapped onto files, these maps can be shared instantly between several nodes/microservices JVMs and new instances can be added, removed, or restarted very quickly. Interestingly, these tools enable Java streams to be connected directly to RAM, enabling retrieval of data with ultralow latency for a wide range of operations. Features such as column-oriented storage, in-place partial deserialization, reference compression, and stream pipeline optimization are features that further improve Stream performance.;Per-Ake Minborg;Java Development Tools;Conference Session;Advanced;Leveraging off-heap memory and memory-mapped files, Chronicle Engine and Speedment support large maps that can easily exceed the size of your server’s RAM—without having an impact on garbage collection. Because the Java maps are mapped onto files, these maps can be shared instantly between several nodes/microservices JVMs and new instances can be added, removed, or restarted very quickly. Interestingly, these tools enable Java streams to be connected directly to RAM, enabling retrieval of data with ultralow latency for a wide range of operations. Features such as column-oriented storage, in-place partial deserialization, reference compression, and stream pipeline optimization are features that further improve Stream performance.
1493322921290001OicX;Java Card: 20 Years of Security Innovation;Java Card technology, entering its 20th year of existence, is available in billions of secure devices shipped each year. Oracle and Java Card Forum are working on the next iteration of the Java Card specification, bringing significant additions to address new security form factors in mobile and IoT. This session looks back at the history of Java Card adoption and introduces key features of the upcoming Java Card 3.1 release.;Saqib Ahmad;Java and Devices;Conference Session;Intermediate;Java Card technology, entering its 20th year of existence, is available in billions of secure devices shipped each year. Oracle and Java Card Forum are working on the next iteration of the Java Card specification, bringing significant additions to address new security form factors in mobile and IoT. This session looks back at the history of Java Card adoption and introduces key features of the upcoming Java Card 3.1 release.
1493239884465001wURj;JDK 9 Hidden Gems;What does JDK 9 mean to you? Modularization is the first thing that comes to mind, but there is a lot more. Come discover less-well-known but important technologies that Oracle has been working on with partners such as Intel to provide a higher-performance, lower-footprint, scalable Java with JDK 9. This session talks about JDK 9 optimizations spanning support for larger vectors with enhanced vectorization, optimized math libraries, cryptography and compression acceleration, compact strings, new APIs with associated optimized implementation, and many more features that help big data, cloud, microservices, HPC, and FSI applications.;Sandhya Viswanathan;Core Java Platform;Conference Session;Intermediate;What does JDK 9 mean to you? Modularization is the first thing that comes to mind, but there is a lot more. Come discover less-well-known but important technologies that Oracle has been working on with partners such as Intel to provide a higher-performance, lower-footprint, scalable Java with JDK 9. This session talks about JDK 9 optimizations spanning support for larger vectors with enhanced vectorization, optimized math libraries, cryptography and compression acceleration, compact strings, new APIs with associated optimized implementation, and many more features that help big data, cloud, microservices, HPC, and FSI applications.
1493468901609001ntmw;JNoSQL: The Definitive Solution for Java and NoSQL Database;JNoSQL is a framework and collection of tools that make integration between Java applications and NoSQL quick and easy—for developers as well as vendors. The API is easy to implement, so NoSQL vendors can quickly implement, test, and become compliant by themselves. And with its low learning curve and just a minimal set of artifacts, Java developers can start coding by worrying not about the complexity of specific NoSQL databases but only their core aspects (such as graph or document properties). Built with functional programming in mind, it leverages all the features of Java 8. This session covers how the API is structured, how it relates to the multiple NoSQL database types, and how you can get started and involved in this open source technology.;Leonardo Lima;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;JNoSQL is a framework and collection of tools that make integration between Java applications and NoSQL quick and easy—for developers as well as vendors. The API is easy to implement, so NoSQL vendors can quickly implement, test, and become compliant by themselves. And with its low learning curve and just a minimal set of artifacts, Java developers can start coding by worrying not about the complexity of specific NoSQL databases but only their core aspects (such as graph or document properties). Built with functional programming in mind, it leverages all the features of Java 8. This session covers how the API is structured, how it relates to the multiple NoSQL database types, and how you can get started and involved in this open source technology.
1493058873732001Taqt;Nashorn: What’s New in JDK 9;Nashorn is one of the star features of JDK 8. In JDK 9, it is even better. As a JavaScript developer, you want to use Nashorn to take full advantage of the Java stack and still use your favorite language. As a Java developer, you want to use JavaScript in dynamic coding scenarios such as configuration management and query composition. This session brings all the power of JavaScript and Java together, with topics related to new features of JDK 9 as well as advances in the Nashorn platform.;Michel Trudeau;Emerging Languages;Conference Session;Intermediate;Nashorn is one of the star features of JDK 8. In JDK 9, it is even better. As a JavaScript developer, you want to use Nashorn to take full advantage of the Java stack and still use your favorite language. As a Java developer, you want to use JavaScript in dynamic coding scenarios such as configuration management and query composition. This session brings all the power of JavaScript and Java together, with topics related to new features of JDK 9 as well as advances in the Nashorn platform.
14931006397900019yOm;Need-to-Know Patterns for Building Microservices;Microservices are still the rage—and for good reason. However, like any other emerging architecture, they’re not a silver bullet and anyone who adopts this architecture will need to learn and identify new patterns, patterns you didn’t need to know about in a monolithic world. This session discusses when to make the switch to a microservice architecture and the patterns Atlassian has identified in building microservices. They include patterns in code organization, configuration management, deployment, resilience, and decomposition. After this session, you will be able to identify whether you should give microservice architecture a try and, if so, you will have a toolbox full of patterns to apply in your own situation.;Vincent Kok;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Microservices are still the rage—and for good reason. However, like any other emerging architecture, they’re not a silver bullet and anyone who adopts this architecture will need to learn and identify new patterns, patterns you didn’t need to know about in a monolithic world. This session discusses when to make the switch to a microservice architecture and the patterns Atlassian has identified in building microservices. They include patterns in code organization, configuration management, deployment, resilience, and decomposition. After this session, you will be able to identify whether you should give microservice architecture a try and, if so, you will have a toolbox full of patterns to apply in your own situation.
1493538450021001swhw;Quantum Computing Exposed: The Fundamentals;The buzz about quantum computing has been rapidly increasing, and more and more developers have been looking into the subject. Concepts developers typically find challenging after cursory investigation of quantum computing include superpositions of quantum bits (qubits), quantum gates, quantum entanglement (Einstein’s “spooky actions at a distance”), and the relevance of Schrödinger’s famous cat. This session presents a gentle introduction to quantum computing, including a brief history of quantum computers, visualizing superpositions, composing quantum algorithms with quantum gates, understanding Shor’s potentially RSA-encryption-busting algorithm, and the current status of quantum computers.;James Weaver;Emerging Languages;Conference Session;Introductory;The buzz about quantum computing has been rapidly increasing, and more and more developers have been looking into the subject. Concepts developers typically find challenging after cursory investigation of quantum computing include superpositions of quantum bits (qubits), quantum gates, quantum entanglement (Einstein’s “spooky actions at a distance”), and the relevance of Schrödinger’s famous cat. This session presents a gentle introduction to quantum computing, including a brief history of quantum computers, visualizing superpositions, composing quantum algorithms with quantum gates, understanding Shor’s potentially RSA-encryption-busting algorithm, and the current status of quantum computers.
1493053231517001X9lE;The Art of Performance Tuning;This session takes a practical, hands-on look at Java performance tuning. It discusses methodology (spoiler: it’s the scientific method) and how to apply it to Java SE systems (on any budget). Exploring concrete examples with tools such as the Oracle Java Mission Control feature of Oracle Java SE Advanced, VisualVM, YourKit, and JMH, the presentation focuses on ways of measuring performance, how to interpret data, ways of eliminating bottlenecks, and even how to avoid future performance regressions.;Jonathan Ross;Java Development Tools;Conference Session;Intermediate;This session takes a practical, hands-on look at Java performance tuning. It discusses methodology (spoiler: it’s the scientific method) and how to apply it to Java SE systems (on any budget). Exploring concrete examples with tools such as the Oracle Java Mission Control feature of Oracle Java SE Advanced, VisualVM, YourKit, and JMH, the presentation focuses on ways of measuring performance, how to interpret data, ways of eliminating bottlenecks, and even how to avoid future performance regressions.
1493070051735001A838;Analyzing Streaming Video with Apache Spark;The Java APIs of the multimedia analytics framework in Oracle Big Data Spatial and Graph enable analysis of streaming video with Apache Spark. The framework’s Java APIs are extensible, making it easy for Java programmers to run specialized analysis packages in Apache Spark.  Java developers can take advantage of the scalability of distributed computing platforms for processing streaming video. This session does a deep dive into using this technology in Oracle Big Data Cloud Service to do motion detection and shows a live demo.;Melliyal Annamalai;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;The Java APIs of the multimedia analytics framework in Oracle Big Data Spatial and Graph enable analysis of streaming video with Apache Spark. The framework’s Java APIs are extensible, making it easy for Java programmers to run specialized analysis packages in Apache Spark.  Java developers can take advantage of the scalability of distributed computing platforms for processing streaming video. This session does a deep dive into using this technology in Oracle Big Data Cloud Service to do motion detection and shows a live demo.
1493056998797001XHOI;Asynchronous by Default, Synchronous When Necessary;By preferring asynchronous communication, we no longer have to worry so much about retries, fallbacks, circuit breakers, failover, and latency. But simply replacing in-process method calls with JAX-RS clients and interfaces doesn’t mean that we have a loosely coupled system. We can achieve fast, independent services only if we move to asynchronous communication via message passing and pub/sub patterns. We also avoid temporal coupling: the biggest challenge in distributed systems, increasing complexity, latency, and the possibility of failures.This presentation shows you how pushing changes asynchronously between systems can improve fault tolerance and make systems more reliable and independent. This will lead us to event sourcing architecture.;Tomasz Nurkiewicz;Java, Cloud, and Server-Side Development;Conference Session;Introductory;By preferring asynchronous communication, we no longer have to worry so much about retries, fallbacks, circuit breakers, failover, and latency. But simply replacing in-process method calls with JAX-RS clients and interfaces doesn’t mean that we have a loosely coupled system. We can achieve fast, independent services only if we move to asynchronous communication via message passing and pub/sub patterns. We also avoid temporal coupling: the biggest challenge in distributed systems, increasing complexity, latency, and the possibility of failures.This presentation shows you how pushing changes asynchronously between systems can improve fault tolerance and make systems more reliable and independent. This will lead us to event sourcing architecture.
1493396501092001Pgsu;Bringing Apache Cassandra to JDK 9;This presentation covers the modifications necessary for Apache Cassandra, as well as Ohc and Jamm, to adapt to the reworked APIs and architecture of the incoming JDK 9. Those modifications include accommodations for Java’s Verona project requirements, Project Jigsaw requirements, new DirectBuffer cleaner behavior, and sun.misc.unsafe changes.;Yingqi Lu;Core Java Platform;Conference Session;Introductory;This presentation covers the modifications necessary for Apache Cassandra, as well as Ohc and Jamm, to adapt to the reworked APIs and architecture of the incoming JDK 9. Those modifications include accommodations for Java’s Verona project requirements, Project Jigsaw requirements, new DirectBuffer cleaner behavior, and sun.misc.unsafe changes.
1493055265986001XzTT;Docker Tips and Tricks for Java Developers;Everyone is talking about containers—but be aware! It takes discipline to use container technology. It may not be as secure nor as optimal as you thought it would be. Although it’s relatively easy to create a new immutable container image to run everywhere, you may have fallen into many of the caveats. Is it running as the root user? Why are the images taking so much space? Why did your containers run out of space in the first place!? Most importantly, your container images may not be as immutable nor repeatable as you thought, and your Java process might be overutilizing assigned resources! Attend this session to learn how to best address these issues when building your Java container images.;Ray Tsang;Java, Cloud, and Server-Side Development;Conference Session;Introductory;Everyone is talking about containers—but be aware! It takes discipline to use container technology. It may not be as secure nor as optimal as you thought it would be. Although it’s relatively easy to create a new immutable container image to run everywhere, you may have fallen into many of the caveats. Is it running as the root user? Why are the images taking so much space? Why did your containers run out of space in the first place!? Most importantly, your container images may not be as immutable nor repeatable as you thought, and your Java process might be overutilizing assigned resources! Attend this session to learn how to best address these issues when building your Java container images.
1493083810088001g8ab;Java Best Practices for Developing and Deploying Against Databases in the Cloud;How would you develop and deploy modern Java web apps against a database in the cloud with plain Java/JDBC, Apache Tomcat, Oracle WebLogic, WebSphere, JBoss, NetBeans, IntelliJ, JDeveloper, or Eclipse? This session discusses the prerequisites (JDK updates), the Java security (JCE) files and trustStore, and configuring your favorite Java IDE and Java EE container to access a database in the cloud.;Jean De Lavarene;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Advanced;How would you develop and deploy modern Java web apps against a database in the cloud with plain Java/JDBC, Apache Tomcat, Oracle WebLogic, WebSphere, JBoss, NetBeans, IntelliJ, JDeveloper, or Eclipse? This session discusses the prerequisites (JDK updates), the Java security (JCE) files and trustStore, and configuring your favorite Java IDE and Java EE container to access a database in the cloud.
1493142558291001KbS7;Java in a World of Containers;This session explains how OpenJDK 9 fits into the world of containers, specifically how it fits with Docker images and containers. The first part of the session focuses on the production of Docker images containing a JDK. It introduces technologies, such as J-Link, that can be used to reduce the size of the JDK and discusses the inclusion of class-data-sharing (CDS) archives and ahead-of-time (AOT) shared object libraries. The second part describes how the Java process can be a good citizen when running within a Java container and obeying resource limits. The presentation also covers the role of CDS archives and AOT shared object libraries that can be shared across running containers to reduce startup time or memory usage.;Paul Sandoz;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;This session explains how OpenJDK 9 fits into the world of containers, specifically how it fits with Docker images and containers. The first part of the session focuses on the production of Docker images containing a JDK. It introduces technologies, such as J-Link, that can be used to reduce the size of the JDK and discusses the inclusion of class-data-sharing (CDS) archives and ahead-of-time (AOT) shared object libraries. The second part describes how the Java process can be a good citizen when running within a Java container and obeying resource limits. The presentation also covers the role of CDS archives and AOT shared object libraries that can be shared across running containers to reduce startup time or memory usage.
14930944121230019tfG;Java LangSec: New Security Enhancements in Java 9;Secure software requires developers to utilize a wide variety of security controls at every layer of application development. These controls range from automatic defenses to APIs that developers simply need to use, to controls that require extensive configuration and understanding to be used effectively. This session reviews several new security enhancements available at various layers within the Java 9 platform. These include SHA-3 support, enhancements to TLS, DTLS support, web plugin deprecation, and more. This presentation will help raise awareness of the many security defenses available in the Java 9 ecosystem, something every Java developer can benefit from.;Jim Manico;Core Java Platform;Conference Session;Advanced;Secure software requires developers to utilize a wide variety of security controls at every layer of application development. These controls range from automatic defenses to APIs that developers simply need to use, to controls that require extensive configuration and understanding to be used effectively. This session reviews several new security enhancements available at various layers within the Java 9 platform. These include SHA-3 support, enhancements to TLS, DTLS support, web plugin deprecation, and more. This presentation will help raise awareness of the many security defenses available in the Java 9 ecosystem, something every Java developer can benefit from.
1493331582732001OKWE;Java Secure Coding Guidelines;One of the main design considerations for the Java platform is to provide a secure environment for executing code from trusted and untrusted sources in a mobile world. Java comes with its own unique set of security challenges. Although the Java security architecture can protect users and systems from hostile programs downloaded over a network, it cannot defend against implementation bugs that occur in trusted code. Such bugs can inadvertently open the very holes that the security architecture was designed to contain. This presentation aims to help the attendees avoid security bugs to keep Java safe. The focus is on new features and timely issues.;Sean Mullan;Core Java Platform;Conference Session;Intermediate;One of the main design considerations for the Java platform is to provide a secure environment for executing code from trusted and untrusted sources in a mobile world. Java comes with its own unique set of security challenges. Although the Java security architecture can protect users and systems from hostile programs downloaded over a network, it cannot defend against implementation bugs that occur in trusted code. Such bugs can inadvertently open the very holes that the security architecture was designed to contain. This presentation aims to help the attendees avoid security bugs to keep Java safe. The focus is on new features and timely issues.
1493054732447001bY8w;Marlin, a JDK9 Success Story: Vector Graphics on Steroids for Java 2D and JavaFX;The Marlin renderer is an open source pure-Java Java 2D antialiasing renderer, forked from the OpenJDK’s Pisces renderer to provide a faster alternative with very good scalability to both Pisces and Ductus (closed source) renderers. In 2015 this session’s speaker discussed with the OpenJDK community how to contribute the Marlin renderer back. He worked hard with Jim Graham and Phil Race, and JEP 265 was submitted in July and integrated within OpenJDK 9 in December 2015. All that intensive work made Marlin even faster. In 2016 he created MarlinFX to replace the shape rasterizer in OpenJFX 9. In this session, you will learn how Marlin works, how to use it, and what performance optimizations were made and and will get the speaker’s feedback on contributing to OpenJDK.;Laurent Bourgès;Java Clients and User Interfaces;Conference Session;Intermediate;The Marlin renderer is an open source pure-Java Java 2D antialiasing renderer, forked from the OpenJDK’s Pisces renderer to provide a faster alternative with very good scalability to both Pisces and Ductus (closed source) renderers. In 2015 this session’s speaker discussed with the OpenJDK community how to contribute the Marlin renderer back. He worked hard with Jim Graham and Phil Race, and JEP 265 was submitted in July and integrated within OpenJDK 9 in December 2015. All that intensive work made Marlin even faster. In 2016 he created MarlinFX to replace the shape rasterizer in OpenJFX 9. In this session, you will learn how Marlin works, how to use it, and what performance optimizations were made and and will get the speaker’s feedback on contributing to OpenJDK.
1493055829806001X2ud;Monitoring and Troubleshooting Tools Available in Your Java 9 “bin” Folder;Monitoring and troubleshooting tools play a key role in the development of reliable, salable, and well-performing applications. The JDK comes bundled with a wide range of diagnostic and troubleshooting tools, which are very useful in nailing down the trickiest of problems we might face in our Java applications. Java 9 is updating the set of tools available in its “bin” folder. It is dropping some and adding some other important monitoring and troubleshooting tools to its toolkit. This session discusses in detail all the tools that Java 9 will be offering and how they can be used to monitor and debug Java applications. It also mentions the tools that will be discontinued from Java 9.;Poonam Parhar;Core Java Platform;Conference Session;Intermediate;Monitoring and troubleshooting tools play a key role in the development of reliable, salable, and well-performing applications. The JDK comes bundled with a wide range of diagnostic and troubleshooting tools, which are very useful in nailing down the trickiest of problems we might face in our Java applications. Java 9 is updating the set of tools available in its “bin” folder. It is dropping some and adding some other important monitoring and troubleshooting tools to its toolkit. This session discusses in detail all the tools that Java 9 will be offering and how they can be used to monitor and debug Java applications. It also mentions the tools that will be discontinued from Java 9.
1493085198441001TYcb;Protecting Java Microservices: Practices and Strategies;Microservices have become the hottest topic in software architecture over the past year, and much can be said about their benefits. But there are many challenges related to their security implementation and security context propagation over their components. This session addresses how to perform authentication and authorization inside a microservices architecture, covering technologies such as OAuth2, OpenID Connect, and JSON Web Token and use of Spring Cloud Security to integrate with a Spring and/or Java EE–based application platform. ;Rodrigo Candido da Silva;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Microservices have become the hottest topic in software architecture over the past year, and much can be said about their benefits. But there are many challenges related to their security implementation and security context propagation over their components. This session addresses how to perform authentication and authorization inside a microservices architecture, covering technologies such as OAuth2, OpenID Connect, and JSON Web Token and use of Spring Cloud Security to integrate with a Spring and/or Java EE–based application platform. 
1493056869827001bEy3;Secrets of Building a Debuggable Runtime;New language runtimes appear all the time, but most of them die young. Failure can be attributed to different causes, but an important factor is that lack of support can limit the community’s and industry’s willingness to adopt a new language. Quicker development and improved serviceability enable emerging languages to overcome this obstacle. By building on the proven technology available in Eclipse OMR, language developers can get more than performance and stability, they also get tools that help them provide competitive serviceability. In this presentation, you will learn how to enable Eclipse OMR’s mature debugging features in your language runtime and also how Eclipse OMR can assist with development and debugging.;Dan Heidinga;Emerging Languages;Conference Session;Intermediate;New language runtimes appear all the time, but most of them die young. Failure can be attributed to different causes, but an important factor is that lack of support can limit the community’s and industry’s willingness to adopt a new language. Quicker development and improved serviceability enable emerging languages to overcome this obstacle. By building on the proven technology available in Eclipse OMR, language developers can get more than performance and stability, they also get tools that help them provide competitive serviceability. In this presentation, you will learn how to enable Eclipse OMR’s mature debugging features in your language runtime and also how Eclipse OMR can assist with development and debugging.
1493318295907001D56Y;Securing the IoT Edge with Java Card;This presentation looks at security risks introduced by new connected devices and highlights how Java Card solutions can help design secure IoT systems. It covers the following:<br>IoT edge security use cases (secure TLS, device attestation, secure I/O) and Java Card as an enabler of strong IoT security (certification, openness, verticals, ...);Nicolas Ponsini;Java and Devices;Conference Session;Intermediate;This presentation looks at security risks introduced by new connected devices and highlights how Java Card solutions can help design secure IoT systems. It covers the following:<br>• Connected devices, security risks, and requirements<br>• Secure hardware options addressing IoT edge security challenges: established (TPM/TEE/Secure Element) and emerging solutions (integrated Secure Element)<br> • Impact of secure hardware introduction on the IoT infrastructure and ecosystem<br>• Java Card as an abstraction for new secure hardware solutions and driving cross-market adoption<br> • IoT edge security use cases (secure TLS, device attestation, secure I/O) and Java Card as an enabler of strong IoT security (certification, openness, verticals, ...)
1493403835775001PoDE;Vectors with Values on the JVM;Supporting (SIMD) vectorization on the JVM requires a scalable runtime to support thousands of vector operations across architectures. A promising approach to addressing the vector programming problem in Java combines Value Types from the OpenJDK Project Valhalla and Machine Code Snippets from the OpenJDK Project Panama. Value Types give us a way to specify custom data types with primitive-like characteristics. Machine Code Snippets give JVM implementers the ability to quickly add native-level operations at the library level via MethodHandle bindings. This session covers how Oracle is putting these experimental VM features together to add more high-performance programming tools to the JVM and Java.;Paul Sandoz;Core Java Platform;Conference Session;Intermediate;Supporting (SIMD) vectorization on the JVM requires a scalable runtime to support thousands of vector operations across architectures. A promising approach to addressing the vector programming problem in Java combines Value Types from the OpenJDK Project Valhalla and Machine Code Snippets from the OpenJDK Project Panama. Value Types give us a way to specify custom data types with primitive-like characteristics. Machine Code Snippets give JVM implementers the ability to quickly add native-level operations at the library level via MethodHandle bindings. This session covers how Oracle is putting these experimental VM features together to add more high-performance programming tools to the JVM and Java.
14935138910720018zxL;Writing Best-in-Class Web Apps in Java;The web and Java are the best platforms for building business applications. Unfortunately, combining them requires stitching together a set of disjoint technologies, often making development and maintenance miserable. This session presents a novel approach to seamlessly bridging the gap between Java and the web that makes development of best-in-class web apps easy. Vaadin Flow is a new open source framework that allows access to a web browser directly from Java and automates two-way communication between browser and server. It builds on Polymer and the latest web standards to achieve the best-in-class user experience while enabling you to program solely in Java. The session covers how to get started on building great web apps, step by step.;Joonas Lehtinen;Java Clients and User Interfaces;Conference Session;Intermediate;The web and Java are the best platforms for building business applications. Unfortunately, combining them requires stitching together a set of disjoint technologies, often making development and maintenance miserable. This session presents a novel approach to seamlessly bridging the gap between Java and the web that makes development of best-in-class web apps easy. Vaadin Flow is a new open source framework that allows access to a web browser directly from Java and automates two-way communication between browser and server. It builds on Polymer and the latest web standards to achieve the best-in-class user experience while enabling you to program solely in Java. The session covers how to get started on building great web apps, step by step.
1493576854104001fk3j;Big Data on Big Maps:  Displaying Vast Amounts of Geospatial Data;What would a map with all 30+ million streets of the US look like? What would displaying all 600 million taxi pickup and drop-off locations in New York City on a single map tell us about the most-popular destinations? In this session, you will learn how to lift and shift vast amounts of raw data (such as street segment data or tweets) from Oracle Storage Cloud Service to Oracle Database Cloud Service and how to set up Java microservices on Oracle Cloud Infrastructure to query and render the geospatial data onto a single, shared digital map—through a coordinated divide-and-conquer approach.;Roberto Mercado Mariscal;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;What would a map with all 30+ million streets of the US look like? What would displaying all 600 million taxi pickup and drop-off locations in New York City on a single map tell us about the most-popular destinations? In this session, you will learn how to lift and shift vast amounts of raw data (such as street segment data or tweets) from Oracle Storage Cloud Service to Oracle Database Cloud Service and how to set up Java microservices on Oracle Cloud Infrastructure to query and render the geospatial data onto a single, shared digital map—through a coordinated divide-and-conquer approach.
1493777894518001PiqX;Building Mobile Apps with Gluon and JavaFX;Did you know that you can now use pure Java to build cross-platform mobile applications for iOS and Android? This session talks about the open source projects enabling Java 9 on mobile while enabling development teams to build beautiful apps, using existing Java skills and IDEs. It also shows you how to accelerate your development process with Gluon open source and commercial tools such as JavaFXports, Scene Builder, and Gluon Mobile.;Eugene Ryzhikov;Java Clients and User Interfaces;Conference Session;Intermediate;Did you know that you can now use pure Java to build cross-platform mobile applications for iOS and Android? This session talks about the open source projects enabling Java 9 on mobile while enabling development teams to build beautiful apps, using existing Java skills and IDEs. It also shows you how to accelerate your development process with Gluon open source and commercial tools such as JavaFXports, Scene Builder, and Gluon Mobile.
1493566561115001s7EI;Build Web, Mobile, and Desktop Applications with Oracle JET, Oracle Cloud, and Electron;You can now use a single framework and codebase to build your web, mobile, and desktop applications.  Oracle JavaScript Extension Toolkit (Oracle JET) paired with Oracle Cloud Platform and DBaaS make it possible. This session demonstrates a timekeeping application written once but running as (1) a web application, (2) a native mobile application on iOS and Android using Apache Cordova, and (3) an offline desktop application using Electron (Chromium and Node.js). Not only is it faster and cheaper to build your applications with Oracle JET but also your apps will inherit the user experience (UX) and user interface (UI) elements that so many are familiar with in Oracle’s other SaaS and PaS offerings.;Jerry Ward;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;You can now use a single framework and codebase to build your web, mobile, and desktop applications.  Oracle JavaScript Extension Toolkit (Oracle JET) paired with Oracle Cloud Platform and DBaaS make it possible. This session demonstrates a timekeeping application written once but running as (1) a web application, (2) a native mobile application on iOS and Android using Apache Cordova, and (3) an offline desktop application using Electron (Chromium and Node.js). Not only is it faster and cheaper to build your applications with Oracle JET but also your apps will inherit the user experience (UX) and user interface (UI) elements that so many are familiar with in Oracle’s other SaaS and PaS offerings.
1493709593093001s3s6;Collaborative Cloud-Based Virtual Reality for Scientific Education and Research;Being able to rapidly construct virtual cloud networks and fire up real-time, interactive simulations of molecular reactions were key requirements for the groundbreaking startup Interactive Scientific. In this session, Oracle Cloud Architect Phil Bates and the CTO of Interactive Scientific explain how Oracle Cloud Infrastructure was used to programmatically create secure, isolated, elastically scalable deployments to simulate molecular interactions for a range of customers—from schools teaching basic chemistry principles to institutions doing state-of-the-art research and drug design.;Martin Hogg;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Advanced;Being able to rapidly construct virtual cloud networks and fire up real-time, interactive simulations of molecular reactions were key requirements for the groundbreaking startup Interactive Scientific. In this session, Oracle Cloud Architect Phil Bates and the CTO of Interactive Scientific explain how Oracle Cloud Infrastructure was used to programmatically create secure, isolated, elastically scalable deployments to simulate molecular interactions for a range of customers—from schools teaching basic chemistry principles to institutions doing state-of-the-art research and drug design.
1493676975497001f8wq;Graal VM: High-Performance Polyglot Runtime ;This session presents the Graal project, which enhances the Java ecosystem with an integrated, polyglot, high-performance execution environment for dynamic, static, and native languages. Graal supports Java, Scala, Kotlin, Groovy, and other JVM-based languages. At the same time, it can run the dynamic scripting languages JavaScript, Node.js, Ruby, R, and Python. Furthermore, it integrates C, C++, and other LLVM-based native languages into the same runtime environment. Graal can run either as part of the Java HotSpot VM or as a standalone alternative with a low footprint and fast startup for embedded or serverless computing environments. The session covers the architecture of Graal and gives live demonstrations of its unique capabilities.;Thomas Wuerthinger;Emerging Languages;Conference Session;Advanced;This session presents the Graal project, which enhances the Java ecosystem with an integrated, polyglot, high-performance execution environment for dynamic, static, and native languages. Graal supports Java, Scala, Kotlin, Groovy, and other JVM-based languages. At the same time, it can run the dynamic scripting languages JavaScript, Node.js, Ruby, R, and Python. Furthermore, it integrates C, C++, and other LLVM-based native languages into the same runtime environment. Graal can run either as part of the Java HotSpot VM or as a standalone alternative with a low footprint and fast startup for embedded or serverless computing environments. The session covers the architecture of Graal and gives live demonstrations of its unique capabilities.
1493576371795001fyL9;Java ME for IoT: From Prototype to Product;Bringing an IoT solution to market has many challenges: developing the software end to end, engineering, integrating, and field-testing the device hardware, and testing the solution and bringing it to deployment. The fast-paced IoT world mandates that all parts be developed in parallel, following the scrum model. Success requires proven end-to-end software frameworks and flexible, modular, pretested hardware components. Gemalto M2M was the first company to optimize Java for M2M wireless modules, in 2003, to address this challenge. This session presents an overview of the solution components and how they are used in IoT/M2M projects around the world. It explains how to start yourself and end with an outlook into the future.;Rainer Eschrich;Java and Devices;Conference Session;Introductory;Bringing an IoT solution to market has many challenges: developing the software end to end, engineering, integrating, and field-testing the device hardware, and testing the solution and bringing it to deployment. The fast-paced IoT world mandates that all parts be developed in parallel, following the scrum model. Success requires proven end-to-end software frameworks and flexible, modular, pretested hardware components. Gemalto M2M was the first company to optimize Java for M2M wireless modules, in 2003, to address this challenge. This session presents an overview of the solution components and how they are used in IoT/M2M projects around the world. It explains how to start yourself and end with an outlook into the future.
1493987758989001TVE1;Java PaaS: Then, Now, and Next;Java developers want to deploy their apps easily. Fortunately, there are great solutions for them in the form of platform as a service for Java. This panel discussion shares the views of Oracle, Heroku, and Google engineers about their respective Java PaaSs, how this space has evolved over the past few years, and what makes a great developer experience for users today. The panelists discuss the future of PaaS in light of new technologies such as microservices, containerization, and serverless architectures. Finally they will open up the space for an interactive discussion with the audience.;Guillaume Laforge;Java, Cloud, and Server-Side Development;Conference Session;Introductory;Java developers want to deploy their apps easily. Fortunately, there are great solutions for them in the form of platform as a service for Java. This panel discussion shares the views of Oracle, Heroku, and Google engineers about their respective Java PaaSs, how this space has evolved over the past few years, and what makes a great developer experience for users today. The panelists discuss the future of PaaS in light of new technologies such as microservices, containerization, and serverless architectures. Finally they will open up the space for an interactive discussion with the audience.
1493579106167001shzo;Next-Gen Visual Programming and 3D Modeling in the Cloud;Java continues to grow as a platform, with innovative features being added in each release. However, programs are still developed by textual editors that are decades old, using client technology tethered to the desktop. This presentation discusses the future of IDEs with VRL-Studio, an innovative visual programming environment that is just as powerful as textual editors. It also shows a prototype version of this tool that can run on Oracle Cloud powered by JPro technology and demonstrates a 3D modeling use case.;Michael Hoffer;Java Clients and User Interfaces;Conference Session;Intermediate;Java continues to grow as a platform, with innovative features being added in each release. However, programs are still developed by textual editors that are decades old, using client technology tethered to the desktop. This presentation discusses the future of IDEs with VRL-Studio, an innovative visual programming environment that is just as powerful as textual editors. It also shows a prototype version of this tool that can run on Oracle Cloud powered by JPro technology and demonstrates a 3D modeling use case.
1493561509208001suAG;Putting a Vulcan Nerve Pinch on Java Tests;Spock is a Groovy-based testing framework that leverages all the best practices of the last several years, taking advantage of much of the development experience of the industry. So combine Junit, BDD, RSpec, Groovy, and Vulcans...and you get Spock! This session assumes some understanding of testing and Junit and builds on it. It introduces and digs deep into Spock as a test specification and mocking tool.;Ken Sipe;Java Development Tools;Conference Session;Intermediate;Spock is a Groovy-based testing framework that leverages all the best practices of the last several years, taking advantage of much of the development experience of the industry. So combine Junit, BDD, RSpec, Groovy, and Vulcans...and you get Spock! This session assumes some understanding of testing and Junit and builds on it. It introduces and digs deep into Spock as a test specification and mocking tool.
1493657902898001fmkZ;Rapid Node.js Development with NetBeans;This session covers the basics of developing Node.js applications with NetBeans. NetBeans includes fully integrated support for both JavaScript and Node.js. You’ll get a tour of the features and learn how NetBeans can accelerate your projects. The presentation looks at basic code editing capabilities provided by the IDE, tool integration (npm/Grunt/Bower/Webpack), frameworks such as Express, and debugging capabilities. You’ll see why NetBeans is the best free JavaScript/Node.js IDE.;Ryan Cuprak;Developer Community Day: NetBeans;Conference Session;Introductory;This session covers the basics of developing Node.js applications with NetBeans. NetBeans includes fully integrated support for both JavaScript and Node.js. You’ll get a tour of the features and learn how NetBeans can accelerate your projects. The presentation looks at basic code editing capabilities provided by the IDE, tool integration (npm/Grunt/Bower/Webpack), frameworks such as Express, and debugging capabilities. You’ll see why NetBeans is the best free JavaScript/Node.js IDE.
1493862520791001xH00;Why Bother with Kotlin;Most presentations introducing a new language are really just language tours. A lot of interesting language features are shown, but it’s not always clear <i>why</i> one would choose to adopt that new language. This presentation focuses less on every little language feature and deviations from the Java language we all know and love and focuses on fewer features with a more in-depth discussion of how these features combine to make a compelling new alternative to Java.;Justin Lee;Emerging Languages;Conference Session;Intermediate;Most presentations introducing a new language are really just language tours. A lot of interesting language features are shown, but it’s not always clear <i>why</i> one would choose to adopt that new language. This presentation focuses less on every little language feature and deviations from the Java language we all know and love and focuses on fewer features with a more in-depth discussion of how these features combine to make a compelling new alternative to Java.
1493694150304001sfxW;Why You’re Going to <i>Fail</i> Running Java on Docker!;Running Java on Docker is easy, right? Just create a Dockerfile and run a Docker build, and then you’re ready to go! Thinking this way is the easiest path to complete <i>failure</i> when running Docker containers in production. Want to get ready to really run Java on Docker in production? Then come to this session to learn a lot about JVM and containers and avoid the highway to debugging hell. You’ll get simple tips and tricks that will save you hundreds of hours of debugging and logging to figure out what is wrong with your containers.;Burr Sutter;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Running Java on Docker is easy, right? Just create a Dockerfile and run a Docker build, and then you’re ready to go! Thinking this way is the easiest path to complete <i>failure</i> when running Docker containers in production. Want to get ready to really run Java on Docker in production? Then come to this session to learn a lot about JVM and containers and avoid the highway to debugging hell. You’ll get simple tips and tricks that will save you hundreds of hours of debugging and logging to figure out what is wrong with your containers.
14936951396710018T7K;12 Factors for Cloud Success;Think that developing apps for the cloud is changing everything? Almost! Luckily, we already have something to help us. Ever heard of “12-factor apps”? This set of best practices is an amazing guide to how you should create/modify your apps for this new cloudy world. Want to know what 12-factor means for Java apps in 2017 in this new container/Kubernetes/Java EE/Spring Boot/MicroProfile world? Then dive into this live demo session and learn how you can leverage your current skills with the 12 factors to create true cloud-native applications.;Edson Yanaga;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Think that developing apps for the cloud is changing everything? Almost! Luckily, we already have something to help us. Ever heard of “12-factor apps”? This set of best practices is an amazing guide to how you should create/modify your apps for this new cloudy world. Want to know what 12-factor means for Java apps in 2017 in this new container/Kubernetes/Java EE/Spring Boot/MicroProfile world? Then dive into this live demo session and learn how you can leverage your current skills with the 12 factors to create true cloud-native applications.
1493926408552001UJO2;Build, Debug, and Deploy Your First Chatbot;Chatbots are computer programs that interact via auditory or textual methods. They can be integrated in any chat service, such as Slack or Facebook Messenger. You can talk to them by using SMS and can even converse with them by using Alexa. This session’s speakers explains how he built a chatbot for his Star Wars–struck family. Attendees will learn the key components required for a chatbot. The presentation also discusses a fully functional chatbot built with a Java serverless back end and multiple front ends such as Alexa, SMS, and Slack. Attendees will learn how to publish their first Alexa skill set and will hear about a range of technologies, development tools, and debugging techniques. They will also be able to ask Star Wars questions live during the session.;Arun Gupta;Java, Cloud, and Server-Side Development;Conference Session;Introductory;Chatbots are computer programs that interact via auditory or textual methods. They can be integrated in any chat service, such as Slack or Facebook Messenger. You can talk to them by using SMS and can even converse with them by using Alexa. This session’s speakers explains how he built a chatbot for his Star Wars–struck family. Attendees will learn the key components required for a chatbot. The presentation also discusses a fully functional chatbot built with a Java serverless back end and multiple front ends such as Alexa, SMS, and Slack. Attendees will learn how to publish their first Alexa skill set and will hear about a range of technologies, development tools, and debugging techniques. They will also be able to ask Star Wars questions live during the session.
14935747126800018I39;Developing Microservices with Kotlin;Next Insurance was founded at the beginning of 2016, and the first lines of its production code started accumulating in May 2016. As the first back-end developer, this session’s speaker started writing in Java and out of curiosity was experimenting with Kotlin. Kotlin had just seen its 1.0 release two months earlier. A year later, Next Insurance’s entire back-end development team is writing all the code in Kotlin. They have six microservices and several AWS lambda functions all written in Kotlin. Migration from 1.0.x to Kotlin 1.1 was smooth, and the developers are happy. This presentation covers the language’s features and why the speaker thinks it is awesome and fits perfectly with his company’s architecture.  ;Haim Yadid;Emerging Languages;Conference Session;Intermediate;Next Insurance was founded at the beginning of 2016, and the first lines of its production code started accumulating in May 2016. As the first back-end developer, this session’s speaker started writing in Java and out of curiosity was experimenting with Kotlin. Kotlin had just seen its 1.0 release two months earlier. A year later, Next Insurance’s entire back-end development team is writing all the code in Kotlin. They have six microservices and several AWS lambda functions all written in Kotlin. Migration from 1.0.x to Kotlin 1.1 was smooth, and the developers are happy. This presentation covers the language’s features and why the speaker thinks it is awesome and fits perfectly with his company’s architecture.  
1493588968117001sBhW;Event Sourcing with JVM Languages;The nice thing about software engineering is that sometimes you get to work with new and shiny things. However, other times you get to work with ancient things. Event sourcing is one of those ancient things that is making a comeback in software. It is a way of managing storage and access of data such that it is self-auditing and versioned. For some problems, auditing and versioning are requirements, but for most problems, event sourcing makes debugging easier. This session goes over the concepts and how to put them into practice.;Rahul Somasunderam;Developer Community Day: Community;Conference Session;Introductory;The nice thing about software engineering is that sometimes you get to work with new and shiny things. However, other times you get to work with ancient things. Event sourcing is one of those ancient things that is making a comeback in software. It is a way of managing storage and access of data such that it is self-auditing and versioned. For some problems, auditing and versioning are requirements, but for most problems, event sourcing makes debugging easier. This session goes over the concepts and how to put them into practice.
1493645339992001sVfd;Getting Started with Spark;Data analytics and machine learning have become mainstream in recent years. With the amount of data available, distributed computing has become a necessity. Apache Spark is one of the forerunners in the distributed computing domain. In this session, you’ll learn about the background and basic concepts of Apache Spark. You’ll also see, live, how to build a reference implementation in an IDE. The minimal-slide session, designed to be interactive, is recommended for developers who want to start experimenting with Spark. ;Nikhil Nanivadekar;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Data analytics and machine learning have become mainstream in recent years. With the amount of data available, distributed computing has become a necessity. Apache Spark is one of the forerunners in the distributed computing domain. In this session, you’ll learn about the background and basic concepts of Apache Spark. You’ll also see, live, how to build a reference implementation in an IDE. The minimal-slide session, designed to be interactive, is recommended for developers who want to start experimenting with Spark. 
14935733103460018Byr;How Languages Influence Each Other: Reflections on 14 Years of Apache Groovy;Languages have been influencing one another since the dawn of computer programming. There are families of languages: from Algol descendants with begin/end code blocks to those with curly braces such as C. Languages are not invented in a vacuum but are inspired by their predecessors. This session’s speaker, who has been working on Apache Groovy for the past 14 years, reflects on the influences that have driven the design of programming languages. In particular, Groovy’s base syntax was directly derived from Java’s but quickly developed its own flavor, adding closures, type inference, and operators from Ruby. Groovy also inspired other languages: C#, Swift, and JavaScript adopted Groovy’s null-safe navigation operator and the famous Elvis operator.;Guillaume Laforge;Emerging Languages;Conference Session;Introductory;Languages have been influencing one another since the dawn of computer programming. There are families of languages: from Algol descendants with begin/end code blocks to those with curly braces such as C. Languages are not invented in a vacuum but are inspired by their predecessors. This session’s speaker, who has been working on Apache Groovy for the past 14 years, reflects on the influences that have driven the design of programming languages. In particular, Groovy’s base syntax was directly derived from Java’s but quickly developed its own flavor, adding closures, type inference, and operators from Ruby. Groovy also inspired other languages: C#, Swift, and JavaScript adopted Groovy’s null-safe navigation operator and the famous Elvis operator.
1493551139638001sm7Y;IntelliJ IDEA Tips and Tricks;Generally developers <i>just use</i> the IDE and don’t always utilize the power of automated refactorings, shortcuts, fast navigation, and other awesome features that IDEs provide. This session is an IntelliJ IDEA showcase. It takes a look at advanced features of the IDE, including navigation and typing, but also cross-functional features that leverage the power of the plugin system. The speaker also demos his favorite IntelliJ IDEA features.;Anton Arhipov;Java Development Tools;Conference Session;Intermediate;Generally developers <i>just use</i> the IDE and don’t always utilize the power of automated refactorings, shortcuts, fast navigation, and other awesome features that IDEs provide. This session is an IntelliJ IDEA showcase. It takes a look at advanced features of the IDE, including navigation and typing, but also cross-functional features that leverage the power of the plugin system. The speaker also demos his favorite IntelliJ IDEA features.
14936334019260018oYc;JavaScript: Does It Make Sense In Large Web and Mobile Apps?;JavaScript in the enterprise? Does that even make sense? After years of developing Java applications in the enterprise, developers have become curious about what JavaScript can do for them. How can you translate concepts such as “modularity” and “loose coupling” to JavaScript? Do JavaScript applications have these kinds of concepts? AngularJS is a popular solution in the JavaScript world, and there are many other solutions, too. In this session, you will be introduced to RequireJS, responsive JavaScript, mobile development with JavaScript, and JavaScript transpilers. The aim of the session is give you a thorough understanding of whether JavaScript is a good solution for you in developing enterprise apps.;Geertjan Wielenga;Emerging Languages;Conference Session;Introductory;JavaScript in the enterprise? Does that even make sense? After years of developing Java applications in the enterprise, developers have become curious about what JavaScript can do for them. How can you translate concepts such as “modularity” and “loose coupling” to JavaScript? Do JavaScript applications have these kinds of concepts? AngularJS is a popular solution in the JavaScript world, and there are many other solutions, too. In this session, you will be introduced to RequireJS, responsive JavaScript, mobile development with JavaScript, and JavaScript transpilers. The aim of the session is give you a thorough understanding of whether JavaScript is a good solution for you in developing enterprise apps.
1493669049836001sGTL;Optimizing Wind Farms with Oracle Cloud Infrastructure;The ability to deploy supercomputing workloads on public cloud infrastructure presents a world of opportunities for engineers building complex fluid dynamics, modeling, and simulation applications. This session explains how supercomputing workloads can be rapidly deployed and executed with blistering performance with Oracle Cloud Infrastructure and describes how Oracle customers are using it to maximize the efficiency of wind farms—at a fraction of the cost and complexity of traditional supercomputing applications.;Martin Hogg;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;The ability to deploy supercomputing workloads on public cloud infrastructure presents a world of opportunities for engineers building complex fluid dynamics, modeling, and simulation applications. This session explains how supercomputing workloads can be rapidly deployed and executed with blistering performance with Oracle Cloud Infrastructure and describes how Oracle customers are using it to maximize the efficiency of wind farms—at a fraction of the cost and complexity of traditional supercomputing applications.
1493698333458001fasf;Pattern Matching the Genome at Scale with Docker and Kubernetes;Building a self-scaling and self-healing Dockerized microservices or fast data cluster for life sciences or healthcare? Look no further than the blueprint for pattern matching at scale with the granularity, automation, redundancy, and real-time insights that only fast data orchestration can bring. This session looks at a real-life sciences use case searching the human genome for genetic patterns. You’ll see a comprehensive pattern matching application deployed in a Kubernetes cluster to illustrate the advantage of OCC for MSA and DevOps. Expanding on this use case, the presentation also explores how to leverage pattern matching at scale for many other industries.;Jerry Ward;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Building a self-scaling and self-healing Dockerized microservices or fast data cluster for life sciences or healthcare? Look no further than the blueprint for pattern matching at scale with the granularity, automation, redundancy, and real-time insights that only fast data orchestration can bring. This session looks at a real-life sciences use case searching the human genome for genetic patterns. You’ll see a comprehensive pattern matching application deployed in a Kubernetes cluster to illustrate the advantage of OCC for MSA and DevOps. Expanding on this use case, the presentation also explores how to leverage pattern matching at scale for many other industries.
149383973486100173Hv;SODA: An Open Source NoSQL-Style JSON Document API for Relational Databases;JSON is the de facto data exchange format encountered at every level, whether it’s your browser sending off a REST call or your application receiving and generating JSON data. However, storing and querying JSON in relational databases requires developers to translate operations on JSON to SQL and then use JDBC to execute the SQL. Developers are left to bridge the gap from JSON to relational and from Java to SQL. SODA is an open source API that makes the JSON integration more seamless by enabling you to use a relational database as a NoSQL JSON document store. SODA works with Oracle Database on-premises and in the cloud. This session presents a technical overview and roadmap of SODA and shows how to start using it on Oracle Database Exadata Express Cloud Service with a few clicks.;Beda Hammerschmidt;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;JSON is the de facto data exchange format encountered at every level, whether it’s your browser sending off a REST call or your application receiving and generating JSON data. However, storing and querying JSON in relational databases requires developers to translate operations on JSON to SQL and then use JDBC to execute the SQL. Developers are left to bridge the gap from JSON to relational and from Java to SQL. SODA is an open source API that makes the JSON integration more seamless by enabling you to use a relational database as a NoSQL JSON document store. SODA works with Oracle Database on-premises and in the cloud. This session presents a technical overview and roadmap of SODA and shows how to start using it on Oracle Database Exadata Express Cloud Service with a few clicks.
1493689260717001s4by;Build Happiness: Using Gradle to Build Better Software;​Gradle is the build tool of choice for modern software development, from numerous Apache open source projects to everything generated with Android Studio. It’s an end-to-end automation and delivery framework that can build projects in Java, Groovy, C++, Python, JavaScript...whatever your language of choice. It’s adaptable for monolithic projects or microservices and can deploy to any platform, whether on-premises or in the cloud. This session explores what makes Gradle so versatile. You’ll see a live demonstration of building Java, Groovy, and Python artifacts and see automated publishing to Maven repositories and serverless cloud platforms such as AWS Lambda.;Stewart Bryson;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;​Gradle is the build tool of choice for modern software development, from numerous Apache open source projects to everything generated with Android Studio. It’s an end-to-end automation and delivery framework that can build projects in Java, Groovy, C++, Python, JavaScript...whatever your language of choice. It’s adaptable for monolithic projects or microservices and can deploy to any platform, whether on-premises or in the cloud. This session explores what makes Gradle so versatile. You’ll see a live demonstration of building Java, Groovy, and Python artifacts and see automated publishing to Maven repositories and serverless cloud platforms such as AWS Lambda.
1493669442028001fKvT;Clouds, Functions, Density, and Compute;This session explains how serverless architecture and function as a service (FaaS) paradigms present fundamental opportunities to improve the development experience, increase speed of delivery, and drive down the cost of ownership of cloud applications. Following a comparison of serverless and FaaS technologies, it demonstrates how Oracle Cloud Infrastructure provides unparalleled opportunities for developers wanting to write code fast and deliver applications faster.;Shaun Smith;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;This session explains how serverless architecture and function as a service (FaaS) paradigms present fundamental opportunities to improve the development experience, increase speed of delivery, and drive down the cost of ownership of cloud applications. Following a comparison of serverless and FaaS technologies, it demonstrates how Oracle Cloud Infrastructure provides unparalleled opportunities for developers wanting to write code fast and deliver applications faster.
1493904171074001xJ4m;Extreme GUI Makeover 2017;This session is for all UI lovers, GUI enthusiasts, and friends of modern and user-friendly UX. JavaFX is not only a modern UI toolkit but also the recommended UI toolkit of Java. It offers a lot of amazing features to help you craft modern-looking and interactive user interfaces. JavaFX offers everything needed for creating well-behaved and aesthetically pleasing GUI applications. The presentation compares and contrasts your run-of-the-mill application and then goes one step further by showing how developers can create an “extreme” GUI application. Who needs an old-school toolbar when they can have an animated menu? Because this is an “extreme makeover” session, the examples are presented as live demos and live coding sessions.;Hendrik Ebbers;Java Clients and User Interfaces;Conference Session;Intermediate;This session is for all UI lovers, GUI enthusiasts, and friends of modern and user-friendly UX. JavaFX is not only a modern UI toolkit but also the recommended UI toolkit of Java. It offers a lot of amazing features to help you craft modern-looking and interactive user interfaces. JavaFX offers everything needed for creating well-behaved and aesthetically pleasing GUI applications. The presentation compares and contrasts your run-of-the-mill application and then goes one step further by showing how developers can create an “extreme” GUI application. Who needs an old-school toolbar when they can have an animated menu? Because this is an “extreme makeover” session, the examples are presented as live demos and live coding sessions.
1493567409018001szoh;Java at Speed: Getting the Most Out of Modern Hardware;Getting the most out of your Java applications can be an interesting challenge. Understanding some of the optimizations the latest crop of JVMs are able to apply when running on the latest servers may help with that. This session discusses some of those features and optimizations. Besides covering some JIT compiler capabilities, it takes a look at the evolution of Intel-based server platforms, quickly traversing features introduced over the past few years. It also demonstrates some examples of JVM JITs using these capabilities, where available, as they adapt the code they generate to the specific processors they run on. If you like to geek out to the sound of mechanical sympathy discussions, this is the session for you.;Gil Tene;Core Java Platform;Conference Session;Intermediate;Getting the most out of your Java applications can be an interesting challenge. Understanding some of the optimizations the latest crop of JVMs are able to apply when running on the latest servers may help with that. This session discusses some of those features and optimizations. Besides covering some JIT compiler capabilities, it takes a look at the evolution of Intel-based server platforms, quickly traversing features introduced over the past few years. It also demonstrates some examples of JVM JITs using these capabilities, where available, as they adapt the code they generate to the specific processors they run on. If you like to geek out to the sound of mechanical sympathy discussions, this is the session for you.
14936297967420018Alw;Java Desktop in the Wild for Science and Analysis;The Java Desktop is used throughout a broad range of industries in the areas of research, science, logistics, analysis, defense, aerospace, and many more. Many different frameworks and tools are available in support of the Java Desktop, including JavaFX, Java Swing, and rich-client platforms such as the NetBeans platform. In this session, you will meet senior architects and engineers from organizations such as NASA and Airbus, who will share their experiences and motivations for using the Java Desktop as the basis of their complex industrial software.;Geertjan Wielenga;Java Clients and User Interfaces;Conference Session;Advanced;The Java Desktop is used throughout a broad range of industries in the areas of research, science, logistics, analysis, defense, aerospace, and many more. Many different frameworks and tools are available in support of the Java Desktop, including JavaFX, Java Swing, and rich-client platforms such as the NetBeans platform. In this session, you will meet senior architects and engineers from organizations such as NASA and Airbus, who will share their experiences and motivations for using the Java Desktop as the basis of their complex industrial software.
14936933539610018gKw;Java EE: Heavyweight or Lightweight—Mythbusters;How fast is a deployment? What is the minimum size of a Java EE thin WAR? What are the RAM requirements of application servers? What is the out-of-the-box performance? How many transactions per second are achievable? What is the performance penalty of EJB/CDI/JPA and so on? What is the overhead of a transaction? Is Java EE lightweight enough to run in clouds? How big (in terms of disk size) are application servers? This session asks as many heretical questions about Java EE & Co. as possible. Come to answer them together, with plain numbers and code. Heretical questions are highly welcome!;Adam Bien;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;How fast is a deployment? What is the minimum size of a Java EE thin WAR? What are the RAM requirements of application servers? What is the out-of-the-box performance? How many transactions per second are achievable? What is the performance penalty of EJB/CDI/JPA and so on? What is the overhead of a transaction? Is Java EE lightweight enough to run in clouds? How big (in terms of disk size) are application servers? This session asks as many heretical questions about Java EE & Co. as possible. Come to answer them together, with plain numbers and code. Heretical questions are highly welcome!
1493660608528001fHDq;Microservices and Cloud-Driven Code Simplification;Microservices enforce self-containment and platform neutrality. Clouds and containers come with additional constraints regarding configuration, monitoring, logging, and load balancing. In this session, the presenter codes an application with stock Java EE and presents approaches for code and bloat removal. Questions are highly welcome.;Adam Bien;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Microservices enforce self-containment and platform neutrality. Clouds and containers come with additional constraints regarding configuration, monitoring, logging, and load balancing. In this session, the presenter codes an application with stock Java EE and presents approaches for code and bloat removal. Questions are highly welcome.
1493997016786001TGxl;Modern Application and Microservices Security from EE6 JASPIC to the EE8 Security API;Java EE 6 added the Java Authentication Service Provider Interface for Containers (JASPIC) to the EE specification. With JASPIC, Java EE servers and applications have a flexible and customizable way to generate a principal and roles for securing applications. Unfortunately, JASPIC has been a specification few knew about. But with Java EE 8, microservices, and the focus on the new Java EE Security API, JASPIC is starting to get attention. This session looks at JASPIC and the Java EE Security API from a modern application and microservices security perspective. It first demonstrates how to secure the major Java EE components (Servlet, JSP, JSF, JAX-RS, JAX-WS) with JASPIC and then shows how security will change migration to Java EE 8 and the Java EE Security API.;Michael Remijan;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Java EE 6 added the Java Authentication Service Provider Interface for Containers (JASPIC) to the EE specification. With JASPIC, Java EE servers and applications have a flexible and customizable way to generate a principal and roles for securing applications. Unfortunately, JASPIC has been a specification few knew about. But with Java EE 8, microservices, and the focus on the new Java EE Security API, JASPIC is starting to get attention. This session looks at JASPIC and the Java EE Security API from a modern application and microservices security perspective. It first demonstrates how to secure the major Java EE components (Servlet, JSP, JSF, JAX-RS, JAX-WS) with JASPIC and then shows how security will change migration to Java EE 8 and the Java EE Security API.
1493566656255001siLV;Understanding Java Garbage Collection;Garbage collection is an integral part of application behavior on Java platforms, yet it is often misunderstood. Developers have choices in selecting and tuning collector mechanisms as well as in application architecture. This session reviews and classifies various garbage collection techniques available in JVMs today. After a quick overview of common garbage collection techniques such as generational, parallel, stop-the-world, incremental, and concurrent algorithms, it defines terms and metrics common to all collectors. The presentation also classifies each major JVM collector’s mechanisms and discusses the trade-offs involved in balancing requirements for responsiveness, throughput, space, and available memory.;Gil Tene;Core Java Platform;Conference Session;Intermediate;Garbage collection is an integral part of application behavior on Java platforms, yet it is often misunderstood. Developers have choices in selecting and tuning collector mechanisms as well as in application architecture. This session reviews and classifies various garbage collection techniques available in JVMs today. After a quick overview of common garbage collection techniques such as generational, parallel, stop-the-world, incremental, and concurrent algorithms, it defines terms and metrics common to all collectors. The presentation also classifies each major JVM collector’s mechanisms and discusses the trade-offs involved in balancing requirements for responsiveness, throughput, space, and available memory.
14937516632680017jiR;Updating Your Java Client Desktop and JavaFX Applications for JDK 9;JDK 9 is a major update to the Java platform that provides new opportunities and challenges for all applications. This session focuses on those unique to the Java client, including JavaFX. High-DPI displays are now fully supported. Some previously deprecated APIs have been removed, and applications can update to newer APIs. The module system in JDK 9 hides internal classes of Swing, 2D, AWT, and JavaFX that may have been used by applications and also provides new ways to deliver applications that are better encapsulated. The session presents common cases and solutions and discusses how to deploy your application as a module and the benefits this can bring. Sample code and demos are used throughout.;Kevin Rushforth;Java Clients and User Interfaces;Conference Session;Intermediate;JDK 9 is a major update to the Java platform that provides new opportunities and challenges for all applications. This session focuses on those unique to the Java client, including JavaFX. High-DPI displays are now fully supported. Some previously deprecated APIs have been removed, and applications can update to newer APIs. The module system in JDK 9 hides internal classes of Swing, 2D, AWT, and JavaFX that may have been used by applications and also provides new ways to deliver applications that are better encapsulated. The session presents common cases and solutions and discusses how to deploy your application as a module and the benefits this can bring. Sample code and demos are used throughout.
1493667420374001f2Pt;Against All Odds: Solving the Interoperability Puzzle in the Smart Home;In the quickly growing smart home market, the industry has come up with a vast number of standards, protocols, and products. Be it Apple HomeKit, Amazon Echo, or Google Home, they usually don't play well together and there is hardly any interoperability across vendors. This session demonstrates how the technical gaps between different devices can be bridged, but it also shows that the real challenge is within the semantic interoperability. To enable new uses cases such as machine learning and artificial intelligence, semantics must be standardized, machine-readable, and accessible. Using the Java-based, community-driven Eclipse SmartHome framework, the presentation shows how this can work in practice.;Kai Kreuzer;Java and Devices;Conference Session;Intermediate;In the quickly growing smart home market, the industry has come up with a vast number of standards, protocols, and products. Be it Apple HomeKit, Amazon Echo, or Google Home, they usually don't play well together and there is hardly any interoperability across vendors. This session demonstrates how the technical gaps between different devices can be bridged, but it also shows that the real challenge is within the semantic interoperability. To enable new uses cases such as machine learning and artificial intelligence, semantics must be standardized, machine-readable, and accessible. Using the Java-based, community-driven Eclipse SmartHome framework, the presentation shows how this can work in practice.
1494002058518001UGtY;Collections Refueled;The collections framework was introduced in JDK 1.2 back in 1998 and is still in heavy use today. Although its fundamentals remain unchanged, it has evolved considerably since its introduction and it continues to evolve. This session describes some of the recent enhancements made to collections, with a focus on the enhancements added to Java 9. Of particular note is JEP 269, Convenience Factory Methods, a library-based API that serves the purpose of collection literals. Finally, the session provides a glimpse of some possible future enhancements for the collections framework.;Stuart Marks;Core Java Platform;Conference Session;Intermediate;The collections framework was introduced in JDK 1.2 back in 1998 and is still in heavy use today. Although its fundamentals remain unchanged, it has evolved considerably since its introduction and it continues to evolve. This session describes some of the recent enhancements made to collections, with a focus on the enhancements added to Java 9. Of particular note is JEP 269, Convenience Factory Methods, a library-based API that serves the purpose of collection literals. Finally, the session provides a glimpse of some possible future enhancements for the collections framework.
14936689121280018rFH;DevOps, Continuous Delivery, and Deployment at a Hyper Scale ;This session discusses DevOps, continuous delivery, and deployment at a hyper scale. ;Martin Hogg;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;This session discusses DevOps, continuous delivery, and deployment at a hyper scale. 
1493616535085001feeH;Never Change State, and Still Get Things Done;State can be difficult. Concurrent updates can lead to inconsistency, it can be difficult to scale, and have you ever tried testing a component with a random element without having to resort to mocking? Functional purity can help us here. In this session, the presenters extract a pure functional structure that abstracts over state manipulations. They start with a solution that uses mutable state with an imperative style and transform this solution, step by step, to pure functional code that is immutable.  Code examples are in Scala, but knowledge of Java 8 is sufficient.;Martijn Blankestijn;Emerging Languages;Conference Session;Advanced;State can be difficult. Concurrent updates can lead to inconsistency, it can be difficult to scale, and have you ever tried testing a component with a random element without having to resort to mocking? Functional purity can help us here. In this session, the presenters extract a pure functional structure that abstracts over state manipulations. They start with a solution that uses mutable state with an imperative style and transform this solution, step by step, to pure functional code that is immutable.  Code examples are in Scala, but knowledge of Java 8 is sufficient.
14940087254690015lPH;Optional: The Mother of All Bike Sheds;The Optional class was introduced in Java 8 in order to solve a narrow but frequently occurring issue: what to return if you have nothing to return. It is a single class with fewer than 20 methods, but it turns out to have been one of the most controversial and most misunderstood APIs. It’s also one of the more widely misused APIs. A brief survey of OpenJDK code revealed several embarrassing examples of Optional usage, and expert Java programmers have admitted to not making the most of this API. This session provides recommendations and examples of proper and effective usage of Optional, shows several antipatterns and code smells and how to fix them, and finally describes some recent additions to Optional for Java 9.;Stuart Marks;Core Java Platform;Conference Session;Introductory;The Optional class was introduced in Java 8 in order to solve a narrow but frequently occurring issue: what to return if you have nothing to return. It is a single class with fewer than 20 methods, but it turns out to have been one of the most controversial and most misunderstood APIs. It’s also one of the more widely misused APIs. A brief survey of OpenJDK code revealed several embarrassing examples of Optional usage, and expert Java programmers have admitted to not making the most of this API. This session provides recommendations and examples of proper and effective usage of Optional, shows several antipatterns and code smells and how to fix them, and finally describes some recent additions to Optional for Java 9.
14937434888800017VnV;Platform Compatibility and Upgradability: The Untold Cloud Story   ;As the speed of development and deployment of cloud services is accelerating, the compatibility and upgradability of the underlying cloud platform infrastructure and cloud services are becoming a major nightmare, with massive operating costs and upgrading limitations for developers and cloud operators. This session reviews the compatibility and upgradability stands taken by the leading cloud development platforms  (Java, JavaScript, Node.js, Python, Go, C, and so on). It looks at upcoming innovations in Java 9 and beyond that are looking to significantly improve compatibility and upgradability for Java developers.;Bernard Traversat;Emerging Languages;Conference Session;Intermediate;As the speed of development and deployment of cloud services is accelerating, the compatibility and upgradability of the underlying cloud platform infrastructure and cloud services are becoming a major nightmare, with massive operating costs and upgrading limitations for developers and cloud operators. This session reviews the compatibility and upgradability stands taken by the leading cloud development platforms  (Java, JavaScript, Node.js, Python, Go, C, and so on). It looks at upcoming innovations in Java 9 and beyond that are looking to significantly improve compatibility and upgradability for Java developers.
1493669225551001ffiE;Spinnaker, Kubernetes, and Oracle Cloud Infrastructure;Oracle’s contributions to Spinnaker, Kubernetes, and other open source communities helps developers deliver rapid, repeatable cloud-native software deployments on Oracle Cloud Infrastructure while enabling developers to maintain cloud vendor neutrality. Learn more in this session.;Owain Lewis;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Oracle’s contributions to Spinnaker, Kubernetes, and other open source communities helps developers deliver rapid, repeatable cloud-native software deployments on Oracle Cloud Infrastructure while enabling developers to maintain cloud vendor neutrality. Learn more in this session.
1493691908434001fFeN;The Java EE-stic (=No Dependencies) Way to Develop HTML5 Applications;Java EE (6/7/8) applications are lean and self-contained—no external dependencies required. Is it possible to apply the same design principles to building web applications? In this session, the presenter codes an HTML5 single-page application “from scratch,” relying just on web standards without any external dependencies. REST, WebSocket communication with a Java EE back end, data binding, and styling are included. Audience questions are highly appeciated.;Adam Bien;Java Clients and User Interfaces;Conference Session;Intermediate;Java EE (6/7/8) applications are lean and self-contained—no external dependencies required. Is it possible to apply the same design principles to building web applications? In this session, the presenter codes an HTML5 single-page application “from scratch,” relying just on web standards without any external dependencies. REST, WebSocket communication with a Java EE back end, data binding, and styling are included. Audience questions are highly appeciated.
1494010583919001ThXf;Twitter’s Quest for a Wholly Graal Runtime;Twitter is a massively distributed system with thousands of machines running thousands of JVMs. In any similar big system, a small change in performance and CPU utilization is multiplied thousandfold and results in big savings: electricity costs, cooling costs, and possibly reduction of server farm size. One way to improve Java performance and reduce CPU utilization is to simply generate better machine code. <i>Simply</i> is obviously not trivial but doable. Twitter is going down that road and experimenting with Graal to generate better code and reduce cost. Learn more in this session.;Christian Thalinger;Core Java Platform;Conference Session;Intermediate;Twitter is a massively distributed system with thousands of machines running thousands of JVMs. In any similar big system, a small change in performance and CPU utilization is multiplied thousandfold and results in big savings: electricity costs, cooling costs, and possibly reduction of server farm size. One way to improve Java performance and reduce CPU utilization is to simply generate better machine code. <i>Simply</i> is obviously not trivial but doable. Twitter is going down that road and experimenting with Graal to generate better code and reduce cost. Learn more in this session.
1493565801012001skbG;Visualizing Aircraft Data: Oracle IoT Cloud Service, Raspberry Pi, and Radio Surveillance;Need to track a single aircraft or an entire fleet without spending a ton of money? In this session, the speakers explore real-life use cases for the Internet of Things and embedded systems with the Raspberry Pi. They build an inexpensive Raspberry Pi setup, including a dual-band Automatic Dependent Surveillance–Broadcast (ADS-B) radio receiver, GPS receiver, network interface, and Java interface to Oracle Internet of Things Cloud Service. They integrate this data with an Oracle JavaScript Extension Toolkit (Oracle JET) framework viewing traffic in real time. The FAA’s ADS-B is a precise satellite-based surveillance system that broadcasts real-time weather, uses GPS technology to determine any aircraft’s location and airspeed, and relays that data to those who are listening.;Jerry Ward;Java and Devices;Conference Session;Introductory;Need to track a single aircraft or an entire fleet without spending a ton of money? In this session, the speakers explore real-life use cases for the Internet of Things and embedded systems with the Raspberry Pi. They build an inexpensive Raspberry Pi setup, including a dual-band Automatic Dependent Surveillance–Broadcast (ADS-B) radio receiver, GPS receiver, network interface, and Java interface to Oracle Internet of Things Cloud Service. They integrate this data with an Oracle JavaScript Extension Toolkit (Oracle JET) framework viewing traffic in real time. The FAA’s ADS-B is a precise satellite-based surveillance system that broadcasts real-time weather, uses GPS technology to determine any aircraft’s location and airspeed, and relays that data to those who are listening.
1493029557147001gcDV;5 Pillars of a Successful Java Web Application;Swamped by new JavaScript frameworks that are born every six months? What about maintaining your enterprise application for longer than the two-year lifecycle of these frameworks? This session can provide you with insightful answers. It shares challenges and solutions through the five pillars of a successful Java web application, extracted directly from the development of jBPM and Drools web workbenches. The speaker how his team is able to keep a seven-year-old Java application that combines modern techniques with a legacy codebase of more than one million lines of code up to date with an agile, sustainable, and evolutionary web approach.;Alexandre Porcelli;Developer Community Day: User Groups;Conference Session;Intermediate;Swamped by new JavaScript frameworks that are born every six months? What about maintaining your enterprise application for longer than the two-year lifecycle of these frameworks? This session can provide you with insightful answers. It shares challenges and solutions through the five pillars of a successful Java web application, extracted directly from the development of jBPM and Drools web workbenches. The speaker how his team is able to keep a seven-year-old Java application that combines modern techniques with a legacy codebase of more than one million lines of code up to date with an agile, sustainable, and evolutionary web approach.
1493038858277001bR8l;Compiling Java to JavaScript: How to Replace Applets Without the Plugin;Greenfoot is a programming environment designed for teaching Java to school-age children, enabling them to create simple games and simulations. One key feature of Greenfoot is the ability to export their work as a Java applet, providing motivation by enabling students to exhibit their work to friends and family. As browsers have begun to remove support for the Java applet plugin, this session’s speakers searched for an alternative and have utilized TeaVM, an open source Java-to-JavaScript transpiler with extensive features and efficient generated code. In this presentation, they discuss some technical details of TeaVM and how they use it with Greenfoot to enable export of Java code as a browser-viewable applet without requiring the Java plugin.;Michael Kölling;Emerging Languages;Conference Session;Intermediate;Greenfoot is a programming environment designed for teaching Java to school-age children, enabling them to create simple games and simulations. One key feature of Greenfoot is the ability to export their work as a Java applet, providing motivation by enabling students to exhibit their work to friends and family. As browsers have begun to remove support for the Java applet plugin, this session’s speakers searched for an alternative and have utilized TeaVM, an open source Java-to-JavaScript transpiler with extensive features and efficient generated code. In this presentation, they discuss some technical details of TeaVM and how they use it with Greenfoot to enable export of Java code as a browser-viewable applet without requiring the Java plugin.
1493007464538001TtT7;Everything You Wanted to Know About  JIT Compilation but Were Afraid to Ask;Although it’s not even remotely a new feature, JIT compilation in HotSpot continues to evolve at a staggering pace. Even for people very familiar with C1/C2, JDK 9 continues this evolution with many user-visible changes such as the compiler directive framework, allowing much-finer-grained control of the compilation process. This is a good time for a thorough “review,” starting at the beginning and providing an overview of HotSpot’s JIT compilation, along with many of the ways users can tune and monitor it. Specifically, this demo-heavy session covers C1/C2 differences, tiered compilation, JIT logging, compiler directives (new in JDK 9), hsdis, and other important features. ;David Buck;Core Java Platform;Conference Session;Intermediate;Although it’s not even remotely a new feature, JIT compilation in HotSpot continues to evolve at a staggering pace. Even for people very familiar with C1/C2, JDK 9 continues this evolution with many user-visible changes such as the compiler directive framework, allowing much-finer-grained control of the compilation process. This is a good time for a thorough “review,” starting at the beginning and providing an overview of HotSpot’s JIT compilation, along with many of the ways users can tune and monitor it. Specifically, this demo-heavy session covers C1/C2 differences, tiered compilation, JIT logging, compiler directives (new in JDK 9), hsdis, and other important features. 
1492995937735001bRQk;Exploring Java 9 with REPL;JShell, Java’s read-eval-print-loop implementation, can provide a valuable addition to your workflow and introduces patterns that make exploration of new APIs faster and easier. Although it is undoubtedly one of the more interesting new features of Java 9, there are almost 100 other JEPs covering various smaller and bigger features. This session teaches you how to effectively work with JShell, and it does so by exploring several powerful, less-known features in JDK 9.;Miro Cupak;Core Java Platform;Conference Session;Intermediate;JShell, Java’s read-eval-print-loop implementation, can provide a valuable addition to your workflow and introduces patterns that make exploration of new APIs faster and easier. Although it is undoubtedly one of the more interesting new features of Java 9, there are almost 100 other JEPs covering various smaller and bigger features. This session teaches you how to effectively work with JShell, and it does so by exploring several powerful, less-known features in JDK 9.
1493037809859001TXA8;How to Get a Raspberry Pi Brain to Play Minecraft;According to Wikipedia, Minecraft is the second-best-selling video game of all time and undoubtedly the most popular Java client application ever. Recently Microsoft Labs announced a related project called Malmo, a sophisticated AI experimentation platform built atop Minecraft and designed to support fundamental research in AI. This session looks at how Project Malmo was used with a cluster of Raspberry Pi’s to develop software in Java to play Minecraft. It provides a brief introduction to the ideas of machine learning and covers<br>&bull, The DeepLearning4J library for ML application development<br>&bull, The design of the Raspberry Pi cluster<br>&bull, The game playing software that was<br><br>The session concludes with a demonstration of Minecraft being played autonomously.;Simon Ritter;Java and Devices;Conference Session;Intermediate;According to Wikipedia, Minecraft is the second-best-selling video game of all time and undoubtedly the most popular Java client application ever. Recently Microsoft Labs announced a related project called Malmo, a sophisticated AI experimentation platform built atop Minecraft and designed to support fundamental research in AI. This session looks at how Project Malmo was used with a cluster of Raspberry Pi’s to develop software in Java to play Minecraft. It provides a brief introduction to the ideas of machine learning and covers<br>&bull, The DeepLearning4J library for ML application development<br>&bull, The design of the Raspberry Pi cluster<br>&bull, The game playing software that was<br><br>The session concludes with a demonstration of Minecraft being played autonomously.
1492950766962001bUwU;Introduction to Machine Learning with Apache Spark MLlib;Machine learning is overhyped nowadays. There is a strong belief that this area is exclusively for data scientists with in-depth mathematical knowledge who leverage the Python or R ecosystem and use specific tools such as MATLAB or Octave. Of course, there is a big grain of truth in this statement, but we Java engineers also can take the best of the machine learning universe from an applied perspective by using our native language, Java, and familiar frameworks such as Apache Spark. During this introductory session, you will get acquainted with the simplest machine learning tasks and algorithms, such as regression, classification, and clustering, broaden your horizons, use Apache Spark MLlib to distinguish pop music from heavy metal, and simply have fun.;Taras Matyashovskyy;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Machine learning is overhyped nowadays. There is a strong belief that this area is exclusively for data scientists with in-depth mathematical knowledge who leverage the Python or R ecosystem and use specific tools such as MATLAB or Octave. Of course, there is a big grain of truth in this statement, but we Java engineers also can take the best of the machine learning universe from an applied perspective by using our native language, Java, and familiar frameworks such as Apache Spark. During this introductory session, you will get acquainted with the simplest machine learning tasks and algorithms, such as regression, classification, and clustering, broaden your horizons, use Apache Spark MLlib to distinguish pop music from heavy metal, and simply have fun.
1492979256692001TIKv;It’s Good to Have (JVM) Options;The Oracle HotSpot JVM has hundreds of command-line options for tuning performance for your particular application and workload. Which ones are the most useful and the most commonly used, and which are misused? New Relic monitors more than half a million JVMs. In addition to providing runtime performance data, the New Relic Java Agent reports JVM command-line options. By looking at anonymous JVM configuration data, we can draw out interesting patterns and trends. This presentation walks through some of the most commonly used JVM options and some cases in which certain combinations may have unintended consequences. You’ll come away with a better idea of when to use an option and when JVM defaults may be the best choice.;Chris Hansen;Core Java Platform;Conference Session;Introductory;The Oracle HotSpot JVM has hundreds of command-line options for tuning performance for your particular application and workload. Which ones are the most useful and the most commonly used, and which are misused? New Relic monitors more than half a million JVMs. In addition to providing runtime performance data, the New Relic Java Agent reports JVM command-line options. By looking at anonymous JVM configuration data, we can draw out interesting patterns and trends. This presentation walks through some of the most commonly used JVM options and some cases in which certain combinations may have unintended consequences. You’ll come away with a better idea of when to use an option and when JVM defaults may be the best choice.
1493047916809001TFFv;JShell: An Interactive Shell for the Java Platform;Read-eval-print loops (REPLs) have emerged as powerful tools for learning and prototyping. JShell brings this power to the Java platform for JDK 9. Tightly integrated with the Java compiler and virtual machine, JShell enhances the programming experience for the Java language. In this session, learn how to use JShell to explore new APIs, prototype code, or learn the Java language. Interactively explore new features of JDK 9.;Robert Field;Java Development Tools;Conference Session;Advanced;Read-eval-print loops (REPLs) have emerged as powerful tools for learning and prototyping. JShell brings this power to the Java platform for JDK 9. Tightly integrated with the Java compiler and virtual machine, JShell enhances the programming experience for the Java language. In this session, learn how to use JShell to explore new APIs, prototype code, or learn the Java language. Interactively explore new features of JDK 9.
1493006037440001A9eg;JSR 375: New Security APIs for Java EE;The Java EE Security API 1.0, JSR 375, is part of the Java EE 8 platform. New functionality includes authentication mechanisms, identity store access, and a new security context. This session describes the new APIs, takes a detailed look at each API’s syntax and semantics, and provides examples of how they can be used by applications.;Ivar Grimstad;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;The Java EE Security API 1.0, JSR 375, is part of the Java EE 8 platform. New functionality includes authentication mechanisms, identity store access, and a new security context. This session describes the new APIs, takes a detailed look at each API’s syntax and semantics, and provides examples of how they can be used by applications.
1493026668006001AHG4;Jump-start Your Microservices Development with Java EE;When asked what framework to use when creating Java microservices, people don’t necessarily suggest Java EE first, but many people are seeing the benefits Java EE brings to a microservices architecture. If you have existing Java EE applications or are simply curious about what makes Java EE a good fit in this space, this is the session for you. It covers everything from creating your application to a choice of IDEs for developing your app and deploying it to the cloud. It also demonstrates how to configure Docker to leverage the power of existing lightweight Java runtimes and make use of the OpenAPI spec in your application. Finally the presentation discusses the innovation being carried out by communities such as microprofile.io.;Katherine Stanley;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;When asked what framework to use when creating Java microservices, people don’t necessarily suggest Java EE first, but many people are seeing the benefits Java EE brings to a microservices architecture. If you have existing Java EE applications or are simply curious about what makes Java EE a good fit in this space, this is the session for you. It covers everything from creating your application to a choice of IDEs for developing your app and deploying it to the cloud. It also demonstrates how to configure Docker to leverage the power of existing lightweight Java runtimes and make use of the OpenAPI spec in your application. Finally the presentation discusses the innovation being carried out by communities such as microprofile.io.
1493007020902001gntw;Leaner, Faster Code with Advanced SQL Techniques;Most SQL is so simple to write that we can hand off the job to an ORM tool or a similar mechanism. But by delving a little deeper into more-advanced SQL facilities, we can get performance benefits and write a lot less middle-tier code. This session highlights some SQL techniques for solving problems that would otherwise require a lot of complex coding. Learn how to become a more productive developer by expanding your knowledge of the SQL language.;Connor Mcdonald;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Most SQL is so simple to write that we can hand off the job to an ORM tool or a similar mechanism. But by delving a little deeper into more-advanced SQL facilities, we can get performance benefits and write a lot less middle-tier code. This session highlights some SQL techniques for solving problems that would otherwise require a lot of complex coding. Learn how to become a more productive developer by expanding your knowledge of the SQL language.
1492979155214001TxkA;Learn: Microservice Wizardry with Dropwizard;Having a tough time deciding which framework to use for developing a Java-based microservice? Attend this session to understand why Dropwizard could be the framework you were looking for. Learn how to leverage features such as quick project bootstrap, built-in application metrics, and embedded Jetty containers for development productivity from the word go. Also learn to build, deploy, and manage the application lifecycle of your Dropwizard microservice application in the cloud.;Abhinav Shroff;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Having a tough time deciding which framework to use for developing a Java-based microservice? Attend this session to understand why Dropwizard could be the framework you were looking for. Learn how to leverage features such as quick project bootstrap, built-in application metrics, and embedded Jetty containers for development productivity from the word go. Also learn to build, deploy, and manage the application lifecycle of your Dropwizard microservice application in the cloud.
1492978307601001AgJr;Modern JavaScript Server Stack;The use of JavaScript on the command line and server has exploded over the past couple of years. Node.js has become popular with development shops, from startups to big corporations. Given its asynchronous nature, JavaScript provides the ability to scale dramatically. Besides the ability to drive your server-side applications, there are several tools that help with all aspects of browser development: testing, packaging, and deployment. This session explores these tools and shows you how you can incorporate these into your environment.;pratik patel;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;The use of JavaScript on the command line and server has exploded over the past couple of years. Node.js has become popular with development shops, from startups to big corporations. Given its asynchronous nature, JavaScript provides the ability to scale dramatically. Besides the ability to drive your server-side applications, there are several tools that help with all aspects of browser development: testing, packaging, and deployment. This session explores these tools and shows you how you can incorporate these into your environment.
1492901209722001gZCK;Offline-First Design and Web Components in Java;This session explores how to boost the usability of web and mobile web apps by implementing offline-first functionalities. It’s the only way to guarantee an always-on user experience. Low signal or no connectivity should no longer be a blocker for the user. The presentation discusses the available solutions for caching, in-browser database, and data replication. It also takes a look at how Web Components helps solve those issues out of the box. There will be a live coding demo to show how it’s simple to manipulate a large data set, completely offline, and in 100% Pure Java.;AMahdy Abdelaziz;Java Clients and User Interfaces;Conference Session;Intermediate;This session explores how to boost the usability of web and mobile web apps by implementing offline-first functionalities. It’s the only way to guarantee an always-on user experience. Low signal or no connectivity should no longer be a blocker for the user. The presentation discusses the available solutions for caching, in-browser database, and data replication. It also takes a look at how Web Components helps solve those issues out of the box. There will be a live coding demo to show how it’s simple to manipulate a large data set, completely offline, and in 100% Pure Java.
1492963227558001g8HG;Reactive Microservices with JRuby and Docker;The Reactive Manifesto states that “reactive systems” are responsive, resilient, elastic, and message-driven. In this demo-heavy session, you will see why Ruby is great for building reactive microservices, how JRuby and the JVM provide a reliable and performant runtime for these services, and how they can easily be deployed with Docker and Docker Swarm.;John Scattergood;Emerging Languages;Conference Session;Introductory;The Reactive Manifesto states that “reactive systems” are responsive, resilient, elastic, and message-driven. In this demo-heavy session, you will see why Ruby is great for building reactive microservices, how JRuby and the JVM provide a reliable and performant runtime for these services, and how they can easily be deployed with Docker and Docker Swarm.
1493016144841001bGDz;Redux with JavaFX;Modern UIs are so complex nowadays that we’re encountering the limits of conventional architectures such as MVC. Architectures based on functional reactive programming, on the other hand, offer a promising alternative. The limitation to immutable data structures and side-effect-free functions simplifies not only the development but also the testing and maintenance of UI applications. In the JavaScript community, one of the most successful patterns and libraries in this context is Redux, but Redux isn't limited to JavaScript only. This session presents an introduction to the ideas of functional reactive programming and Redux and shows you how you can use the same approach with JavaFX to create application front ends in a functional way.;Manuel Mauky;Java Clients and User Interfaces;Conference Session;Intermediate;Modern UIs are so complex nowadays that we’re encountering the limits of conventional architectures such as MVC. Architectures based on functional reactive programming, on the other hand, offer a promising alternative. The limitation to immutable data structures and side-effect-free functions simplifies not only the development but also the testing and maintenance of UI applications. In the JavaScript community, one of the most successful patterns and libraries in this context is Redux, but Redux isn't limited to JavaScript only. This session presents an introduction to the ideas of functional reactive programming and Redux and shows you how you can use the same approach with JavaFX to create application front ends in a functional way.
1493017491993001brgN;Secure Data Management for Java Gateway Devices on the Edge;Today more than 3 billion devices run Java. Although edge devices such as ATMs, smart meters, and medical devices are generating enormous amounts of data, the gateway devices are playing a more significant role, not only managing the data from edge devices but also managing the devices themselves by controlling, monitoring, and provisioning them. Thus, for developers building edge applications, privacy, data protection, and information security have become critical requirements from a data management perspective. This session demonstrates how to develop edge applications with secure data management practices, using a BerkeleyDB embedded database.;Mayuresh Nirhali;Java and Devices;Conference Session;Intermediate;Today more than 3 billion devices run Java. Although edge devices such as ATMs, smart meters, and medical devices are generating enormous amounts of data, the gateway devices are playing a more significant role, not only managing the data from edge devices but also managing the devices themselves by controlling, monitoring, and provisioning them. Thus, for developers building edge applications, privacy, data protection, and information security have become critical requirements from a data management perspective. This session demonstrates how to develop edge applications with secure data management practices, using a BerkeleyDB embedded database.
1493024412235001bOPJ;Show and Tell: JavaScript Generator Patterns and New Use Cases;Although ES6 generator patterns are designed to empower JavaScript with iteration capabilities on heterogenous structures in a custom manner, the programming model of Node.js can transform this feature to improve concurrency. This session discusses how the generator pattern helps iterate over deeply nested structures in a repeatable manner that follows a yield/resume pattern. The presentation shows real-world use cases in which this approach helps in addressing scalability and concurrency issues in large-scale Node.js. You will learn how generator patterns effectively exhibit the power of execution flow control and how this power can be harnessed to address some well-known issues and thereby help you develop efficient code.;Gireesh Punathil;Emerging Languages;Conference Session;Intermediate;Although ES6 generator patterns are designed to empower JavaScript with iteration capabilities on heterogenous structures in a custom manner, the programming model of Node.js can transform this feature to improve concurrency. This session discusses how the generator pattern helps iterate over deeply nested structures in a repeatable manner that follows a yield/resume pattern. The presentation shows real-world use cases in which this approach helps in addressing scalability and concurrency issues in large-scale Node.js. You will learn how generator patterns effectively exhibit the power of execution flow control and how this power can be harnessed to address some well-known issues and thereby help you develop efficient code.
1492987011071001Xh2k;Teaching Kids to Program in Java with Greenfoot: Visual, Interactive, Motivating;Learning to program can be fun and rewarding for kids—and it can be done with Java. This session demonstrates Greenfoot, a free open source beginner’s IDE for easily programming games and simulations in Java. The presentation explains how the system was designed to maximize motivation, engagement, and fun and minimize confusion and unnecessary obstacles, all while teaching full object-oriented programming. It also shows a blocklike editor for the Stride language that takes Java into a powerful structured editor aimed at minimizing programming errors. Come see crabs, rocket ships, and ants running around the screen and find out how you can use Greenfoot to get kids learning to program.;Michael Kölling;Java Community;Conference Session;Introductory;Learning to program can be fun and rewarding for kids—and it can be done with Java. This session demonstrates Greenfoot, a free open source beginner’s IDE for easily programming games and simulations in Java. The presentation explains how the system was designed to maximize motivation, engagement, and fun and minimize confusion and unnecessary obstacles, all while teaching full object-oriented programming. It also shows a blocklike editor for the Stride language that takes Java into a powerful structured editor aimed at minimizing programming errors. Come see crabs, rocket ships, and ants running around the screen and find out how you can use Greenfoot to get kids learning to program.
1493036930605001g1CS;The Hitchhiker’s Guide to Java Class Reloading;In Java a typical workflow involves restarting the application with (almost) every class change. For some applications, it is not a problem at all, for others, it is a disaster, from HotSwap to agent-based reloading. This session takes a look at the options available for Java class reloading. There are plenty of tools you can use for this task: rely on standard JVM HotSwap, redesign your application to rely on dynamic class loaders, comprehend the Zen of OSGi, or integrate a reloading agent. Every option has its own drawbacks and benefits, and the presentation takes a deep dive into the subject. Come get a better understanding of class reloading technologies and become a more productive Java developer.;Anton Arhipov;Java Development Tools;Conference Session;Intermediate;In Java a typical workflow involves restarting the application with (almost) every class change. For some applications, it is not a problem at all, for others, it is a disaster, from HotSwap to agent-based reloading. This session takes a look at the options available for Java class reloading. There are plenty of tools you can use for this task: rely on standard JVM HotSwap, redesign your application to rely on dynamic class loaders, comprehend the Zen of OSGi, or integrate a reloading agent. Every option has its own drawbacks and benefits, and the presentation takes a deep dive into the subject. Come get a better understanding of class reloading technologies and become a more productive Java developer.
1493037972026001AKtP;Troubleshooting Memory Problems in Java Applications;Troubleshooting memory problems can be tricky, but the right approach and proper set of tools can simplify the process substantially. Several kinds of OutOfMemoryError messages can be reported by the Java HotSpot VM, and it is important to understand these error messages clearly and have a wide range of diagnostic and troubleshooting tools in our toolkit to diagnose and root out these problems. This session discusses the right approach and a broad range of diagnostic tools that can be very useful in troubleshooting Java memory issues.;Poonam Parhar;Core Java Platform;Conference Session;Intermediate;Troubleshooting memory problems can be tricky, but the right approach and proper set of tools can simplify the process substantially. Several kinds of OutOfMemoryError messages can be reported by the Java HotSpot VM, and it is important to understand these error messages clearly and have a wide range of diagnostic and troubleshooting tools in our toolkit to diagnose and root out these problems. This session discusses the right approach and a broad range of diagnostic tools that can be very useful in troubleshooting Java memory issues.
1493014180993001TviD;What’s New in JAX-RS 2.1?;A new version of the best REST API for Java is here! JAX-RS 2.1 significantly improves the possibilities of adopting the reactive programming style in JAX-RS applications. The client API is extended with native support for CompletionStage and includes an extension point for other frameworks such as RxJava. Another addition is support for Server-Sent Events, an HTML 5 standard for sending a stream of events from the server to the client. The specification is also updated to support the latest additions in Java EE 8, namely JSON Binding and updated integrations of selected specifications.;David Delabassee;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;A new version of the best REST API for Java is here! JAX-RS 2.1 significantly improves the possibilities of adopting the reactive programming style in JAX-RS applications. The client API is extended with native support for CompletionStage and includes an extension point for other frameworks such as RxJava. Another addition is support for Server-Sent Events, an HTML 5 standard for sending a stream of events from the server to the client. The specification is also updated to support the latest additions in Java EE 8, namely JSON Binding and updated integrations of selected specifications.
1493038548467001AqHI;55 New Features In JDK 9;Following on from the popular “55 New Features in Java SE 8” comes the eagerly awaited sequel, “55 New Features in JDK 9.” Obviously, the big new features in JDK 9 are modularity and Project Jigsaw, but there’s lots more to tempt developers. This presentation divides things into five categories:<br> Join this whirlwind tour of what’s in (and what’s out) in JDK 9 so you’re ready to get started with the latest version of the most popular programming platform on the planet.;Simon Ritter;Core Java Platform;Conference Session;Intermediate;Following on from the popular “55 New Features in Java SE 8” comes the eagerly awaited sequel, “55 New Features in JDK 9.” Obviously, the big new features in JDK 9 are modularity and Project Jigsaw, but there’s lots more to tempt developers. This presentation divides things into five categories:<br> 1. Features<br>2. Standards<br>3. Inside the JVM<br>4. Specialized<br>5. Housekeeping<br><br>Join this whirlwind tour of what’s in (and what’s out) in JDK 9 so you’re ready to get started with the latest version of the most popular programming platform on the planet.
1493013671034001bqwW;Amazon Alexa Skills Versus Google Home Actions: The Big Java VUI Face-off;This session compares and contrasts the experience of implementing a voice user interface for the two market leader voice-activated assistants. Both are extendable, and both have Java APIs, but which is better?;Viktor Gamov;Java and Devices;Conference Session;Introductory;This session compares and contrasts the experience of implementing a voice user interface for the two market leader voice-activated assistants. Both are extendable, and both have Java APIs, but which is better?
1493043487330001XCru;Are You Feeling Lucky? Casino Games, IoT, and Java;Java is a great system for creating casino games. Interfacing them with physical hardware takes PC games you write yourself a lot closer to their Vegas or Macau counterparts. This session explores cryptographically strong random number generators. It also shows use of elements of IoT to provide physical hardware to implement random chance, shows a few cool sources of entropy, and outlines the direct coupling with Java’s security providers. Still think this is just a game? Casinos grossed US$317 billion in 2015 alone. Gaming is big money, too.;Matt Schuetze;Java and Devices;Conference Session;Intermediate;Java is a great system for creating casino games. Interfacing them with physical hardware takes PC games you write yourself a lot closer to their Vegas or Macau counterparts. This session explores cryptographically strong random number generators. It also shows use of elements of IoT to provide physical hardware to implement random chance, shows a few cool sources of entropy, and outlines the direct coupling with Java’s security providers. Still think this is just a game? Casinos grossed US$317 billion in 2015 alone. Gaming is big money, too.
1492974963716001XF36;Code Generation with Annotation Processors: State of the Art in Java 9;The Java compiler and annotation processors are powerful tools within the Java platform that together unleash great power in developers’ hands. Triggered during the Java compilation process, APs can be used to generate new classes from metadata present in other class sources or obtained through reflection. This session shows how to leverage APs to generate new classes at compile time and discusses the changes in the APIs and capabilities found in Java 9.;Jorge Hidalgo;Core Java Platform;Conference Session;Introductory;The Java compiler and annotation processors are powerful tools within the Java platform that together unleash great power in developers’ hands. Triggered during the Java compilation process, APs can be used to generate new classes from metadata present in other class sources or obtained through reflection. This session shows how to leverage APs to generate new classes at compile time and discusses the changes in the APIs and capabilities found in Java 9.
1493039019994001AU7Y;Complicating Complexity: Algorithm Performance in the New Machine Age;It’s no simple matter to explain the performance of even a simple Java program, when instruction execution time is often overshadowed by other costs. Even when the network and I/O have been taken into account, two programs with similar computational complexity—their big-O characteristics—can differ in cache usage, with big resulting differences in performance. For Java programmers, this means that big-O analysis no longer gives enough guidance in choosing a collection implementation for performance-critical code. This tutorial explores optimization of memory layout and the performance of some simple programs via alternative collection implementations and frameworks as well as the open source ObjectLayout library. ;Maurice Naftalin;Core Java Platform;Conference Session;Intermediate;It’s no simple matter to explain the performance of even a simple Java program, when instruction execution time is often overshadowed by other costs. Even when the network and I/O have been taken into account, two programs with similar computational complexity—their big-O characteristics—can differ in cache usage, with big resulting differences in performance. For Java programmers, this means that big-O analysis no longer gives enough guidance in choosing a collection implementation for performance-critical code. This tutorial explores optimization of memory layout and the performance of some simple programs via alternative collection implementations and frameworks as well as the open source ObjectLayout library. 
1492918931962001AJ4P;Designing and Visualizing Deep Space Manned Missions and Probe Trajectories;Humanity is entering a new age of space exploration beyond Earth orbit. Deep space mission design organizations such as NASA face mission goals with complex custom computing and visualization requirements. Platforms such as JavaFX and Java 8 enable such complex workflows. This session’s demonstrations include the Deep Space Trajectory Explorer, software designed to provide rapid parallel search and filtration capabilities. Custom hardware-accelerated visualizations are used to identify trajectory solutions that exploit these dense gravity fields. Examples range from liquid-rich worlds such as Europa and Enceladus to humanity’s return to the lunar surface via excursion missions from the planned deep space human habitat. ;Sean Phillips;Java Clients and User Interfaces;Conference Session;Intermediate;Humanity is entering a new age of space exploration beyond Earth orbit. Deep space mission design organizations such as NASA face mission goals with complex custom computing and visualization requirements. Platforms such as JavaFX and Java 8 enable such complex workflows. This session’s demonstrations include the Deep Space Trajectory Explorer, software designed to provide rapid parallel search and filtration capabilities. Custom hardware-accelerated visualizations are used to identify trajectory solutions that exploit these dense gravity fields. Examples range from liquid-rich worlds such as Europa and Enceladus to humanity’s return to the lunar surface via excursion missions from the planned deep space human habitat. 
1493048807067001ArjO;Development Horror Stories;We all enjoy hearing a good success story, but in the software development industry, the life of a developer is also made up of disasters, disappointments, and frustrations. Have you ever deleted all the data in production? Or maybe you just ran out of disk space and your software failed miserably! How about crashing your server with a bug you introduced in the latest release? We can learn from each other from the mistakes we’ve made. Come to this BOF, and share your most horrific development story and what you did to fix it.;Roberto Cortez;Developer Community Day: Community;Conference Session;Introductory;We all enjoy hearing a good success story, but in the software development industry, the life of a developer is also made up of disasters, disappointments, and frustrations. Have you ever deleted all the data in production? Or maybe you just ran out of disk space and your software failed miserably! How about crashing your server with a bug you introduced in the latest release? We can learn from each other from the mistakes we’ve made. Come to this BOF, and share your most horrific development story and what you did to fix it.
1493015035458001TfnQ;DevOps in the Cloud: A Use Case and Best Practices ;Based on real-world usage leveraging your favorite tools such as Maven, Git, and Hudson, this session covers how a cloud-based DevOps solution can save you time and money through rapid spin-up of an integrated development platform in seconds rather than months. In the session, both Oracle Development and Product Management present their best practices for delivering an enterprise-scale solution through distributed team collaboration leveraging DevOps in the cloud.;Greg Stachnick;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Based on real-world usage leveraging your favorite tools such as Maven, Git, and Hudson, this session covers how a cloud-based DevOps solution can save you time and money through rapid spin-up of an integrated development platform in seconds rather than months. In the session, both Oracle Development and Product Management present their best practices for delivering an enterprise-scale solution through distributed team collaboration leveraging DevOps in the cloud.
1492899961620001TKQe;Divide, Distribute, and Conquer: Stream Versus Batch;Data flows everywhere around us: phones, credit cards, sensor-equipped buildings, trains, buses, planes, and so on. Data collection is not enough anymore. Existing batch systems do data processing via nightly ETL operations, which in enterprise environments require decision-makers to wait an entire day or night for reports to become available. Nobody wants big data anymore—they want fast data. What distinguishes streaming systems from batch systems is that the events stream is infinite from a system perspective. Decision-makers need to analyze these streaming events as a whole to make business decisions as new information arrives. In this session see conventional data processing architectures and learn how to use open-source tools for stream processing.;Viktor Gamov;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Data flows everywhere around us: phones, credit cards, sensor-equipped buildings, trains, buses, planes, and so on. Data collection is not enough anymore. Existing batch systems do data processing via nightly ETL operations, which in enterprise environments require decision-makers to wait an entire day or night for reports to become available. Nobody wants big data anymore—they want fast data. What distinguishes streaming systems from batch systems is that the events stream is infinite from a system perspective. Decision-makers need to analyze these streaming events as a whole to make business decisions as new information arrives. In this session see conventional data processing architectures and learn how to use open-source tools for stream processing.
1492896957683001XgjQ;From Concept to Robotic Overlord with Robo4J;Robo4J is an upcoming open source framework for quickly building robots with popular, often inexpensive, hardware and the Java SE platform. A good example is Coff-E, an autonomous, partly 3D-printed robot using a Raspberry Pi for brains and commonly available off-the-shelf components for actuators and sensors. This session shows how to painlessly build an autonomous robotic vehicle, using the nascent Robo4J framework. You should get a good sense of how to quickly configure and run a hardware system of your own. The session presents the following:<br>• A few notes on how to choose hardware for a Java-controlled robot<br>• An overview of the Robo4J framework<br>• How to design robot-controlling software<br>• Useful source code examples;Marcus Hirt;Java and Devices;Conference Session;Intermediate;Robo4J is an upcoming open source framework for quickly building robots with popular, often inexpensive, hardware and the Java SE platform. A good example is Coff-E, an autonomous, partly 3D-printed robot using a Raspberry Pi for brains and commonly available off-the-shelf components for actuators and sensors. This session shows how to painlessly build an autonomous robotic vehicle, using the nascent Robo4J framework. You should get a good sense of how to quickly configure and run a hardware system of your own. The session presents the following:<br>• A few notes on how to choose hardware for a Java-controlled robot<br>• An overview of the Robo4J framework<br>• How to design robot-controlling software<br>• Useful source code examples
1492988116947001XWDK;Kotlin EE: Boost Your Productivity;Kotlin and Java EE are a perfect couple for writing microservices. Kotlin is a very pragmatic language—built on many concepts and techniques from Java—designed for developer productivity. The Java EE API enables us to code against a proven and stable API. Provided libraries decrease the need for additional third-party libraries, meaning a short build time and a small artifact size. Benefit from very fast build and test feedback, and stay focused on your code. Live on stage, this session’s speaker writes a service in Kotlin with a RESTful JSON API with only a few lines of code and runs the service, using a local Docker cloud. Coding, building, testing, deploying, scaling: fast and efficient!;Marcus Fihlon;Java, Cloud, and Server-Side Development;Conference Session;Introductory;Kotlin and Java EE are a perfect couple for writing microservices. Kotlin is a very pragmatic language—built on many concepts and techniques from Java—designed for developer productivity. The Java EE API enables us to code against a proven and stable API. Provided libraries decrease the need for additional third-party libraries, meaning a short build time and a small artifact size. Benefit from very fast build and test feedback, and stay focused on your code. Live on stage, this session’s speaker writes a service in Kotlin with a RESTful JSON API with only a few lines of code and runs the service, using a local Docker cloud. Coding, building, testing, deploying, scaling: fast and efficient!
1493010462777001Xdjf;Let’s Write Our Own Chip-8 Interpreter!;The Chip-8 language is a very simple virtual machine specification for which we can easily build a runtime in Java. Due to its simplicity, the implementation for a Chip-8 interpreter can easily be grasped and explained in detail during this single session. Despite this simplicity, the presentation covers many of the issues faced when we use Java to emulate/simulate other architectures. It also looks at some common issues faced by emulation authors when using the Java platform to implement runtimes for more-complex architectures such as 8-bit/16-bit computers or even early home video game systems.;David Buck;Emerging Languages;Conference Session;Intermediate;The Chip-8 language is a very simple virtual machine specification for which we can easily build a runtime in Java. Due to its simplicity, the implementation for a Chip-8 interpreter can easily be grasped and explained in detail during this single session. Despite this simplicity, the presentation covers many of the issues faced when we use Java to emulate/simulate other architectures. It also looks at some common issues faced by emulation authors when using the Java platform to implement runtimes for more-complex architectures such as 8-bit/16-bit computers or even early home video game systems.
1492983914591001XCrQ;Make Your CPU Cores Sweat with Parallel Streams;Prior to Java 8, you always had to use threads to leverage multicore architectures, which did the job but could often be somewhat difficult. The Java 8 Streams API changed this, by providing a new and simpler way of thinking about parallelism: parallel streams. Even though parallel streams can help you achieve parallelism almost for free, you still have to follow some basic but important rules that you will learn in this session, together with some best practices. Discover what happens under the hood when you invoke that magic parallelStream method, understand how to avoid the main traps and performance hiccups, learn what a Spliterator is, and much more!;Lukasz Pater;Core Java Platform;Conference Session;Intermediate;Prior to Java 8, you always had to use threads to leverage multicore architectures, which did the job but could often be somewhat difficult. The Java 8 Streams API changed this, by providing a new and simpler way of thinking about parallelism: parallel streams. Even though parallel streams can help you achieve parallelism almost for free, you still have to follow some basic but important rules that you will learn in this session, together with some best practices. Discover what happens under the hood when you invoke that magic parallelStream method, understand how to avoid the main traps and performance hiccups, learn what a Spliterator is, and much more!
1493007989487001gBTM;OpenJ9: Under the Hood of the Next Open Source JVM;Interested in how a JVM actually works? Want to understand the design of OpenJ9? OpenJ9 is the next open source JVM, based on J9, IBM’s cross-platform production JVM, and the Eclipse OMR project. Come to this session to learn the design principles behind the OpenJ9 runtime and how key data structures interconnect to bring a JVM to life. Follow your application code as it’s loaded, linked, and excuted on OpenJ9.;Dan Heidinga;Core Java Platform;Conference Session;Intermediate;Interested in how a JVM actually works? Want to understand the design of OpenJ9? OpenJ9 is the next open source JVM, based on J9, IBM’s cross-platform production JVM, and the Eclipse OMR project. Come to this session to learn the design principles behind the OpenJ9 runtime and how key data structures interconnect to bring a JVM to life. Follow your application code as it’s loaded, linked, and excuted on OpenJ9.
1493016895955001AYFr;OpenJDK: How to Join In on All the Fun;OpenJDK is a huge open source project with hundreds of participants working on the backbone of Java SE, a platform that more than 9 million developers worldwide depend on. Yet despite this level of interest, many people initially find the process of contributing code to OpenJDK to be complicated and even intimidating. But this simple crash course covers all the basics, from setting up a work environment to submitting your first patch for review. Some of the topics covered: the Java Bug Database, using Mercurial to clone a repository and create a change set, jcheck, jtreg, webrevs, repository layouts, the OpenJDK code review process, and eventually even obtaining your own OpenJDK user ID (after several contributions).;David Buck;Java Community;Conference Session;Intermediate;OpenJDK is a huge open source project with hundreds of participants working on the backbone of Java SE, a platform that more than 9 million developers worldwide depend on. Yet despite this level of interest, many people initially find the process of contributing code to OpenJDK to be complicated and even intimidating. But this simple crash course covers all the basics, from setting up a work environment to submitting your first patch for review. Some of the topics covered: the Java Bug Database, using Mercurial to clone a repository and create a change set, jcheck, jtreg, webrevs, repository layouts, the OpenJDK code review process, and eventually even obtaining your own OpenJDK user ID (after several contributions).
1493030452837001TWNy;Spice Up Your JUG with New Event Formats;This BOF discusses what other types of events can be organized in a JUG beyond typical talks. What have people tried in the past? What went well, and what could be improved? What other ideas do you have for your JUG? The goal is to share experiences so that all of us go back with great ideas about things we want to try in our JUG.;Michael Heinrichs;Developer Community Day: Community;Conference Session;Introductory;This BOF discusses what other types of events can be organized in a JUG beyond typical talks. What have people tried in the past? What went well, and what could be improved? What other ideas do you have for your JUG? The goal is to share experiences so that all of us go back with great ideas about things we want to try in our JUG.
1492997038106001Tjf2;Supercharged JavaFX with Kotlin and TornadoFX;This session presents an introduction to TornadoFX, a lightweight JavaFX framework for Kotlin. With its unique type-safe builder DSL, type-safe CSS, built-in REST client, and unique components such as Wizard, Forms, DataGrid, and data-driven TreeView—to mention a few—TornadoFX is a breath of fresh air in the JavaFX landscape. While enabling you to leverage your existing JavaFX knowledge, TornadoFX code utilizes Kotlin, the new JVM language star from JetBrains, to produce concise, expressive, and beautiful code with close to zero boilerplate. The session includes an overview of the framework and code comparisons to vanilla JavaFX, giving you the knowledge you need in order to get started writing powerful desktop applications in TornadoFX.;Thomas Nield;Java Clients and User Interfaces;Conference Session;Introductory;This session presents an introduction to TornadoFX, a lightweight JavaFX framework for Kotlin. With its unique type-safe builder DSL, type-safe CSS, built-in REST client, and unique components such as Wizard, Forms, DataGrid, and data-driven TreeView—to mention a few—TornadoFX is a breath of fresh air in the JavaFX landscape. While enabling you to leverage your existing JavaFX knowledge, TornadoFX code utilizes Kotlin, the new JVM language star from JetBrains, to produce concise, expressive, and beautiful code with close to zero boilerplate. The session includes an overview of the framework and code comparisons to vanilla JavaFX, giving you the knowledge you need in order to get started writing powerful desktop applications in TornadoFX.
1493016519232001g1Nu;The Hacker’s Guide to Session Hijacking;Broken authentication and session management are among the most prominent security vulnerabilities, according to the OWASP top 10 security risk list. Many developers assume that authentication and session management work out of the box in Java EE. Unfortunately, that’s not the case. Even though Java EE provides support for secure authentication and session management, it’s still developers’ responsibility to use them correctly. In this presentation’s live demos, you’ll learn how to hijack a session by exploiting common security vulnerabilities on the client side, on the server side, and in transport. You’ll also find out about common mistakes and omissions related to authentication and session management, along with the ways to protect your applications by using Java EE mechanisms.;Patrycja Wegrzynowicz;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Broken authentication and session management are among the most prominent security vulnerabilities, according to the OWASP top 10 security risk list. Many developers assume that authentication and session management work out of the box in Java EE. Unfortunately, that’s not the case. Even though Java EE provides support for secure authentication and session management, it’s still developers’ responsibility to use them correctly. In this presentation’s live demos, you’ll learn how to hijack a session by exploiting common security vulnerabilities on the client side, on the server side, and in transport. You’ll also find out about common mistakes and omissions related to authentication and session management, along with the ways to protect your applications by using Java EE mechanisms.
1493014764111001bkNY;Architecting for Failure: Why Are Distributed Systems Hard?;As we architect our systems for greater demands, scale, uptime, and performance, the hardest thing to control becomes the environment in which we deploy and the subtle but crucial interactions between complicated systems. And microservices obviously are the way to go forward with those complicated systems. But what makes it so hard to build them? And why should you embrace failure instead of doing what we can do best: preventing failure. This session introduces you to the problem domain of a distributed system that consists of a couple of microservices. It shows how to build, deploy, and orchestrate the chaos and introduces you to a couple of patterns for preventing and compensating for failure.;Markus Eisele;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;As we architect our systems for greater demands, scale, uptime, and performance, the hardest thing to control becomes the environment in which we deploy and the subtle but crucial interactions between complicated systems. And microservices obviously are the way to go forward with those complicated systems. But what makes it so hard to build them? And why should you embrace failure instead of doing what we can do best: preventing failure. This session introduces you to the problem domain of a distributed system that consists of a couple of microservices. It shows how to build, deploy, and orchestrate the chaos and introduces you to a couple of patterns for preventing and compensating for failure.1493002154429001Al3r;Be Pragmatic;Being pragmatic in software development is rarer than one would expect or hope. We’ve seen all sorts of craziness throughout the years. Architects, analysts, and developers doing and believing things that simply make no sense in any world. Using examples from his experience, this session’s speaker teaches you tricks for really being pragmatic. This will enable you to quickly develop software that people really want to use. Whether you are a manager or a developer, you should find it useful.;Henri Tremblay;Developer Community Day: Community;Conference Session;Introductory;Being pragmatic in software development is rarer than one would expect or hope. We’ve seen all sorts of craziness throughout the years. Architects, analysts, and developers doing and believing things that simply make no sense in any world. Using examples from his experience, this session’s speaker teaches you tricks for really being pragmatic. This will enable you to quickly develop software that people really want to use. Whether you are a manager or a developer, you should find it useful.
1492960088073001XxCn;Bring Your Favorite Kafka to Java EE with CDI;Since Java EE 6, CDI is gradually becoming the backbone of any Java EE application. It automatically manages the lifecycle of dependencies and further increases decoupling with events and interceptors. However, if you want to integrate another library, you will have to adjust your code to that library API. Come to this session to learn how you can write your own CDI extension to make external APIs look like native CDI. You will see what the CDI container does under the hood to automatically load Kafka consumers and producers, make them injectable in your code, and hide all the library-specific plumbing code. You will also learn the basic techniques for making your favorite framework portable across all the Java EE containers.;Ivan St. Ivanov;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Since Java EE 6, CDI is gradually becoming the backbone of any Java EE application. It automatically manages the lifecycle of dependencies and further increases decoupling with events and interceptors. However, if you want to integrate another library, you will have to adjust your code to that library API. Come to this session to learn how you can write your own CDI extension to make external APIs look like native CDI. You will see what the CDI container does under the hood to automatically load Kafka consumers and producers, make them injectable in your code, and hide all the library-specific plumbing code. You will also learn the basic techniques for making your favorite framework portable across all the Java EE containers.
1492962426206001bmB0;Easily Secure Your Front- and Back-End Applications with KeyCloak;Although security is a crucial aspect for any application, its implementation can be difficult. Worse, it is often neglected, poorly implemented, and intrusive in code. But lately security servers have appeared that make it possible to delegate all authentication and authorization aspects, such as https://auth0.com/. Of these servers, one of the most promising is KeyCloak. Open-source and agnostic of any technology, it is easily deployable/adaptable in its own infrastructure. In this session, you will discover KeyCloak progressively and in an interactive way: 0 slides, 100% live coding. From securing an “old school” Java EE app and a Node.js microservice to a standalone AngularJS web app, you’ll see demonstrations of all aspects of KeyCloak. ;Sébastien Blanc;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Although security is a crucial aspect for any application, its implementation can be difficult. Worse, it is often neglected, poorly implemented, and intrusive in code. But lately security servers have appeared that make it possible to delegate all authentication and authorization aspects, such as https://auth0.com/. Of these servers, one of the most promising is KeyCloak. Open-source and agnostic of any technology, it is easily deployable/adaptable in its own infrastructure. In this session, you will discover KeyCloak progressively and in an interactive way: 0 slides, 100% live coding. From securing an “old school” Java EE app and a Node.js microservice to a standalone AngularJS web app, you’ll see demonstrations of all aspects of KeyCloak. 
1492986377081001Tz52;Eclipse Che for Java Microservice Developers;Eclipse Che is well known as a cloud-based IDE. Che pushes cloud-based IDE features a step further and provides cloud-based development workspace support. This session introduces the workspace management features of Che. It also shows how Java-based-microservice developers can take advantage of the workspaces for quicker and more accurate development cycles.;Gorkem Ercan;Java Development Tools;Conference Session;Intermediate;Eclipse Che is well known as a cloud-based IDE. Che pushes cloud-based IDE features a step further and provides cloud-based development workspace support. This session introduces the workspace management features of Che. It also shows how Java-based-microservice developers can take advantage of the workspaces for quicker and more accurate development cycles.
1493008570070001gJZg;Extreme Vetting: Five Open-Source APM Tools and Their Resource Overhead;Extreme vetting sounds a little painful, but that is exactly what’s necessary to build up enough trust in an open source APM (application performance management) product that you would deploy it into production. Does the APM tool eat more CPU/RAM than your application? Does it halve your app’s speed? Is the APM tool a walking memory leak? The best way to answer these questions is to compare load generator and CPU/RAM metrics with and without the APM tool installed. In this session, five open source APM tools are each subjected to 12 different load tests. The results are compared with those of tests of the 12 without any APM tool. Each of the 12 tests contains a commonly found performance defect in a Java server-side system.;Erik Ostermueller;Java Development Tools;Conference Session;Intermediate;Extreme vetting sounds a little painful, but that is exactly what’s necessary to build up enough trust in an open source APM (application performance management) product that you would deploy it into production. Does the APM tool eat more CPU/RAM than your application? Does it halve your app’s speed? Is the APM tool a walking memory leak? The best way to answer these questions is to compare load generator and CPU/RAM metrics with and without the APM tool installed. In this session, five open source APM tools are each subjected to 12 different load tests. The results are compared with those of tests of the 12 without any APM tool. Each of the 12 tests contains a commonly found performance defect in a Java server-side system.
1493039382404001AZGB;It’s Java, but Not As We Know It;This presentation starts with a review of lambda expressions in JDK 8 and then digs into the performance implications of using them, looking at the use of invokedynamic rather than simple syntactic sugar for anonymous inner classes. The origins of lambda expressions go back 80 years, well before Java (and even modern computing) started. They are based on the work of Alonso Church, who created lambda calculus as a mathematical model of computation. The session concludes by exploring how, using only one new functional interface, we can (in theory) solve any problem by using only lambda expressions.  This really is Java, but most of it won’t look like any code you’ve ever seen. Be prepared for some mind-bending use of lambda expressions!;Simon Ritter;Core Java Platform;Conference Session;Intermediate;This presentation starts with a review of lambda expressions in JDK 8 and then digs into the performance implications of using them, looking at the use of invokedynamic rather than simple syntactic sugar for anonymous inner classes. The origins of lambda expressions go back 80 years, well before Java (and even modern computing) started. They are based on the work of Alonso Church, who created lambda calculus as a mathematical model of computation. The session concludes by exploring how, using only one new functional interface, we can (in theory) solve any problem by using only lambda expressions.  This really is Java, but most of it won’t look like any code you’ve ever seen. Be prepared for some mind-bending use of lambda expressions!
1493037974102001bqZg;JavaFX 101;JavaFX is cool, fresh, and practical—at least since Java 8. It comes with interesting features such as FXML, which is used to declare views, CSS, for styling the UI, and a Property API to model data flows between architectural layers. With many other useful APIs such as the Animation API, JavaFX became a state-of-the-art UI toolkit that can be used to create desktop, mobile, and even browser applications. This session gives you an idea of its benefits and how you can start exploring this useful toolkit. Live coding is included.;Alexander Casall;Java Clients and User Interfaces;Conference Session;Introductory;JavaFX is cool, fresh, and practical—at least since Java 8. It comes with interesting features such as FXML, which is used to declare views, CSS, for styling the UI, and a Property API to model data flows between architectural layers. With many other useful APIs such as the Animation API, JavaFX became a state-of-the-art UI toolkit that can be used to create desktop, mobile, and even browser applications. This session gives you an idea of its benefits and how you can start exploring this useful toolkit. Live coding is included.
1492986248969001XT76;Migrating Your GUI from Swing to JavaFX: Lessons from Experience;JavaFX, now a mature GUI toolkit, provides a modern API informed by evolutions in graphical interface design and implementation. JavaFX offers good support for customizing presentations (via CSS) and enhancing your interface through animations, but many Java programs have interfaces written in its predecessor, Swing, which is in maintenance rather than active development. This session’s speakers describe their experiences in transitioning a reasonable-size Swing GUI to JavaFX. They talk about why and how they did it, explaining what they learned in the process.  This should be of interest to anyone with an existing Swing GUI who is thinking about making the move to JavaFX.;Amjad Altadmri;Java Clients and User Interfaces;Conference Session;Intermediate;JavaFX, now a mature GUI toolkit, provides a modern API informed by evolutions in graphical interface design and implementation. JavaFX offers good support for customizing presentations (via CSS) and enhancing your interface through animations, but many Java programs have interfaces written in its predecessor, Swing, which is in maintenance rather than active development. This session’s speakers describe their experiences in transitioning a reasonable-size Swing GUI to JavaFX. They talk about why and how they did it, explaining what they learned in the process.  This should be of interest to anyone with an existing Swing GUI who is thinking about making the move to JavaFX.
1492953612491001bk1t;Polyglot Adventures for the Modern Java Developer;Use the right tool for the job! That’s the motto of this session. As modern developers, we need to master several different languages all at once to be 100 percent productive. We define our development environments with Gradle. We implement our software in Java, Kotlin, or another suitable JVM-based language. We use Groovy or Scala to test our code at different layers. We construct the build pipelines for our software with a Groovy DSL or JSON. We use YAML and Python to describe the infrastructure and deployment of our applications. We document our architectures with AsciiDoc and Java. This code-intense, polyglot session is a fun and opinionated journey into the modern era of software development.;Mario-Leander Reimer;Emerging Languages;Conference Session;Introductory;Use the right tool for the job! That’s the motto of this session. As modern developers, we need to master several different languages all at once to be 100 percent productive. We define our development environments with Gradle. We implement our software in Java, Kotlin, or another suitable JVM-based language. We use Groovy or Scala to test our code at different layers. We construct the build pipelines for our software with a Groovy DSL or JSON. We use YAML and Python to describe the infrastructure and deployment of our applications. We document our architectures with AsciiDoc and Java. This code-intense, polyglot session is a fun and opinionated journey into the modern era of software development.
1492846528358001TgPp;ACID Is So Yesterday: Maintaining Data Consistency with Sagas;The services in a microservice architecture must be loosely coupled and so cannot share database tables. What’s more, two-phase commit (aka a distributed transaction) is not a viable option for modern applications. Consequently, a microservice-based application must use so-called sagas to maintain data consistency between services. In this presentation, you will learn how sagas work and how they differ from traditional ACID transactions. You will also learn how to design and implement sagas for your applications.;Chris Richardson;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;The services in a microservice architecture must be loosely coupled and so cannot share database tables. What’s more, two-phase commit (aka a distributed transaction) is not a viable option for modern applications. Consequently, a microservice-based application must use so-called sagas to maintain data consistency between services. In this presentation, you will learn how sagas work and how they differ from traditional ACID transactions. You will also learn how to design and implement sagas for your applications.
1492807993629001A703;Boost Your Skills with Open Source;Believe it or not, software development does not happen on Stackoverflow. It doesn’t even happen in the IDE of your choice. It’s all in your head. And to stay in the game and work on exciting projects, we have to learn new technologies and skills. It’s a critical part of our job yet the most exciting one—we have to constantly learn. Attend this session to learn not only what open source is and how you can contribute to it but mainly how it can help you boost your skills and career.;Bartosz Majsak;Developer Community Day: Community;Conference Session;Introductory;Believe it or not, software development does not happen on Stackoverflow. It doesn’t even happen in the IDE of your choice. It’s all in your head. And to stay in the game and work on exciting projects, we have to learn new technologies and skills. It’s a critical part of our job yet the most exciting one—we have to constantly learn. Attend this session to learn not only what open source is and how you can contribute to it but mainly how it can help you boost your skills and career.
1492890329430001T303;Building from Minutes to Seconds: Maximizing Incrementality with Gradle;Nobody likes slow builds. It easily becomes frustrating when we, as developers, know that the build tool is doing more than it needs to. Why would you run clean if all you need is a single class to be recompiled? Why would you even try to recompile if the change you made is irrelevant to the compiler? In this session, you’ll learn how to leverage the new java-library plugin to avoid leaking dependencies, reduce your build times, and make publication safer. You’ll also learn what “compile avoidance” means, particularly in terms of modeling, and how to make your tasks incremental. And you’ll get hints about what the future looks like: faster, more precise, incremental, and reproducible builds.;Cédric Champeau;Java Development Tools;Conference Session;Intermediate;Nobody likes slow builds. It easily becomes frustrating when we, as developers, know that the build tool is doing more than it needs to. Why would you run clean if all you need is a single class to be recompiled? Why would you even try to recompile if the change you made is irrelevant to the compiler? In this session, you’ll learn how to leverage the new java-library plugin to avoid leaking dependencies, reduce your build times, and make publication safer. You’ll also learn what “compile avoidance” means, particularly in terms of modeling, and how to make your tasks incremental. And you’ll get hints about what the future looks like: faster, more precise, incremental, and reproducible builds.
1492890060675001ANDx;Creating a Connected Home: Live Coding and Demos;Wouldn’t you love to be able to walk into a room and use your phone or voice to turn on your lights? When you are relaxing on the couch, listening to music, wouldn’t it be nice to just talk to your speaker to turn up the volume or change the song? Can you imagine being able to turn on the fan by just saying you are hot? In this session, Java Champion and four-time JavaOne Rock Star Kevin Nilson and his 12-year-old son, Andy, do a live-coding demo of creating a connected home.;Andy Nilson;Java and Devices;Conference Session;Introductory;Wouldn’t you love to be able to walk into a room and use your phone or voice to turn on your lights? When you are relaxing on the couch, listening to music, wouldn’t it be nice to just talk to your speaker to turn up the volume or change the song? Can you imagine being able to turn on the fan by just saying you are hot? In this session, Java Champion and four-time JavaOne Rock Star Kevin Nilson and his 12-year-old son, Andy, do a live-coding demo of creating a connected home.
149279704360600107ja;Designing for Modularity with Java 9;Java 9 brings modules as a core concept to the platform, but it’s more than just a language feature. With modules in Java 9, we can improve the design of code to increase maintainability and extensibility. As with every design principle, modularity requires thought and trade-offs to really reap the benefits. This session covers design practices for making codebases more maintainable and extensible. You will also find out about trade-offs to help you make the best choices. Topics include hiding implementations, using services for extensibility, API modules, avoiding cycles, optional dependencies, and dynamically loading modules. Familiarity with modules is helpful but not required. The speakers are the authors of <i>Java 9 Modularity</i> (O’Reilly).;Sander Mak;Core Java Platform;Conference Session;Intermediate;Java 9 brings modules as a core concept to the platform, but it’s more than just a language feature. With modules in Java 9, we can improve the design of code to increase maintainability and extensibility. As with every design principle, modularity requires thought and trade-offs to really reap the benefits. This session covers design practices for making codebases more maintainable and extensible. You will also find out about trade-offs to help you make the best choices. Topics include hiding implementations, using services for extensibility, API modules, avoiding cycles, optional dependencies, and dynamically loading modules. Familiarity with modules is helpful but not required. The speakers are the authors of <i>Java 9 Modularity</i> (O’Reilly).
1492779813414001kcn4;Improving Your Groovy Kung-Fu;This no-slide presentation works through a wide variety of Groovy moves: from hidden treasures in the language itself through Groovy helpers for your daily work as a programmer to exercising the latest and greatest Groovy libraries and frameworks. This is an interactive event. Toss in your questions to help steer the direction of the session.;Dierk Koenig;Emerging Languages;Conference Session;Introductory;This no-slide presentation works through a wide variety of Groovy moves: from hidden treasures in the language itself through Groovy helpers for your daily work as a programmer to exercising the latest and greatest Groovy libraries and frameworks. This is an interactive event. Toss in your questions to help steer the direction of the session.
149271421995600101xC;Interactive Data Analytics and Visualization with Collaborative Documents;Zeppelin, Jupyter, Databricks: notebooks are everywhere. This session presents the Oracle Labs Data Studio, a JVM-based notebook interface for data analysts built on Apache Zeppelin and Oracle JavaScript Extension Toolkit (Oracle JET). It shows use cases that focus on graph visualization and how to visually apply graph algorithms with interpreters such as Apache Spark, databases, and the graph analytic framework PGX. Using notebooks, you can combine different languages such as Groovy, Scala, Python, and the new property graph query language PGQL together with powerful JavaScript-based visualization techniques. The interactive graph visualization supports highlighting, expansion, filter application, and much more. Everything is preconfigured and executable directly from the browser.;Hassan Chafi;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Advanced;Zeppelin, Jupyter, Databricks: notebooks are everywhere. This session presents the Oracle Labs Data Studio, a JVM-based notebook interface for data analysts built on Apache Zeppelin and Oracle JavaScript Extension Toolkit (Oracle JET). It shows use cases that focus on graph visualization and how to visually apply graph algorithms with interpreters such as Apache Spark, databases, and the graph analytic framework PGX. Using notebooks, you can combine different languages such as Groovy, Scala, Python, and the new property graph query language PGQL together with powerful JavaScript-based visualization techniques. The interactive graph visualization supports highlighting, expansion, filter application, and much more. Everything is preconfigured and executable directly from the browser.
14926176957820013hZT;Servlet 4.0: A New Twist on an Old Favorite;Java Servlets have been around for longer than Java EE, or even J2EE. This session from the co–spec leads surveys the new features in Servlet 4.0 and puts them in the context of their usefulness in a contemporary microservices-style architecture. Features covered include<br>&bull, Support for HTTP/2, including server push<br>The session examines these features in light of current application development trends, such as containerization, continuous delivery, 12-factor apps, and adapting legacy apps to take advantage of cloud-native technologies.;Ed Burns;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Java Servlets have been around for longer than Java EE, or even J2EE. This session from the co–spec leads surveys the new features in Servlet 4.0 and puts them in the context of their usefulness in a contemporary microservices-style architecture. Features covered include<br>&bull, Support for HTTP/2, including server push<br>&bull, Default context path<br>&bull, Mapping discovery<br>&bull, Encoding clarifications<br>&bull, HTTP trailers, including their relevance to gRPC<br><br>The session examines these features in light of current application development trends, such as containerization, continuous delivery, 12-factor apps, and adapting legacy apps to take advantage of cloud-native technologies.
1492825985264001TGrf;What’s New in Gradle 4.0;Since version 3.0, the Gradle build tool has added lots of new features and performance improvements. This session covers the highlights from Gradle 3.0 to 4.0, including<br>;Eric Wendelin;Java Development Tools;Conference Session;Introductory;Since version 3.0, the Gradle build tool has added lots of new features and performance improvements. This session covers the highlights from Gradle 3.0 to 4.0, including<br>&bull, Composite builds<br>&bull, Gradle’s build cache<br>&bull, Incremental compilation<br>&bull, Improved user experience<br>&bull, Gradle Enterprise<br>&bull, And more
1492782291675001ZXJk;A Competitive Food Retail Architecture with Microservices;Two years ago, REWE Digital started refactoring a monolith into a microservice platform. This session’s speakers want to share the lessons the company learned the hard way and provide some answers to questions it ran into:<br> 
1492617953914001F4UR;Contemporary Java Web Applications with JSF 2.3;JavaServer Faces 2.3 is the standard UI framework for Java EE 8. This version of JSF brings a host of community-driven features into the standard, pulling many ideas from the vibrant ecosystem of innovation. This conference session from the co–spec leads surveys the new features and puts them in the context of their usefulness in a contemporary microservices-style architecture. Features covered include<br>The session examines the continued relevance of state-heavy frameworks such as JSF even in light of the movement to the cloud and stateless applications.;Ed Burns;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;JavaServer Faces 2.3 is the standard UI framework for Java EE 8. This version of JSF brings a host of community-driven features into the standard, pulling many ideas from the vibrant ecosystem of innovation. This conference session from the co–spec leads surveys the new features and puts them in the context of their usefulness in a contemporary microservices-style architecture. Features covered include<br>• Use of Servlet 4.0 server push<br>• WebSocket push<br>• Ajax method invocation<br>• Multifield validation<br>• Tighter CDI integration<br>  • Component search expressions<br><br>  The session examines the continued relevance of state-heavy frameworks such as JSF even in light of the movement to the cloud and stateless applications.
1492788170010001ZtiW;JAX-RS and CDI Bike the (Reactive) Bridge;Reactive is the new black! You think that going reactive would be the way to move your application forward, but for many reasons, you cannot embrace Rx or some other reactive framework. The good news is that you can do it today with Java EE 8 and the JDK. This session explains how JAX-RS and CDI became reactive-capable in Java EE 8. The presentation puts some new features of JAX-RS 2.1 and CDI 2.0 into perspective and shows some reactive patterns to improve your application. Add Java 8 CompletionStage to the mix, and this API trio will become your best bet to easily go reactive without leaving the Java EE train. If you come to this session, you will realize that crossing the reactive bridge might be easier than biking the Golden Gate!;José Paumard;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Reactive is the new black! You think that going reactive would be the way to move your application forward, but for many reasons, you cannot embrace Rx or some other reactive framework. The good news is that you can do it today with Java EE 8 and the JDK. This session explains how JAX-RS and CDI became reactive-capable in Java EE 8. The presentation puts some new features of JAX-RS 2.1 and CDI 2.0 into perspective and shows some reactive patterns to improve your application. Add Java 8 CompletionStage to the mix, and this API trio will become your best bet to easily go reactive without leaving the Java EE train. If you come to this session, you will realize that crossing the reactive bridge might be easier than biking the Golden Gate!
1492808911209001TYRA;JDK 9 Language, Tooling, and Library Features;Modularity support from Project Jigsaw is the largest change coming in Java SE 9, but many other improvements are coming to the Java programming language, related tooling, and libraries in JDK 9. On the language front, some polish is added to the Project Coin features and the number of uninformative warnings has been reduced. The javac tool can now accurately cross-compile to older platform versions and has improved attribution engineering to better support type inference. Javadoc is getting a search box, a new modernized doclet API, and HTML5 support. The libraries offer better process control, improved collections, and more-compact strings. Learn more in this session.;Joe Darcy;Core Java Platform;Conference Session;Intermediate;Modularity support from Project Jigsaw is the largest change coming in Java SE 9, but many other improvements are coming to the Java programming language, related tooling, and libraries in JDK 9. On the language front, some polish is added to the Project Coin features and the number of uninformative warnings has been reduced. The javac tool can now accurately cross-compile to older platform versions and has improved attribution engineering to better support type inference. Javadoc is getting a search box, a new modernized doclet API, and HTML5 support. The libraries offer better process control, improved collections, and more-compact strings. Learn more in this session.
1492885405386001bvj9;Machine Learning for Java Developers in 45 Minutes;This session clarifies and defines machine learning for Java developers. You’ll learn about its relationship to artificial intelligence (AI) and why machine learning is evolving at such a rapid pace. The session also describes the types of learning styles: supervised learning, unsupervised learning, and deep learning. You’ll hear about various use cases that are directly suitable for machine learning. Most importantly, the presentation focuses on how Java developers can take advantage of machine learning in their applications.;Zoran Sevarac;Java and Devices;Conference Session;Intermediate;This session clarifies and defines machine learning for Java developers. You’ll learn about its relationship to artificial intelligence (AI) and why machine learning is evolving at such a rapid pace. The session also describes the types of learning styles: supervised learning, unsupervised learning, and deep learning. You’ll hear about various use cases that are directly suitable for machine learning. Most importantly, the presentation focuses on how Java developers can take advantage of machine learning in their applications.
1492814347618001Aj6O;Modular Development with JDK 9;A modular development style benefits every Java developer, whether the application is one JAR or one hundred JARs. This session introduces the Java 9 module system that's been used to structure the JDK as dozens of reusable modules that strongly protect their internals. Then it explains how you can create modules to enforce the structure inherent in your application. It will prepare you for some of the pitfalls of modular development, notably the technical debt present in popular libraries that rely on JDK internals. Finally, the session looks at how tools are preparing for modules.;Alex Buckley;Core Java Platform;Conference Session;Introductory;A modular development style benefits every Java developer, whether the application is one JAR or one hundred JARs. This session introduces the Java 9 module system that's been used to structure the JDK as dozens of reusable modules that strongly protect their internals. Then it explains how you can create modules to enforce the structure inherent in your application. It will prepare you for some of the pitfalls of modular development, notably the technical debt present in popular libraries that rely on JDK internals. Finally, the session looks at how tools are preparing for modules.
1492814702272001giVs;Modules and Services;Most Java developers know the saying “Program to an interface, not an implementation.” In JDK 9, the module system introduces “services” to make this concept explicit: modules declare which interfaces they program to, and the module system automatically discovers implementations. This clarifies program structure and helps avoid the need for optional dependencies between modules. Using examples from the JDK, this session shows how to adopt services in your codebase and how to design APIs in a modular fashion.;Alex Buckley;Core Java Platform;Conference Session;Introductory;Most Java developers know the saying “Program to an interface, not an implementation.” In JDK 9, the module system introduces “services” to make this concept explicit: modules declare which interfaces they program to, and the module system automatically discovers implementations. This clarifies program structure and helps avoid the need for optional dependencies between modules. Using examples from the JDK, this session shows how to adopt services in your codebase and how to design APIs in a modular fashion.
1492860963413001TM0u;Real-Time UI with Apache Kafka Streaming Analytics of Fast Data and Server Push;Fast data arrives in real time and potentially high volume. Rapid processing, filtering, and aggregation are required to ensure timely reaction and actual information in user interfaces. meeting these requirements is a challenge, and making this happen in a scalable and reliable fashion is even more interesting. This session introduces Apache Kafka as the scalable event bus that takes care of the events as they flow in and Kafka Streams for streaming analytics. Both Java and Node applications are demonstrated that interact with Kafka and leverage server-sent events and WebSocket channels to update the web UI in real time. User activity performed by the attendees in the web UI is processed by the Kafka-powered back end and results in live updates on all clients.;Lucas Jellema;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Fast data arrives in real time and potentially high volume. Rapid processing, filtering, and aggregation are required to ensure timely reaction and actual information in user interfaces. meeting these requirements is a challenge, and making this happen in a scalable and reliable fashion is even more interesting. This session introduces Apache Kafka as the scalable event bus that takes care of the events as they flow in and Kafka Streams for streaming analytics. Both Java and Node applications are demonstrated that interact with Kafka and leverage server-sent events and WebSocket channels to update the web UI in real time. User activity performed by the attendees in the web UI is processed by the Kafka-powered back end and results in live updates on all clients.
1492761196272001agpi;Web Application Security for Developers: Tooling and Best Practices;Very annoying: Just before you go live, a pen test takes place and at the very last moment, you have to fix security issues. Recognizable? It would be much better if you wrote secure software during development. You’re still in the flow, and you don’t have to implement security afterward. The Dutch Tax Office has had good experiences with training Java developers to do pen tests themselves. This way they develop secure applications and also perform pen tests for other teams. The purpose of this session is to show how you can create secure web applications during development. The Tax Office works with open source security tooling (such as OWASP ZAP). It uses a structured approach, with the ASVS project of OWASP being a central element.;Luuk Buit;Java Development Tools;Conference Session;Introductory;Very annoying: Just before you go live, a pen test takes place and at the very last moment, you have to fix security issues. Recognizable? It would be much better if you wrote secure software during development. You’re still in the flow, and you don’t have to implement security afterward. The Dutch Tax Office has had good experiences with training Java developers to do pen tests themselves. This way they develop secure applications and also perform pen tests for other teams. The purpose of this session is to show how you can create secure web applications during development. The Tax Office works with open source security tooling (such as OWASP ZAP). It uses a structured approach, with the ASVS project of OWASP being a central element.
149278221065100109Je;User Interface Prototyping with JavaFX Beyond Desktops;JavaFX provides great features for fast and flexible development of rich user interfaces. Within Volkswagen Group, an app framework based on JavaFX is being widely used for user interface prototyping. This session presents the latest work from Volkswagen, Audi, and Italdesign Giugiaro, including an HMI for the Pop.Up, a modular mobility concept developed together with Airbus. The highlight is an interactive 3D model of a passenger capsule, an automotive ground and air module. All examples are individually styled and feature impressive animations. The presentation looks at the key concepts behind the framework and discusses the advantages of JavaFX beyond desktop applications.;Jens Ehrke;Java Clients and User Interfaces;Conference Session;Advanced;JavaFX provides great features for fast and flexible development of rich user interfaces. Within Volkswagen Group, an app framework based on JavaFX is being widely used for user interface prototyping. This session presents the latest work from Volkswagen, Audi, and Italdesign Giugiaro, including an HMI for the Pop.Up, a modular mobility concept developed together with Airbus. The highlight is an interactive 3D model of a passenger capsule, an automotive ground and air module. All examples are individually styled and feature impressive animations. The presentation looks at the key concepts behind the framework and discusses the advantages of JavaFX beyond desktop applications.
1492805976967001gvhI;Ask the OpenJ9 Architects;Interested in OpenJ9? Want to know more about the (soon to be) open source JVM based on IBM’s production J9 JVM? Then bring your favorite questions to this open Q&A session with key architects from the OpenJ9 team.;Charlie Gracie;Core Java Platform;Conference Session;Introductory;Interested in OpenJ9? Want to know more about the (soon to be) open source JVM based on IBM’s production J9 JVM? Then bring your favorite questions to this open Q&A session with key architects from the OpenJ9 team.
149270125396600104bj;Building Kotlin Applications at Scale with Gradle;Kotlin is an extremely promising new JVM language that already has strong traction among Android developers. It also has a lot to offer for enterprise usage. For productive use of Kotlin in the enterprise, it is key for Kotlin builds to be able to scale. Gradle comes with outstanding support for scalable Kotlin builds. This session covers the following:<br> Extending Kotlin builds in a scalable way<br>• Managing multiple versions of Kotlin;Hans Dockter;Emerging Languages;Conference Session;Intermediate;Kotlin is an extremely promising new JVM language that already has strong traction among Android developers. It also has a lot to offer for enterprise usage. For productive use of Kotlin in the enterprise, it is key for Kotlin builds to be able to scale. Gradle comes with outstanding support for scalable Kotlin builds. This session covers the following:<br>• How to use the Gradle build cache with Kotlin<br>• Compile avoidance with Kotlin<br> • Incremental compile with Kotlin<br>• Parallel builds with Kotlin<br>• Analyzing Kotlin build performance over time<br>• Extending Kotlin builds in a scalable way<br>• Managing multiple versions of Kotlin
1492778508535001jj5d;Extremely Typed: Haskell for the JVM;Static type safety is good. More is even better. The Frege project brings Haskell and its extreme type system to the JVM such that we can provide new guarantees through the type system at compile time. We can disallow side effects in calls to software transactional memory (STM). We can also make sure that JavaFX components are ever touched only in the UI thread. We can assert that parallel computations change no state. What was long impossible to achieve is now a reality! Learn more in this session.;Dierk Koenig;Emerging Languages;Conference Session;Intermediate;Static type safety is good. More is even better. The Frege project brings Haskell and its extreme type system to the JVM such that we can provide new guarantees through the type system at compile time. We can disallow side effects in calls to software transactional memory (STM). We can also make sure that JavaFX components are ever touched only in the UI thread. We can assert that parallel computations change no state. What was long impossible to achieve is now a reality! Learn more in this session.
1492777550893001jc3T;How to Make a Project Java 9–Compatible;Java 9 brings numerous changes that might break existing applications. This presentation is a case study of making a third-party Java Collections library (Eclipse Collections) Java 9–compatible. You will get an overview of all the steps taken and the evolution of the final,  Java 9–compatible product. These steps are essentially similar to those you might have to take to upgrade your application to use JDK 9. The session covers available tooling and simple yet practical tips and tricks that will help you in the upgrade process.;Nikhil Nanivadekar;Core Java Platform;Conference Session;Introductory;Java 9 brings numerous changes that might break existing applications. This presentation is a case study of making a third-party Java Collections library (Eclipse Collections) Java 9–compatible. You will get an overview of all the steps taken and the evolution of the final,  Java 9–compatible product. These steps are essentially similar to those you might have to take to upgrade your application to use JDK 9. The session covers available tooling and simple yet practical tips and tricks that will help you in the upgrade process.
1492877133023001TnDE;Java Code Inspection and Testing Power Tools;This session’s objective is to present a set of code inspection and testing tools that are commonly used in enterprise development. Some of them are not well known but very useful and hence should be in the tool belt of any serious, disciplined developer. The presentation explains the importance of these tools and how they work together, both on the developer workstation and in the continuous integration server. Tools presented include code inspectors (Checkstyle, PMD, FindBugs, and SonarQube) and mutation testing (Pitest), test code coverage (JaCoCo), and security testing (OWASP ZAP and OWASP Dependency Finder) tools.;Jorge Hidalgo;Java Development Tools;Conference Session;Introductory;This session’s objective is to present a set of code inspection and testing tools that are commonly used in enterprise development. Some of them are not well known but very useful and hence should be in the tool belt of any serious, disciplined developer. The presentation explains the importance of these tools and how they work together, both on the developer workstation and in the continuous integration server. Tools presented include code inspectors (Checkstyle, PMD, FindBugs, and SonarQube) and mutation testing (Pitest), test code coverage (JaCoCo), and security testing (OWASP ZAP and OWASP Dependency Finder) tools.
1492804425800001kizH;Java EE 8: What’s New in the Java EE 8 Release;This session presents an overview of the recent release of the Java EE 8 platform. Topics covered include the new JSON Binding API, updates to the JSON Processing API, the JAX-RS reactive client API, JAX-RS support for server-sent events, HTTP/2 support in Servlet, the new Java EE Security API, and new features in Bean Validation and CDI.;Linda DeMichiel;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;This session presents an overview of the recent release of the Java EE 8 platform. Topics covered include the new JSON Binding API, updates to the JSON Processing API, the JAX-RS reactive client API, JAX-RS support for server-sent events, HTTP/2 support in Servlet, the new Java EE Security API, and new features in Bean Validation and CDI.
1492709855763001ZJwr;Java, the JCP, and You;Learn how to take part in Java technology evolution through the Java Community Process (JCP) program. You can participate as an individual, corporation, or nonprofit such as a Java user group (JUG). This session outlines why and how to participate in the JCP program. You will also learn about the global adoption programs and how you can participate in them. Hear details such as how to run hack days, collaborate with other JUG leads on Adopt-a-JSR activities, and review use cases from other JUGs around the world contributing to the Java EE 8 and Java SE 9 JSRs. Find out how you can contribute to future editions of Java technologies.;Heather VanCura;Developer Community Day: Community;Conference Session;Introductory;Learn how to take part in Java technology evolution through the Java Community Process (JCP) program. You can participate as an individual, corporation, or nonprofit such as a Java user group (JUG). This session outlines why and how to participate in the JCP program. You will also learn about the global adoption programs and how you can participate in them. Hear details such as how to run hack days, collaborate with other JUG leads on Adopt-a-JSR activities, and review use cases from other JUGs around the world contributing to the Java EE 8 and Java SE 9 JSRs. Find out how you can contribute to future editions of Java technologies.
1492891231414001Tzf6;Modularizing Acme Air: A Case Study in Modularizing a Java App;Java 9 introduces modularity as a feature. This helps the JDK be more scalable down to small computing devices as well as in the cloud, where a smaller size helps reduce the provisioning and push times. It also helps improve the security of the JDK as well as reduce the complexity of versioning and avoid classpath hell. This session’s speakers take Acme Air, a popular open source benchmark that implements a fictitious airline, and convert it into a modular application. The tutorial walks through the various hurdles of converting both the microservices and the monolithic Acme Air versions to be modular, working with build tools such as Gradle, using jdeps, and handling third-party modules.Finally we look at Java 9 modularity co-existing with OSGI.;Dinakar Guniguntala;Core Java Platform;Conference Session;Introductory;Java 9 introduces modularity as a feature. This helps the JDK be more scalable down to small computing devices as well as in the cloud, where a smaller size helps reduce the provisioning and push times. It also helps improve the security of the JDK as well as reduce the complexity of versioning and avoid classpath hell. This session’s speakers take Acme Air, a popular open source benchmark that implements a fictitious airline, and convert it into a modular application. The tutorial walks through the various hurdles of converting both the microservices and the monolithic Acme Air versions to be modular, working with build tools such as Gradle, using jdeps, and handling third-party modules.Finally we look at Java 9 modularity co-existing with OSGI.
1492652353072001aY2P;Revitalizing a Mature JUG: Lessons from Philly;The Philly JUG is one of the world’s oldest, largest, and most active Java user groups. Operating continuously since 2000, the JUG was twice recognized by Sun Microsystems as one of the top Java user groups in the world. In the past year or so, the JUG has moved to a completely new collaborative leadership model. For all practical purposes, it has been a fresh start for a very mature JUG. The JUG is now once again on a growth trajectory after some significant changes and stabilization. This session shares what was done and lessons learned under the new Philly JUG leadership. These lessons are valuable to growing not just mature JUGs but also young ones.;Reza Rahman;Developer Community Day: User Groups;Conference Session;Introductory;The Philly JUG is one of the world’s oldest, largest, and most active Java user groups. Operating continuously since 2000, the JUG was twice recognized by Sun Microsystems as one of the top Java user groups in the world. In the past year or so, the JUG has moved to a completely new collaborative leadership model. For all practical purposes, it has been a fresh start for a very mature JUG. The JUG is now once again on a growth trajectory after some significant changes and stabilization. This session shares what was done and lessons learned under the new Philly JUG leadership. These lessons are valuable to growing not just mature JUGs but also young ones.
1492880865215001bL6P;Thinking Strategically About IoT;Cool? Useful? Disruptive? All of the above? IoT is having an impact on more and more industries. As the cost of instrumenting things and collecting data drops, the possibilities for what we can control and the kind of insights we can gather increase. Not only is IoT hardware cheaper and more pervasive but developing IoT software is now also far more accessible. That doesn’t mean there aren’t tricky bits. Does Java have relevance in the IoT world? How can you keep the system reliable and handle failure in a cost-effective way? How can you cope with the data volumes? What’s the best way to turn raw data into insight? Come get answers in this session.;Holly Cummins;Java and Devices;Conference Session;Intermediate;Cool? Useful? Disruptive? All of the above? IoT is having an impact on more and more industries. As the cost of instrumenting things and collecting data drops, the possibilities for what we can control and the kind of insights we can gather increase. Not only is IoT hardware cheaper and more pervasive but developing IoT software is now also far more accessible. That doesn’t mean there aren’t tricky bits. Does Java have relevance in the IoT world? How can you keep the system reliable and handle failure in a cost-effective way? How can you cope with the data volumes? What’s the best way to turn raw data into insight? Come get answers in this session.
1492680359825001ZaUW;Use Voice Recognition with Alexa to Control Your Home;What if you’re eating and having a discussion about a certain topic? Searching on your phone would mean that your food gets cold. Or what if you’re lying on the couch without your phone and want to control the lights? The voice recognition service called Alexa can solve those issues. This presentation shows you how to integrate Alexa into your home automation setup with openHAB (used as an example). This enables you to control your lights and everything else with your voice. You can use Alexa with almost any software and hardware. Last but not least, the presentation shows you how to create your own skills in Java to add functionality to Alexa. The skills are deployed with Maven to AWS Lambda as a serverless application.;Johan Janssen;Java and Devices;Conference Session;Introductory;What if you’re eating and having a discussion about a certain topic? Searching on your phone would mean that your food gets cold. Or what if you’re lying on the couch without your phone and want to control the lights? The voice recognition service called Alexa can solve those issues. This presentation shows you how to integrate Alexa into your home automation setup with openHAB (used as an example). This enables you to control your lights and everything else with your voice. You can use Alexa with almost any software and hardware. Last but not least, the presentation shows you how to create your own skills in Java to add functionality to Alexa. The skills are deployed with Maven to AWS Lambda as a serverless application.
1492783122285001ZUmO;Analyzing HotSpot Crashes;Have you ever found hs_err_pid or replay_pid files in your Java application directory? Has your Java application ever crashed and you didn’t know why? This session unveils the contents stored by the HotSpot crash handler in the corresponding error files and how this information can be used to analyze and reproduce the crash. It also introduces tools such as the jcmd and the HotSpot Serviceability Agent, which helps introspect native core files and extract the relevant Java information that is otherwise not easily accessible by native debuggers. After this session, you’ll be able to easily detect, classify, and handle problems you encounter with your Java HotSpot VM.;Volker Simonis;Core Java Platform;Conference Session;Advanced;Have you ever found hs_err_pid or replay_pid files in your Java application directory? Has your Java application ever crashed and you didn’t know why? This session unveils the contents stored by the HotSpot crash handler in the corresponding error files and how this information can be used to analyze and reproduce the crash. It also introduces tools such as the jcmd and the HotSpot Serviceability Agent, which helps introspect native core files and extract the relevant Java information that is otherwise not easily accessible by native debuggers. After this session, you’ll be able to easily detect, classify, and handle problems you encounter with your Java HotSpot VM.
149272862410800103Tl;Blockchain? What Is Blockchain? Why Do I Care?;As digital transformation continues, current methods for handling transactions, contracts, records, and other data are not keeping up. “Blockchain” may be the key to modernizing and protecting transactions. It provides an open, distributed ledger updatable only by consensus of involved parties. Efficiently storing transactions in a way that can be verified makes Blockchain attractive anywhere in industry that data and value are in motion. Blockchain is most commonly thought of as the mechanism enabling digital currencies, but its most useful place may be in securing IoT input, medical records, contracts, transactions, and data transmissions. This session’s attendees will learn the basics of Blockchain and its current uses and security features. ;John King;Emerging Languages;Conference Session;Introductory;As digital transformation continues, current methods for handling transactions, contracts, records, and other data are not keeping up. “Blockchain” may be the key to modernizing and protecting transactions. It provides an open, distributed ledger updatable only by consensus of involved parties. Efficiently storing transactions in a way that can be verified makes Blockchain attractive anywhere in industry that data and value are in motion. Blockchain is most commonly thought of as the mechanism enabling digital currencies, but its most useful place may be in securing IoT input, medical records, contracts, transactions, and data transmissions. This session’s attendees will learn the basics of Blockchain and its current uses and security features. 
1492891056468001XBmU;Building and Testing Java 9 Applications with Gradle;Java 9 is finally here! But without IDE and build tool support, it’s almost useless: we live in a world where dependency management is king and reusing existing libraries is a must. In this session, you will learn how to build Java 9 applications with Gradle. It focuses on showing how to build and test modules as well as showing a migration path from Java 8 to Java 9 using the java-library plugin. The presentation also shows how the flexibility of Gradle can help support new features such as multirelease JARs very simply.;Cédric Champeau;Java Development Tools;Conference Session;Intermediate;Java 9 is finally here! But without IDE and build tool support, it’s almost useless: we live in a world where dependency management is king and reusing existing libraries is a must. In this session, you will learn how to build Java 9 applications with Gradle. It focuses on showing how to build and test modules as well as showing a migration path from Java 8 to Java 9 using the java-library plugin. The presentation also shows how the flexibility of Gradle can help support new features such as multirelease JARs very simply.
1492819646728001gPRm;Cloud-Based Test Microservices;What aspects of your testing can be shared across multiple products? This session describes how to identify, abstract, and convert functionality used by many test systems into shared services. It presents specific examples of test microservices as it looks at the typical lifecycle of a Java test.;Shelley Lambert;Java Development Tools;Conference Session;Introductory;What aspects of your testing can be shared across multiple products? This session describes how to identify, abstract, and convert functionality used by many test systems into shared services. It presents specific examples of test microservices as it looks at the typical lifecycle of a Java test.
1492788410596001a7na;Design Patterns in Java 8;Many of the familiar Gang of Four design patterns are greatly simplified when you take advantage of lambda expressions and method references. This session highlights several of them, including Strategy, Decorator, Chain of Responsibility, and Template Method.;Kenneth Kousen;Core Java Platform;Conference Session;Intermediate;Many of the familiar Gang of Four design patterns are greatly simplified when you take advantage of lambda expressions and method references. This session highlights several of them, including Strategy, Decorator, Chain of Responsibility, and Template Method.
1492806379921001b2Oc;Get Hip with JHipster;Building a modern web application requires a lot of tools, frameworks, and techniques. This session shows how JHipster unites popular frameworks such as Angular, Spring Boot, and Bootstrap. Learn how Yeoman, a scaffolding tool for modern web apps, works with JHipster to generate a project that uses Java 8, SQL or NoSQL databases, Spring profiles, Maven or Gradle, Webpack, WebSockets, and BrowserSync. It also supports a number of different authentication mechanisms, including classic session-based auth, OAuth 2.0, and JWT-based authentication. For production deployments, JHipster includes out-of-the-box support for AWS, Cloud Foundry, Heroku, Docker, and Kubernetes.;Matt Raible;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Building a modern web application requires a lot of tools, frameworks, and techniques. This session shows how JHipster unites popular frameworks such as Angular, Spring Boot, and Bootstrap. Learn how Yeoman, a scaffolding tool for modern web apps, works with JHipster to generate a project that uses Java 8, SQL or NoSQL databases, Spring profiles, Maven or Gradle, Webpack, WebSockets, and BrowserSync. It also supports a number of different authentication mechanisms, including classic session-based auth, OAuth 2.0, and JWT-based authentication. For production deployments, JHipster includes out-of-the-box support for AWS, Cloud Foundry, Heroku, Docker, and Kubernetes.
1492684372345001kNau;How We Started Our First Java Conference: JVMCON;Last year this session’s speaker came up with the idea of organizing his own JVM conference. What makes this conference different from (most) other Java/JVM conferences is that the attendees rate the session proposals. While voting, the attendees cannot see who proposed each session, to support equal opportunity. The top-rated sessions are included in the program. After he came up with the idea, the organizer's famous last words were, ”How hard can it be?” The last couple of months, he worked on everything, from the website to speaking with potential partners. If you (plan to) organize a conference, this session will give you some tricks such as organizing games to design a logo and useful applications.;Johan Janssen;Developer Community Day: Community;Conference Session;Introductory;Last year this session’s speaker came up with the idea of organizing his own JVM conference. What makes this conference different from (most) other Java/JVM conferences is that the attendees rate the session proposals. While voting, the attendees cannot see who proposed each session, to support equal opportunity. The top-rated sessions are included in the program. After he came up with the idea, the organizer's famous last words were, ”How hard can it be?” The last couple of months, he worked on everything, from the website to speaking with potential partners. If you (plan to) organize a conference, this session will give you some tricks such as organizing games to design a logo and useful applications.
1492769830879001ksLv;Java Versus Node.js Versus Swift in the Language Performance Olympics;This session highlights the performance differences between Java, Node.js, and Swift in common processing scenarios (database access, number crunching, and more).  Through a series of tests and using open source monitoring software, the presentation shows which language comes out on top and why, in some cases, you would want to write your application in several languages.;Steve Poole;Emerging Languages;Conference Session;Introductory;This session highlights the performance differences between Java, Node.js, and Swift in common processing scenarios (database access, number crunching, and more).  Through a series of tests and using open source monitoring software, the presentation shows which language comes out on top and why, in some cases, you would want to write your application in several languages.
1492875465882001gFut;Lambda Chops: Recipes for Simpler, More Expressive Code;Although the new Streams API has been a great showcase for lambda methods, there are many other ways this new language feature can be used to make friendlier APIs and more-expressive code. Lambdas can be used for several tasks that historically required significant boilerplate, type-unsafe constructs, or both. From new ways to express metadata to enforcing proper resource handling, this session takes a look at a myriad of ways, big and small, that you can use lambdas to improve APIs and streamline your code. It also addresses some of the limitations of lambdas and some techniques for overcoming them. Come to get inspired about ways you can use lambdas to write beautiful and effective code.;Ian Robertson;Core Java Platform;Conference Session;Intermediate;Although the new Streams API has been a great showcase for lambda methods, there are many other ways this new language feature can be used to make friendlier APIs and more-expressive code. Lambdas can be used for several tasks that historically required significant boilerplate, type-unsafe constructs, or both. From new ways to express metadata to enforcing proper resource handling, this session takes a look at a myriad of ways, big and small, that you can use lambdas to improve APIs and streamline your code. It also addresses some of the limitations of lambdas and some techniques for overcoming them. Come to get inspired about ways you can use lambdas to write beautiful and effective code.
1492809713356001AYvs;Modern Web Apps with HTML5 Web Components, Polymer, Java EE MVC 1.0, and JAX-RS;This session covers the following topics:<br> ;Kito Mann;Java, Cloud, and Server-Side Development;Conference Session;Introductory;This session covers the following topics:<br> * Overview of MVC 1.0<br>* Overview of HTML5 Web Components<br>* Introducing Polymer<br>* Putting it all together 
1492801360133001aXj5;Open-Sourcing IBM’s J9 Java Virtual Machine;As announced at last year’s JavaOne conference, IBM will be open-sourcing its cross-platform, enterprise-caliber JVM, called OpenJ9, in 2017. Why, after two decades of closed source development and a decade after Sun Microsystems created the OpenJDK project, is IBM now open-sourcing its JVM? Why does the world need two completely different open source JVMs? What does it actually mean for IBM to open-source its JVM technology, and how will OpenJ9 fit into the existing Java ecosystem? Come to this session to get answers to these questions, to learn how to work with OpenJ9 alongside the OpenJDK class libraries, and to gauge for yourself whether OpenJ9 is something that could help you and your development teams.;Steve Wallin;Core Java Platform;Conference Session;Introductory;As announced at last year’s JavaOne conference, IBM will be open-sourcing its cross-platform, enterprise-caliber JVM, called OpenJ9, in 2017. Why, after two decades of closed source development and a decade after Sun Microsystems created the OpenJDK project, is IBM now open-sourcing its JVM? Why does the world need two completely different open source JVMs? What does it actually mean for IBM to open-source its JVM technology, and how will OpenJ9 fit into the existing Java ecosystem? Come to this session to get answers to these questions, to learn how to work with OpenJ9 alongside the OpenJDK class libraries, and to gauge for yourself whether OpenJ9 is something that could help you and your development teams.
1492788716507001aEyW;Parallel Streams, CompletableFuture, and All That: Concurrency in Java 8;The Java 8 (and 9) standard library includes multiple techniques for taking advantage of parallelism and concurrency, including parallel streams and the CompletableFuture class. Combined with the ExecutorService and other classes from java.util.concurrent, they give developers a wide range of choices for optimizing program speed. This session reviews the options and trade-offs involved.;Kenneth Kousen;Core Java Platform;Conference Session;Advanced;The Java 8 (and 9) standard library includes multiple techniques for taking advantage of parallelism and concurrency, including parallel streams and the CompletableFuture class. Combined with the ExecutorService and other classes from java.util.concurrent, they give developers a wide range of choices for optimizing program speed. This session reviews the options and trade-offs involved.
1492886435796001A0mC;Project Jigsaw Integration with Tools;This session presents how Project Jigsaw integrates with build tools (Maven, Gradle, Ant) and integrated development environments (NetBeans, Intellij IDEA, Eclipse).;Alexandru Jecan;Java Development Tools;Conference Session;Introductory;This session presents how Project Jigsaw integrates with build tools (Maven, Gradle, Ant) and integrated development environments (NetBeans, Intellij IDEA, Eclipse).
1492777790759001jMoE;Projector Pattern for Efficient Creation of Ambitious User Interfaces;Pleasant user interfaces don’t shine only due to an attractive appearance. They also provide a sense of immersion through instant feedback. Advanced UIs of this kind are often considered too costly to build. The projector pattern offers an efficient way to construct ambitious UIs from presentation models that capture “what” to display. The projector defines in a single and consistent way “how” to visualize the model and how to interact with it. The programmer just selects projections such as “simple form,” “master-detail,” and “search” from a catalog. Suitable projectors display this declarative UI with your UI toolkit of choice, be it desktop (JavaFX, Swing, SWT), web, or mobile. Learn more in this session.;Dierk Koenig;Java Clients and User Interfaces;Conference Session;Introductory;Pleasant user interfaces don’t shine only due to an attractive appearance. They also provide a sense of immersion through instant feedback. Advanced UIs of this kind are often considered too costly to build. The projector pattern offers an efficient way to construct ambitious UIs from presentation models that capture “what” to display. The projector defines in a single and consistent way “how” to visualize the model and how to interact with it. The programmer just selects projections such as “simple form,” “master-detail,” and “search” from a catalog. Suitable projectors display this declarative UI with your UI toolkit of choice, be it desktop (JavaFX, Swing, SWT), web, or mobile. Learn more in this session.
1492785911104001ZSfz;Reactive Stream Processing with WildFly Swarm and Apache Kafka;Apache Kafka is a distributed messaging platform designed to be fast, scalable, and durable. Its use cases reach from traditional messaging and event sourcing to log aggregation or metrics. WildFly Swarm offers an innovative approach to packaging and running Java EE applications by packaging them with just enough of the server runtime to ”java -jar” your application. This session introduces Kafka and Swarm and shows how to integrate Kafka’s Java client within Swarm applications, leveraging standardized APIs such as CDI or JAX-RS. The session is supported by a demo showing the processing of high-throughput mobile application data for metric analysis.;Ken Finnigan;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Apache Kafka is a distributed messaging platform designed to be fast, scalable, and durable. Its use cases reach from traditional messaging and event sourcing to log aggregation or metrics. WildFly Swarm offers an innovative approach to packaging and running Java EE applications by packaging them with just enough of the server runtime to ”java -jar” your application. This session introduces Kafka and Swarm and shows how to integrate Kafka’s Java client within Swarm applications, leveraging standardized APIs such as CDI or JAX-RS. The session is supported by a demo showing the processing of high-throughput mobile application data for metric analysis.
1492751781219001ad4i;Robots for the Kid in All of Us;What would you do if you had to write a Java program that solves a 10 x 10 maze on a robot in 64 MB (not gigabytes) of RAM and not have it pause? This session’s speakers faced a similar situation while writing a pathfinding algorithm on a Lego Mindstorms EV3. The EV3 comes with only 64 MB of RAM with a microprocessor. After finding a creative solution, they realized that some commonly faced problems as well as some complex algorithms can be solved within these memory constraints. In this session, they program a Lego Mindstorms EV3 with Java, using the robot to demonstrate solutions to common developer problems as well as a few other fun contraptions. The session is designed to be fun and creative.;Nikhil Nanivadekar;Java and Devices;Conference Session;Introductory;What would you do if you had to write a Java program that solves a 10 x 10 maze on a robot in 64 MB (not gigabytes) of RAM and not have it pause? This session’s speakers faced a similar situation while writing a pathfinding algorithm on a Lego Mindstorms EV3. The EV3 comes with only 64 MB of RAM with a microprocessor. After finding a creative solution, they realized that some commonly faced problems as well as some complex algorithms can be solved within these memory constraints. In this session, they program a Lego Mindstorms EV3 with Java, using the robot to demonstrate solutions to common developer problems as well as a few other fun contraptions. The session is designed to be fun and creative.
1492762485309001ZHRk;Single-Page Web Apps in Plain Java with Vaadin;Vaadin Framework is an open source Java library that makes it really easy for Java-oriented developers to build stunning web apps. Vaadin developers work mostly with Java code and thus use the built-in Java features of the IDE. But there is also an advanced NetBeans plugin that makes certain things even easier. The Vaadin NetBeans plugin is not just a typical project and code generator but also integrates with the core part of the IDE, the code editor. Attend this session to learn how Java developers can create web apps without touching a single line of JS, HTML, or CSS and learn multiple advanced ways the NetBeans IDE can be extended.;Matti Tahvonen;Developer Community Day: NetBeans;Conference Session;Introductory;Vaadin Framework is an open source Java library that makes it really easy for Java-oriented developers to build stunning web apps. Vaadin developers work mostly with Java code and thus use the built-in Java features of the IDE. But there is also an advanced NetBeans plugin that makes certain things even easier. The Vaadin NetBeans plugin is not just a typical project and code generator but also integrates with the core part of the IDE, the code editor. Attend this session to learn how Java developers can create web apps without touching a single line of JS, HTML, or CSS and learn multiple advanced ways the NetBeans IDE can be extended.
1492622954450001dDCe;Solving HTML5/JavaScript/REST Backlogs Through Visual Development;The combination of HTML5 and JavaScript front ends with REST-based back-end services is the de facto standard for cloud-age app architecture. However, getting developers up to speed and productive with such a technology stack can be challenging and results in a constant backlog of unaddressed business needs. This session discusses and demos how new tools and frameworks simplify adoption of this architecture through low-code development platforms that are extensible via standard open-source technologies.;Shay Shmeltzer;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;The combination of HTML5 and JavaScript front ends with REST-based back-end services is the de facto standard for cloud-age app architecture. However, getting developers up to speed and productive with such a technology stack can be challenging and results in a constant backlog of unaddressed business needs. This session discusses and demos how new tools and frameworks simplify adoption of this architecture through low-code development platforms that are extensible via standard open-source technologies.
14927356066830010VDw;The Secret Sauce of Successful Teams;Every software team writes code, but some teams produce fewer bugs than others. Every software team creates new features, but some teams develop features users love and others don't. What do high-performance teams do differently, and why are team members more focused, satisfied, and relaxed? They truly work together. This session examines how the best software teams set and follow goals, ensure diversity, monitor and continually improve team health, embrace transparency, use a playbook to guide them through every phase of development, and much more. He shares techniques such as bug fix rotations, OKRs, feature buddies, focus days, sanity checks, and many more that help teams work together more effectively and produce awesome results.;Sven Peters;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Every software team writes code, but some teams produce fewer bugs than others. Every software team creates new features, but some teams develop features users love and others don't. What do high-performance teams do differently, and why are team members more focused, satisfied, and relaxed? They truly work together. This session examines how the best software teams set and follow goals, ensure diversity, monitor and continually improve team health, embrace transparency, use a playbook to guide them through every phase of development, and much more. He shares techniques such as bug fix rotations, OKRs, feature buddies, focus days, sanity checks, and many more that help teams work together more effectively and produce awesome results.
1491763079365001tUnP;Byte Buddy: Bytecode Generation Made Easy;JVM bytecode generation libraries (ASM, BCEL, Javassist, CGLIB) are not new but are often underrated. Many frameworks or libraries use them to transparently handle essential operations. Byte Buddy is a bytecode generation library under the spotlights. It was recently merged into major projects (Mockito 2.1, Hibernate, and others). If you want to learn how Byte Buddy makes bytecode generation elegant, easy, and fun and when it is appropriate to use it—all this through live-coded examples—don’t miss this session.;Nicolas Comet;Java Development Tools;Conference Session;Intermediate;JVM bytecode generation libraries (ASM, BCEL, Javassist, CGLIB) are not new but are often underrated. Many frameworks or libraries use them to transparently handle essential operations. Byte Buddy is a bytecode generation library under the spotlights. It was recently merged into major projects (Mockito 2.1, Hibernate, and others). If you want to learn how Byte Buddy makes bytecode generation elegant, easy, and fun and when it is appropriate to use it—all this through live-coded examples—don’t miss this session.
1491828431976001tnuB;How to Hack into Your Oracle Database via Node.js, Using SQL Injection;Hackers are constantly searching for personal data they can use to exploit people. And they’re often successful. Each week brings new stories of large-scale data breaches. A common attack vector is SQL injection. If your application is vulnerable to this, hackers can get whatever they want from your database. This session shows you how easy it is to access private data with SQL injection and how to change your code to stop it. It ends with a discussion of further recommendations for writing secure code. This is a must-attend session for all developers who write database access code.;Dan Mcghan;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Hackers are constantly searching for personal data they can use to exploit people. And they’re often successful. Each week brings new stories of large-scale data breaches. A common attack vector is SQL injection. If your application is vulnerable to this, hackers can get whatever they want from your database. This session shows you how easy it is to access private data with SQL injection and how to change your code to stop it. It ends with a discussion of further recommendations for writing secure code. This is a must-attend session for all developers who write database access code.
1491336463276001hYNB;Java 8: The Good, the Bad, and the Ugly;What is a good way to use Java 8 syntax? How functional is Java 8? Is Optional the life saver some people promised it to be? How to handle streams? What are my options regarding exception handling within streams? All of these questions and more are part of this session. It basically dives into how to write clean and maintainable code in Java 8.;Brian Vermeer;Core Java Platform;Conference Session;Intermediate;What is a good way to use Java 8 syntax? How functional is Java 8? Is Optional the life saver some people promised it to be? How to handle streams? What are my options regarding exception handling within streams? All of these questions and more are part of this session. It basically dives into how to write clean and maintainable code in Java 8.
1491948952321001dm4m;JDBC Next: A New Asynchronous API for Connecting to a Database;The existing JDBC API leads to blocked threads, threads scheduling, and contention. For high throughput and large-scale deployment, the Java community needs a standard asynchronous API for database access where user threads never block. This session presents an advance look at a possible new Java standard for accessing SQL databases. This new API is completely nonblocking. It is not intended to be an extension to, or a replacement for, JDBC but, rather, an entirely separate API that provides completely nonblocking access to the same databases as JDBC. This session examines the API, its execution model, code samples, a demo of a prototype, and the next steps.;Jean De Lavarene;Java, Cloud, and Server-Side Development;Conference Session;Advanced;The existing JDBC API leads to blocked threads, threads scheduling, and contention. For high throughput and large-scale deployment, the Java community needs a standard asynchronous API for database access where user threads never block. This session presents an advance look at a possible new Java standard for accessing SQL databases. This new API is completely nonblocking. It is not intended to be an extension to, or a replacement for, JDBC but, rather, an entirely separate API that provides completely nonblocking access to the same databases as JDBC. This session examines the API, its execution model, code samples, a demo of a prototype, and the next steps.
1491573678378001ABz2;JEDI and JEDI4KiDS: Challenging Minds, Changing Lives.;Four years ago, JEDI planted the seeds for the future. JEDI4KiDS seminars were conducted in far-flung, depressed communities. J4K played a significant role in helping them learn programming and develop strong interest in computing. Today many of these students are enrolled in computer science programs in JEDI-partner colleges and universities. JEDI & JEDI4KiDS are now challenging minds and changing lives. This session presents how J4K played a significant role in helping students learn programming and how JEDI enhances that knowledge. It also presents case studies, videos, and lessons learned and aims to encourage and recruit more professionals, educators, and JUGs to join and help spread Java education to all children.;JP Petines;Developer Community Day: Community;Conference Session;Introductory;Four years ago, JEDI planted the seeds for the future. JEDI4KiDS seminars were conducted in far-flung, depressed communities. J4K played a significant role in helping them learn programming and develop strong interest in computing. Today many of these students are enrolled in computer science programs in JEDI-partner colleges and universities. JEDI & JEDI4KiDS are now challenging minds and changing lives. This session presents how J4K played a significant role in helping students learn programming and how JEDI enhances that knowledge. It also presents case studies, videos, and lessons learned and aims to encourage and recruit more professionals, educators, and JUGs to join and help spread Java education to all children.
14911727986280014Wjn;JShell: The Ultimate Missing Tool ;The sun is shining on JDK 9, with promising new features such as JShell, an interactive missing REPL (read-eval-print-loop) for Java. The missing tool comes bundled with the upcoming JDK 9 release and enables users to learn the Java programming language and explore newly added Java APIs. Without creating trivial Java projects to understand the Java API, we can sequentially write and evaluate Java behaviors such as listing variables and validating Java statements. In this session find out the important mysteries of JShell by seeing a live demonstration. Come and see how JShell is remarkable.;Rahman USTA;Java Development Tools;Conference Session;Introductory;The sun is shining on JDK 9, with promising new features such as JShell, an interactive missing REPL (read-eval-print-loop) for Java. The missing tool comes bundled with the upcoming JDK 9 release and enables users to learn the Java programming language and explore newly added Java APIs. Without creating trivial Java projects to understand the Java API, we can sequentially write and evaluate Java behaviors such as listing variables and validating Java statements. In this session find out the important mysteries of JShell by seeing a live demonstration. Come and see how JShell is remarkable.
1491151895479001K2gt;Lazy Java;Like all other imperative languages, Java is eagerly evaluated, but the introduction of lambdas has allowed the adoption of some lazy patterns and data structures that are typically functional. Streams are the most evident example of a native Java API using laziness, but there are other cases where laziness is an effective solution to common problems. In fact it makes it possible to process an infinite amount of data, but it is even more than that: the reader monad delays the need for external dependencies, lowering the abuse of dependency injection, and a trampoline uses laziness to delay and then linearize recursive calls. This session shows the why and the how of implementing laziness in Java, with practical examples delivered with slides as well as live coding sessions.;Mario Fusco;Core Java Platform;Conference Session;Intermediate;Like all other imperative languages, Java is eagerly evaluated, but the introduction of lambdas has allowed the adoption of some lazy patterns and data structures that are typically functional. Streams are the most evident example of a native Java API using laziness, but there are other cases where laziness is an effective solution to common problems. In fact it makes it possible to process an infinite amount of data, but it is even more than that: the reader monad delays the need for external dependencies, lowering the abuse of dependency injection, and a trampoline uses laziness to delay and then linearize recursive calls. This session shows the why and the how of implementing laziness in Java, with practical examples delivered with slides as well as live coding sessions.
1491849711390001BeOY;Modern Java Recipes;This session examines typical use cases for features unique to Java 8 and 9 from a recipe point of view. Examples are chosen from functional programming with streams, lambdas, and method references as well as using default, private, and static methods in interfaces. How to use Optional, design patterns, and parallel streams will be included as time allows.;Kenneth Kousen;Core Java Platform;Conference Session;Advanced;This session examines typical use cases for features unique to Java 8 and 9 from a recipe point of view. Examples are chosen from functional programming with streams, lambdas, and method references as well as using default, private, and static methods in interfaces. How to use Optional, design patterns, and parallel streams will be included as time allows.
1492346260702001YPux;Scala Under the Hood;This presentation dives deep into the JVM to show how Scala does its magic. In this session see the real difference between val, var, and def, what happens when we use an object, how lazy works, and much more. At the end of the session you will be able to better understand what is really happening under the hood.;Tzofia Shiftan;Emerging Languages;Conference Session;Intermediate;This presentation dives deep into the JVM to show how Scala does its magic. In this session see the real difference between val, var, and def, what happens when we use an object, how lazy works, and much more. At the end of the session you will be able to better understand what is really happening under the hood.
1492546120123001bkif;Streams in the Wild;The Stream API is the best tool of the JDK for processing data in a clean and efficient way. Still, there are some classic data processing patterns that cannot be implemented with the available methods, such as grouping or accumulating elements. The Stream API was built on the Spliterator API, which can be used to connect streams on nonstandard sources of data and to create streams on other streams. Implementing this interface is not straightforward. This session shows you everything you should know to create your own spliterators, in live coding examples and slides. From the splitting of strings to the computation of statistics on shifting windows, the presentation covers all the aspects of this API.  ;José Paumard;Core Java Platform;Conference Session;Intermediate;The Stream API is the best tool of the JDK for processing data in a clean and efficient way. Still, there are some classic data processing patterns that cannot be implemented with the available methods, such as grouping or accumulating elements. The Stream API was built on the Spliterator API, which can be used to connect streams on nonstandard sources of data and to create streams on other streams. Implementing this interface is not straightforward. This session shows you everything you should know to create your own spliterators, in live coding examples and slides. From the splitting of strings to the computation of statistics on shifting windows, the presentation covers all the aspects of this API.  
1492515839907001F0ry;The Reactive Landscape;Reactive programming, Reactive eXtensions, Reactive Streams, reactive systems, Reactive Manifesto—that’s a lot of “reactive” thingies. Just to make it even more confusing, <i>reactive</i> is often associated with asynchronous, RX, back pressure, streams, promises, spreadsheets, and so on. It’s a lot to digest…. This session helps you understand what’s behind <i>reactive</i>. It explores the reactive landscape and explains what all these things are and how they are related. By providing an overview of the reactive landscape, the session also provides a general understanding of the “reactive” trend and why it matters. It uses Eclipse Vert.x as a playground and presents a set of demos to explain how all these concepts work together.;Escoffier Clement;Java, Cloud, and Server-Side Development;Conference Session;Introductory;Reactive programming, Reactive eXtensions, Reactive Streams, reactive systems, Reactive Manifesto—that’s a lot of “reactive” thingies. Just to make it even more confusing, <i>reactive</i> is often associated with asynchronous, RX, back pressure, streams, promises, spreadsheets, and so on. It’s a lot to digest…. This session helps you understand what’s behind <i>reactive</i>. It explores the reactive landscape and explains what all these things are and how they are related. By providing an overview of the reactive landscape, the session also provides a general understanding of the “reactive” trend and why it matters. It uses Eclipse Vert.x as a playground and presents a set of demos to explain how all these concepts work together.
1492501415787001bsMc;Building DSLs with Scala;DSLs are everywhere. Have you ever used SQL, Ant, or maybe HTML? If so, you were using a DSL, maybe without realizing it. DSLs provide convenient syntactical means of expressing goals in a given problem domain. A well-crafted DSL communicates the essence and means of the domain it represents in a natural way, so you don’t even need to think about its underlying technology. ​Scala’s rich, flexible syntax, combined with its OO and functional features, makes writing DSLs a breeze. This session introduces the concept of DSLs, where best to apply them, their pros and cons, and how to integrate them into your core application. You will see a practical example of how to leverage the tools Scala gives us and build your very own tax calculation DSL. ​;Alon Muchnick;Emerging Languages;Conference Session;Introductory;DSLs are everywhere. Have you ever used SQL, Ant, or maybe HTML? If so, you were using a DSL, maybe without realizing it. DSLs provide convenient syntactical means of expressing goals in a given problem domain. A well-crafted DSL communicates the essence and means of the domain it represents in a natural way, so you don’t even need to think about its underlying technology. ​Scala’s rich, flexible syntax, combined with its OO and functional features, makes writing DSLs a breeze. This session introduces the concept of DSLs, where best to apply them, their pros and cons, and how to integrate them into your core application. You will see a practical example of how to leverage the tools Scala gives us and build your very own tax calculation DSL. ​
1492445722518001F2he;Choosing a NoSQL API and Database to Avoid Tombstones and Dragons in Game On!;Game On! (@gameontext – http://game-on.org) is an awesome throwback text-based adventure built with microservices. Completely open source, it enables everyone to choose their own adventure to learn about microservices concepts while extending the game. One of the core services is the Map, which maintains a two-dimensional map containing all the registered rooms. The Map started with a document store as a back end, but as the Map changed over time, tombstones started to accrue. And then people started to ask how to manage three dimensions, and dragons appeared. Come to this session to find out why the decision was made to change the NoSQL back end, how it was done, and the result of the change with a new NoSQL API (http://jnosql.org/). ;Leonardo Lima;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Game On! (@gameontext – http://game-on.org) is an awesome throwback text-based adventure built with microservices. Completely open source, it enables everyone to choose their own adventure to learn about microservices concepts while extending the game. One of the core services is the Map, which maintains a two-dimensional map containing all the registered rooms. The Map started with a document store as a back end, but as the Map changed over time, tombstones started to accrue. And then people started to ask how to manage three dimensions, and dragons appeared. Come to this session to find out why the decision was made to change the NoSQL back end, how it was done, and the result of the change with a new NoSQL API (http://jnosql.org/). 
1492538209660001FYBu;Cloud-Native Java Done Right;Conventional wisdom has it that Java EE is a bad starting point for building Java microservices, but conventional thinking isn’t relevant to the new wave of applications. It isn’t that Java EE isn’t a good choice (after all, most microservice frameworks build on parts of it), it’s that it hasn’t been growing fast enough to address the problems microservice architecture presents. Last year several Java EE server companies and Java user groups got together to start the MicroProfile initiative to help kick-start an effort to solve these new problems. Attend this session to learn how these new open source, open standard APIs can provide a platform for Java-based microservices that doesn't tie the success of your server to a single company.;Kevin Sutter;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Conventional wisdom has it that Java EE is a bad starting point for building Java microservices, but conventional thinking isn’t relevant to the new wave of applications. It isn’t that Java EE isn’t a good choice (after all, most microservice frameworks build on parts of it), it’s that it hasn’t been growing fast enough to address the problems microservice architecture presents. Last year several Java EE server companies and Java user groups got together to start the MicroProfile initiative to help kick-start an effort to solve these new problems. Attend this session to learn how these new open source, open standard APIs can provide a platform for Java-based microservices that doesn't tie the success of your server to a single company.
1491330049850001WJxC;Creating RESTful Web Services the Easy Way with Node.js;Drivers make it easy to connect to and run statements against a database. That means they’re perfect for creating RESTful APIs, right? Well, you’ll want to add some pagination capabilities, maybe sorting controls, and what about some generic filtering options too? You could do all that with the driver and some smart code, but isn’t there an easier way? Of course there is! In this session, attendees will learn about some of the challenges associated with manual API creation using drivers. Once those are understood, the presentation explores several tools that offer similar functionality out of the box, including Loopback, Sails, and ORDS.;Dan Mcghan;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Drivers make it easy to connect to and run statements against a database. That means they’re perfect for creating RESTful APIs, right? Well, you’ll want to add some pagination capabilities, maybe sorting controls, and what about some generic filtering options too? You could do all that with the driver and some smart code, but isn’t there an easier way? Of course there is! In this session, attendees will learn about some of the challenges associated with manual API creation using drivers. Once those are understood, the presentation explores several tools that offer similar functionality out of the box, including Loopback, Sails, and ORDS.
14912245584000014KNq;Effective Design of RESTful APIs;Developers creating websites, especially back-end developers, need to know how to build RESTful APIs correctly, because nowadays those APIs are serving many channels: mobile, microservices components, IoT, or integration—or all of these. This session will help you plan and model your own APIs and understand the six REST design constraints that help guide your architecture. It starts with a simple overview, including advice on identifying the users or “participants” of your system and the activities they might perform with it. You’ll learn how to paper-test your model, validating the design before you build it, and see a live example to clarify the concept. You’ll then explore the HTTP concepts and REST constraints needed to build your API.;Mohamed Taman;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Developers creating websites, especially back-end developers, need to know how to build RESTful APIs correctly, because nowadays those APIs are serving many channels: mobile, microservices components, IoT, or integration—or all of these. This session will help you plan and model your own APIs and understand the six REST design constraints that help guide your architecture. It starts with a simple overview, including advice on identifying the users or “participants” of your system and the activities they might perform with it. You’ll learn how to paper-test your model, validating the design before you build it, and see a live example to clarify the concept. You’ll then explore the HTTP concepts and REST constraints needed to build your API.
1492357813425001YRQq;Intro to Mutation Testing in Java;Sure, we all know that it’s important to write tests. But how do we know if the tests are thorough? Code coverage isn’t enough. This introduction to mutation testing presents an overview, discusses how it works, and provides a live example of using mutation testing to improve tests.;Jeanne Boyarsky;Java Development Tools;Conference Session;Intermediate;Sure, we all know that it’s important to write tests. But how do we know if the tests are thorough? Code coverage isn’t enough. This introduction to mutation testing presents an overview, discusses how it works, and provides a live example of using mutation testing to improve tests.
1491198833720001KwJc;Kafka Streams + TensorFlow + H2O.ai = Highly Scalable Deep Learning;Big data and machine learning are key for innovation today. This session explains how to build analytic models leveraging open source machine learning/deep learning frameworks such as Apache Spark, TensorFlow, or H2O.ai. The second part discusses the deployment of these built analytic models to your own applications or microservices, leveraging the Apache Kafka cluster and Kafka Streams instead of building a new stream-processing cluster. The session focuses on live demos and also teaches lessons learned for executing analytic models in a highly scalable and performant way. The last part explains how Apache Kafka can help you move from manual build and deployment of analytic models to continuous online model improvement in real time. ;Kai Waehner;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Big data and machine learning are key for innovation today. This session explains how to build analytic models leveraging open source machine learning/deep learning frameworks such as Apache Spark, TensorFlow, or H2O.ai. The second part discusses the deployment of these built analytic models to your own applications or microservices, leveraging the Apache Kafka cluster and Kafka Streams instead of building a new stream-processing cluster. The session focuses on live demos and also teaches lessons learned for executing analytic models in a highly scalable and performant way. The last part explains how Apache Kafka can help you move from manual build and deployment of analytic models to continuous online model improvement in real time. 
14920096193940013cH0;Keeping Your Data Sane with Bean Validation 2.0;Rich UIs, schemaless data stores, REST-based APIs—the need for powerful data validation is greater than ever. The Bean Validation standard is here to help, defining a rich validation API based on annotations. Bean Validation 2.0 (JSR 380) makes validation even more expressive, leveraging Java 8 features such as type and repeatable annotations or default methods. This opens up exciting opportunities for Bean Validation, such as List<@Email String>. Part of Java EE 8, Bean Validation 2.0 can be used on Java SE too. This code-centric session explores many of the new features right in the IDE. Find out how Bean Validation integrates with specs such as JAX-RS and how to implement your own constraints, ensuring that your data is sane at all times.;Gunnar Morling;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Rich UIs, schemaless data stores, REST-based APIs—the need for powerful data validation is greater than ever. The Bean Validation standard is here to help, defining a rich validation API based on annotations. Bean Validation 2.0 (JSR 380) makes validation even more expressive, leveraging Java 8 features such as type and repeatable annotations or default methods. This opens up exciting opportunities for Bean Validation, such as List<@Email String>. Part of Java EE 8, Bean Validation 2.0 can be used on Java SE too. This code-centric session explores many of the new features right in the IDE. Find out how Bean Validation integrates with specs such as JAX-RS and how to implement your own constraints, ensuring that your data is sane at all times.
1491652982235001MdY8;Maven and Its Impact on Java 9 Projects;Now that Java 9 has been released, modular JARs are slowly entering the Java ecosystem. At a certain moment, you, as either a library or application developer, should consider when the time has arrived to switch your project to Java 9. Especially if you are a library builder, your decisions might have negative effects on end users, so you must make them wisely. This session explores these topics and discusses the circumstances in which Maven can or can’t help you.;Robert Scholte;Java Development Tools;Conference Session;Advanced;Now that Java 9 has been released, modular JARs are slowly entering the Java ecosystem. At a certain moment, you, as either a library or application developer, should consider when the time has arrived to switch your project to Java 9. Especially if you are a library builder, your decisions might have negative effects on end users, so you must make them wisely. This session explores these topics and discusses the circumstances in which Maven can or can’t help you.
1491919829459001saEk;Migrating to Java 9 Modules;Java 9 is coming to your doorstep (whether you ordered it or not). What does it take to migrate existing code to make use of the new module system? Migrating an existing codebase from the classpath to any kind of module system can be a challenging task. Java 9 comes with several features for easing migration, including automatic modules and the unnamed module. This session looks at examples of migrating real code, based on a Spring/Hibernate application. It addresses common problems you run into during migration, leading to practical tips as well as a good understanding of the module system itself and its migration features. The session is excellent preparation for starting to migrate your own code.;Paul Bakker;Core Java Platform;Conference Session;Intermediate;Java 9 is coming to your doorstep (whether you ordered it or not). What does it take to migrate existing code to make use of the new module system? Migrating an existing codebase from the classpath to any kind of module system can be a challenging task. Java 9 comes with several features for easing migration, including automatic modules and the unnamed module. This session looks at examples of migrating real code, based on a Spring/Hibernate application. It addresses common problems you run into during migration, leading to practical tips as well as a good understanding of the module system itself and its migration features. The session is excellent preparation for starting to migrate your own code.
1492441295444001bBJh;Refactoring Design Patterns the Functional Way (in Scala);When object-oriented developers first encounter functional programming, they’re often told that there are no design patterns in functional programming, functions take the place of everything they’ve spent years learning and honing. This session’s speaker disagrees with that assertion. To prove the point, this live coding session takes a serious look at common design patterns (factory, visitor, chain of responsibility…) and shows how they smoothly translate to functional code in one of the nicer hybrid languages out there, Scala. You’ll learn a bit about functional programming, a bit about Scala, and maybe even about design patterns and will hopefully come out convinced that both approaches are valid, valuable, and practical.;Pijus Navickas;Emerging Languages;Conference Session;Intermediate;When object-oriented developers first encounter functional programming, they’re often told that there are no design patterns in functional programming, functions take the place of everything they’ve spent years learning and honing. This session’s speaker disagrees with that assertion. To prove the point, this live coding session takes a serious look at common design patterns (factory, visitor, chain of responsibility…) and shows how they smoothly translate to functional code in one of the nicer hybrid languages out there, Scala. You’ll learn a bit about functional programming, a bit about Scala, and maybe even about design patterns and will hopefully come out convinced that both approaches are valid, valuable, and practical.
1492138227985001CBtS;Security Policy File Best Practices for Your Java/JDBC Modules ;A Java class in a JAR file carries a set of permissions that defines the activities the class is allowed to perform. The Java Security infrastructure protects access to sensitive resources or sensitive application code (such as methods in a class). Modules in a JAR file can be protected with a security policy file. These policy files contain the exact sets of permissions granted to code loaded from particular locations, signed by particular entities, and executing as particular users. This session explains the permissions in a policy file and discusses the basic responsibility that determines whether a Java class is allowed to access a protected resource. The presentation uses the Oracle JDBC ojdbc.policy file as an example.;Douglas Surber;Java, Cloud, and Server-Side Development;Conference Session;Advanced;A Java class in a JAR file carries a set of permissions that defines the activities the class is allowed to perform. The Java Security infrastructure protects access to sensitive resources or sensitive application code (such as methods in a class). Modules in a JAR file can be protected with a security policy file. These policy files contain the exact sets of permissions granted to code loaded from particular locations, signed by particular entities, and executing as particular users. This session explains the permissions in a policy file and discusses the basic responsibility that determines whether a Java class is allowed to access a protected resource. The presentation uses the Oracle JDBC ojdbc.policy file as an example.
1492157530886001SU1A;Serverless, the Future of the Cloud?;Are you still using Docker in production? Get over it! Serverless is the <i>new</i> future of the cloud. Because the cloud is still on someone else's computer, it needs to be managed. And even if it is sitting idle, you probably have to pay for it, whether you like it or not. No-server can be more easily managed than a server. Therefore: meet serverless, a new paradigm that truly approaches the pay-as-you-go philosophy once promised by the cloud. This session explores serverless and its impact on existing architectures and assesses its usability for mobile back ends as a service (MBaaS), functions as a service (FaaS), and microservice-based architectures hosted in the cloud. Internet connectivity permitting, there will be demos too.;Bert Ertman;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Are you still using Docker in production? Get over it! Serverless is the <i>new</i> future of the cloud. Because the cloud is still on someone else's computer, it needs to be managed. And even if it is sitting idle, you probably have to pay for it, whether you like it or not. No-server can be more easily managed than a server. Therefore: meet serverless, a new paradigm that truly approaches the pay-as-you-go philosophy once promised by the cloud. This session explores serverless and its impact on existing architectures and assesses its usability for mobile back ends as a service (MBaaS), functions as a service (FaaS), and microservice-based architectures hosted in the cloud. Internet connectivity permitting, there will be demos too.
1492323705463001YKFt;When Should You Look at GraphQL as an Alternative to REST APIs?;GraphQL is a query language for your data model and offers a runtime for fulfilling queries with existing data. It enables clients to ask for exactly what they need, nothing more or less, and serves requests with appropriate responses. GraphQL queries give you not just the properties of one data model but also smoothly follow references between them. Whereas typical REST APIs require loading from multiple URLs, GraphQL APIs get all the data your app needs in a single request. Apps using GraphQL can be quick even on slow mobile network connections. This session talks about GpaphQL in general and then closely analyzes popular  GraphQL tools and frameworks in Java.;Jobinesh Purushothaman;Emerging Languages;Conference Session;Intermediate;GraphQL is a query language for your data model and offers a runtime for fulfilling queries with existing data. It enables clients to ask for exactly what they need, nothing more or less, and serves requests with appropriate responses. GraphQL queries give you not just the properties of one data model but also smoothly follow references between them. Whereas typical REST APIs require loading from multiple URLs, GraphQL APIs get all the data your app needs in a single request. Apps using GraphQL can be quick even on slow mobile network connections. This session talks about GpaphQL in general and then closely analyzes popular  GraphQL tools and frameworks in Java.
1492138828285001T44F;A RESTful Java Framework for Asynchronous High-Speed Ingest;Thread contention and scheduling are a challenge when thousands of clients (10K and above) attempt to persist data or when tens of thousands of agents send events for high-speed ingest. The incoming payload consists of JSON documents over REST. This session presents a Java framework designed to address such use cases through an asynchronous/nonblocking approach using 10 to 20 threads that asynchronously connect to the database. The session describes the microservice architecture, the key concepts, and a working prototype.;Jean De Lavarene;Java, Cloud, and Server-Side Development;Conference Session;Advanced;Thread contention and scheduling are a challenge when thousands of clients (10K and above) attempt to persist data or when tens of thousands of agents send events for high-speed ingest. The incoming payload consists of JSON documents over REST. This session presents a Java framework designed to address such use cases through an asynchronous/nonblocking approach using 10 to 20 threads that asynchronously connect to the database. The session describes the microservice architecture, the key concepts, and a working prototype.
14924453188840013gnD;Collections.compare:JDK, Eclipse, Guava, Apache...;Collections are a staple in any programming language: the need to collect, sort, or iterate over values is needed by nearly all developers. The Java language introduced the Collections framework long ago. It has plenty to offer, but many find it lacking: the number of collection libraries as active open source projects demonstrates the need for something else. This session does a holistic comparison of the most-common collections (pun intended!) frameworks, what they have to offer, and what you should consider for your next project. It also shows common programmer use cases, how each library handles them, and the impact on memory, processing power, and ease of use/coding.Come and let us help you choose the right bag for your tricks!;Leonardo Lima;Core Java Platform;Conference Session;Introductory;Collections are a staple in any programming language: the need to collect, sort, or iterate over values is needed by nearly all developers. The Java language introduced the Collections framework long ago. It has plenty to offer, but many find it lacking: the number of collection libraries as active open source projects demonstrates the need for something else. This session does a holistic comparison of the most-common collections (pun intended!) frameworks, what they have to offer, and what you should consider for your next project. It also shows common programmer use cases, how each library handles them, and the impact on memory, processing power, and ease of use/coding.Come and let us help you choose the right bag for your tricks!
1492448839234001bvse;Data Science for the Busy Java Developer;Data everywhere, big and small, but we’re all busy grinding various kinds of beans to get the best out of our projects while the world moves toward more and more of a data-driven reality. “Data science” is a hot topic, and although you already know how to move data across the system, let’s take a moment to figure out how to make some sense out of it. This session is a journey through data science, specifically from the perspective of a developer living on the JVM. It explains the concepts and will make you feel at home enough to get started.;Andrzej Grzesik;Java Development Tools;Conference Session;Intermediate;Data everywhere, big and small, but we’re all busy grinding various kinds of beans to get the best out of our projects while the world moves toward more and more of a data-driven reality. “Data science” is a hot topic, and although you already know how to move data across the system, let’s take a moment to figure out how to make some sense out of it. This session is a journey through data science, specifically from the perspective of a developer living on the JVM. It explains the concepts and will make you feel at home enough to get started.
1491153702783001K2K8;MVC 1.0: The @Controller of the Community;The story of JSR 371 is a story of a community stepping up when given the opportunity. MVC 1.0 may not be targeted for the upcoming Java EE 8 release, but the specification is still going on as a standalone specification and will be delivered independently. This presentation tells this story, goes through the fundamentals of the specification, and explains the core concepts. Of course, there will be lots of code samples showing how to use the framework to build MVC 1.0 applications. There will even be a demo of tooling support available. After the session, you will have everything you need for getting started on using the technology to quickly build secure, flexible, localized MVC web applications.;Ivar Grimstad;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;The story of JSR 371 is a story of a community stepping up when given the opportunity. MVC 1.0 may not be targeted for the upcoming Java EE 8 release, but the specification is still going on as a standalone specification and will be delivered independently. This presentation tells this story, goes through the fundamentals of the specification, and explains the core concepts. Of course, there will be lots of code samples showing how to use the framework to build MVC 1.0 applications. There will even be a demo of tooling support available. After the session, you will have everything you need for getting started on using the technology to quickly build secure, flexible, localized MVC web applications.
1492367834262001dF6l;One Application to Rule Them All;There is one omnipresent technology in which to write UIs for all platforms—from desktop to mobile and PC to macOS and Linux—and that is HTML. But HTML is not a real programming language, it is intended as text-with-styling. Using it often frustrates this session’s speaker. Personally he prefers working in an environment that was made for building UIs from the start. Such as JavaFX. But does it really run on all platforms? And how much pain must one endure to get it to actually work? Hello World examples are always so simple. So he has tried to write a real-world—actually used—business application, using vanilla JavaFX and examining available libraries, in order to answer those questions. At the end of the session, you will know the answers.;Tom Eugelink;Java Clients and User Interfaces;Conference Session;Intermediate;There is one omnipresent technology in which to write UIs for all platforms—from desktop to mobile and PC to macOS and Linux—and that is HTML. But HTML is not a real programming language, it is intended as text-with-styling. Using it often frustrates this session’s speaker. Personally he prefers working in an environment that was made for building UIs from the start. Such as JavaFX. But does it really run on all platforms? And how much pain must one endure to get it to actually work? Hello World examples are always so simple. So he has tried to write a real-world—actually used—business application, using vanilla JavaFX and examining available libraries, in order to answer those questions. At the end of the session, you will know the answers.
1492527711126001YF06;Optimizing Java with Linux Perf;In this session, learn how to use Linux Perf, the Swiss Army knife of performance analysis, to gain insights and improve the performance of your Java applications. The presentation shows how to find hot methods and stacktraces with perf-map files and then dives deeper into the code with JIT dumps to analyze the generated assembly code. Finally it looks at using probes/eBPF to introspect the JVM and understand where and when I/O, contention, and other events occur.;Thorvald Natvig;Java Development Tools;Conference Session;Intermediate;In this session, learn how to use Linux Perf, the Swiss Army knife of performance analysis, to gain insights and improve the performance of your Java applications. The presentation shows how to find hot methods and stacktraces with perf-map files and then dives deeper into the code with JIT dumps to analyze the generated assembly code. Finally it looks at using probes/eBPF to introspect the JVM and understand where and when I/O, contention, and other events occur.
1491949911105001dLj1;Portable Database Access for JavaScript Applications, Using Java 8 Nashorn;Server-side JavaScript applications require database access, but the JavaScript/ECMAScript specification does not furnish a standard database access API, preventing the portability of JavaScript applications. Fortunately, Java 8 brings the Nashorn engine, making it possible to run JavaScript on the JVM, including use of the JDBC API. This session describes how to design portable JavaScript applications with JDBC for database access and how to design JavaScript stored procedures when the RDBMS embeds a JVM.;Kuassi Mensah;Java, Cloud, and Server-Side Development;Conference Session;Advanced;Server-side JavaScript applications require database access, but the JavaScript/ECMAScript specification does not furnish a standard database access API, preventing the portability of JavaScript applications. Fortunately, Java 8 brings the Nashorn engine, making it possible to run JavaScript on the JVM, including use of the JDBC API. This session describes how to design portable JavaScript applications with JDBC for database access and how to design JavaScript stored procedures when the RDBMS embeds a JVM.
1492564276546001FSxS;Portlet 3.0 Deep Dive;This presentation provides an in-depth look at the new Portlet 3.0 standard from the JCP. Developers will learn how to create a new portlet from a Maven archetype and start taking advantage of the new features in the Portlet API. They will also learn how to specify resource dependencies, use explicit render state, and use CDI to @Inject beans annotated with new portlet scopes. In addition, they will learn how to create a single-page application (SPA) via the portlet hub JavaScript API and XMLHttpRequest. Finally, they will learn how the Faces Bridge (JSR 378) makes it possible to deploy a JSF web application as a portlet with little to no modification.;Vernon Singleton;Java, Cloud, and Server-Side Development;Conference Session;Advanced;This presentation provides an in-depth look at the new Portlet 3.0 standard from the JCP. Developers will learn how to create a new portlet from a Maven archetype and start taking advantage of the new features in the Portlet API. They will also learn how to specify resource dependencies, use explicit render state, and use CDI to @Inject beans annotated with new portlet scopes. In addition, they will learn how to create a single-page application (SPA) via the portlet hub JavaScript API and XMLHttpRequest. Finally, they will learn how the Faces Bridge (JSR 378) makes it possible to deploy a JSF web application as a portlet with little to no modification.
1491553150494001Z3KJ;Scale Up with Lock-Free Algorithms;Modern back-end systems routinely pack dozens of CPU cores with dozens of gigabytes of memory. The JVM platform provides a unique opportunity to built vertically scalable systems that fully utilize this power by working with large datasets from multiple threads. This session shows how a well-defined Java memory model (JMM), combined with state-of-the-art garbage collection (GC) memory management makes it a prime choice for implementing scalable lock-free data structures and algorithms. You’ll see how you can design and implement your own lock-free algorithms in Java without having to complete a PhD.;Roman Elizarov;Core Java Platform;Conference Session;Advanced;Modern back-end systems routinely pack dozens of CPU cores with dozens of gigabytes of memory. The JVM platform provides a unique opportunity to built vertically scalable systems that fully utilize this power by working with large datasets from multiple threads. This session shows how a well-defined Java memory model (JMM), combined with state-of-the-art garbage collection (GC) memory management makes it a prime choice for implementing scalable lock-free data structures and algorithms. You’ll see how you can design and implement your own lock-free algorithms in Java without having to complete a PhD.
14923813470150013Qo8;Services, Assemble! Apply MVP Principles to Create Microservices Without Chaos;In this session, learn how to use proven patterns and open source software to rapidly build a robust portfolio of microservices that provide a solid foundation for your dynamic and growing microservice architecture. This session addresses vital points such as<br>Additional topics discussed include logging and tracing, testing approaches, and migration patterns. You’ll see a demonstration of how to develop and effectively manage microservices with OSS tools employed by Netflix to keep movies streaming globally 24/7.;Mark Heckler;Java, Cloud, and Server-Side Development;Conference Session;Introductory;In this session, learn how to use proven patterns and open source software to rapidly build a robust portfolio of microservices that provide a solid foundation for your dynamic and growing microservice architecture. This session addresses vital points such as<br>&bull, Configuration services<br>&bull, Microservice registration and discovery<br>&bull, Circuit breakers for graceful degradation<br>&bull, Load balancing and intelligent routing<br>&bull, Asynchronous messaging<br><br>Additional topics discussed include logging and tracing, testing approaches, and migration patterns. You’ll see a demonstration of how to develop and effectively manage microservices with OSS tools employed by Netflix to keep movies streaming globally 24/7.
1491951173811001gmVv;Turning Relational Database Tables into Spark Data Sources;This session presents a Spark data source for joining big data with master data in an RDBMS. It describes how such an implementation<br>&bull, Writes back the result set to the RDBMS table for use by traditional BI tools;Jean De Lavarene;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Advanced;This session presents a Spark data source for joining big data with master data in an RDBMS. It describes how such an implementation<br>&bull, Allows parallel and direct access to the RDBMS database (with the option of controlling the number of concurrent connections)<br>&bull, Introspects the RDBMS table, generates partitions of Spark JDBCRDDs based on the split pattern, and rewrites Spark SQL queries into the RDBMS SQL dialect<br> &bull, Uses hooks in the JDBC driver for faster type conversions<br> &bull, Pushes down predicates to the RDBMS, prunes partitions based on the where clause, and projects columns to the RDBMS to reduce the amount of data returned and processed on Spark<br> &bull, Writes back the result set to the RDBMS table for use by traditional BI tools
1492194075829001Cmtj;Virtual Reality in Java: Is It Possible?;Virtual reality (VR) is one of the most discussed emerging technologies of the past years, especially in 2016, which marked the release of the first consumer VR headsets. The most popular platform for building VR applications is Unity3D, based on .NET. As Java enthusiasts, this session’s speakers went on a challenging adventure to discover the possibilities of coding VR applications in Java. In the session, they dive into the world of VR, giving the attendees a good understanding of how VR works and how they should code for it. Then they discuss whether Java is a feasible platform for VR development. Whatever the outcome, they aim to inspire the attendees to embark on a VR adventure for themselves and make awesome applications.;Alexander Chatzizacharias;Java and Devices;Conference Session;Introductory;Virtual reality (VR) is one of the most discussed emerging technologies of the past years, especially in 2016, which marked the release of the first consumer VR headsets. The most popular platform for building VR applications is Unity3D, based on .NET. As Java enthusiasts, this session’s speakers went on a challenging adventure to discover the possibilities of coding VR applications in Java. In the session, they dive into the world of VR, giving the attendees a good understanding of how VR works and how they should code for it. Then they discuss whether Java is a feasible platform for VR development. Whatever the outcome, they aim to inspire the attendees to embark on a VR adventure for themselves and make awesome applications.
1491327968991001WGOd;Building Real-time Data in Web Applications with Node.js;Real-time data is an increasingly popular topic these days. The basic idea is simple: when data in the database changes, any clients viewing the data should see the changes immediately, in real time. Gmail and Twitter are great examples of applications that make use of real-time data. Users don’t need to refresh the page to see new emails or tweets. Instead, new data is pushed to the clients when it becomes available. In this session, attendees will learn about some of the tools that make real-time applications easier than ever, including Node.js and Socket.IO. Of course, the data must be pushed from somewhere, so the presentation also explores how databases participate in this process.;Dan Mcghan;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Real-time data is an increasingly popular topic these days. The basic idea is simple: when data in the database changes, any clients viewing the data should see the changes immediately, in real time. Gmail and Twitter are great examples of applications that make use of real-time data. Users don’t need to refresh the page to see new emails or tweets. Instead, new data is pushed to the clients when it becomes available. In this session, attendees will learn about some of the tools that make real-time applications easier than ever, including Node.js and Socket.IO. Of course, the data must be pushed from somewhere, so the presentation also explores how databases participate in this process.
14922379128840013EgS;Choreographing Microservices Through Messaging;Orchestrating increasing numbers of microservices can be challenging. DreamWorks Animation created a real-time multiprotocol messaging system called Paperboy that is capable of routing and transmitting millions of messages per minute to assist the digital animation production process. Paperboy is built with JVM-powered technologies including Java-based microservices, Kafka, Akka, and Cassandra and is deployable via Docker and Kubernetes. This session covers the evolution of Paperboy from a monolithic POC to a fully choreographed, cloud-deployed microservices ecosystem. It includes a demonstration of what went well, what didn’t, and how Paperboy enabled the orchestration of other microservices-based solutions within the studio.;Doug Sherman;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Orchestrating increasing numbers of microservices can be challenging. DreamWorks Animation created a real-time multiprotocol messaging system called Paperboy that is capable of routing and transmitting millions of messages per minute to assist the digital animation production process. Paperboy is built with JVM-powered technologies including Java-based microservices, Kafka, Akka, and Cassandra and is deployable via Docker and Kubernetes. This session covers the evolution of Paperboy from a monolithic POC to a fully choreographed, cloud-deployed microservices ecosystem. It includes a demonstration of what went well, what didn’t, and how Paperboy enabled the orchestration of other microservices-based solutions within the studio.
1492380093159001dhys;Clouds and Containers: Straight Up, What’s the Difference and Why Should I Care?;Numerous options for containerization, orchestration tools (Docker Swarm mode, Kubernetes, Mesos), and cloud services (Cloud Foundry, Amazon, Azure, GCP) vie for our attention and implementations every day. In many cases, these compete with or overlap with each other, and although it’s good to have so many good choices available, it can be a bit overwhelming. This session discusses several of these technologies, compares them, and deploys real applications to them <i>live</i> to demonstrate subtle differences and trade-offs each choice imposes on developers, for better or worse. Seeing is believing. Lively follow-on discussions are guaranteed!;Mark Heckler;Java, Cloud, and Server-Side Development;Conference Session;Introductory;Numerous options for containerization, orchestration tools (Docker Swarm mode, Kubernetes, Mesos), and cloud services (Cloud Foundry, Amazon, Azure, GCP) vie for our attention and implementations every day. In many cases, these compete with or overlap with each other, and although it’s good to have so many good choices available, it can be a bit overwhelming. This session discusses several of these technologies, compares them, and deploys real applications to them <i>live</i> to demonstrate subtle differences and trade-offs each choice imposes on developers, for better or worse. Seeing is believing. Lively follow-on discussions are guaranteed!
1491906267721001Mxye;Container: Check! But What About Persistent Data, Big Data, and Fast Data?!;Mesosphere used to migrate its applications to containers to isolate the applications and make them easily shippable. But now the company is struggling to run stateful applications to make them scalable and fault-tolerant. And it runs its big data and fast data frameworks in separate clusters, because it is not super easy to integrate them into the current container stack. This means that Mesophere’s cluster utilization is not optimal and scaling affects comprehensive containers and big data frameworks. This session looks at current container usage, shows the actual problematics, and discusses how DC/OS and Apache Mesos deliver “Container 2.0.”;Johannes Unterstein;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Mesosphere used to migrate its applications to containers to isolate the applications and make them easily shippable. But now the company is struggling to run stateful applications to make them scalable and fault-tolerant. And it runs its big data and fast data frameworks in separate clusters, because it is not super easy to integrate them into the current container stack. This means that Mesophere’s cluster utilization is not optimal and scaling affects comprehensive containers and big data frameworks. This session looks at current container usage, shows the actual problematics, and discusses how DC/OS and Apache Mesos deliver “Container 2.0.”
1491405994585001pR0x;Coroutines on JVM with Kotlin;We live in an asynchronous era of concurrency. Modern front-end and mobile applications provide real-time feedback and communication, and server-side applications and services handle thousands of online users while integrating dozens of microservices. Kotlin is a modern and pragmatic JVM language developed by JetBrains, with a strong emphasis on Java interoperability. Kotlin introduced coroutines as a first-class language feature. This session presents a gentle introduction to the world of Kotlin coroutines, with live examples. You'll see how you can write scalable applications with Kotlin coroutines to handle lots of concurrent actions (connections, users, conversations, animations, and so on) at once.;Roman Elizarov;Emerging Languages;Conference Session;Introductory;We live in an asynchronous era of concurrency. Modern front-end and mobile applications provide real-time feedback and communication, and server-side applications and services handle thousands of online users while integrating dozens of microservices. Kotlin is a modern and pragmatic JVM language developed by JetBrains, with a strong emphasis on Java interoperability. Kotlin introduced coroutines as a first-class language feature. This session presents a gentle introduction to the world of Kotlin coroutines, with live examples. You'll see how you can write scalable applications with Kotlin coroutines to handle lots of concurrent actions (connections, users, conversations, animations, and so on) at once.
1492033448893001dyzY;Demystifying Microservices for Java EE Developers;This session presents an introduction to Java EE microservices for Java EE developers. It answers questions such as What are microservices? Can Java EE be used to develop microservices? Isn't Java EE too heavy for microservices? Can Java EE developers leverage their expertise when developing microservices? It covers various Java EE approaches for microservices development, such as the MicroProfile initiative and upcoming features in Java EE 8 and 9.;David Heffelfinger;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;This session presents an introduction to Java EE microservices for Java EE developers. It answers questions such as What are microservices? Can Java EE be used to develop microservices? Isn't Java EE too heavy for microservices? Can Java EE developers leverage their expertise when developing microservices? It covers various Java EE approaches for microservices development, such as the MicroProfile initiative and upcoming features in Java EE 8 and 9.
1492394106188001bcbW;End-to-End Kotlin in a Java Enterprise;Java has undoubtedly come a long way and has served businesses well. Part of what makes Java great is its outstanding backward compatibility. This, however, comes at a cost, a cost that partly necessitated the emergence of new languages targeting the same battle-tested JVM platform. This session’s speakers discuss their journey in a Java enterprise from standard Java to Kotlin—the motivations, the gains, and the gotchas. They address practical concerns such as build times, footprints, testing support, framework support, tooling support, and typical issues faced in 100% Kotlin as well as mixed-source projects. They approach this discussion from two production perspectives: a Java EE project (back end) and a native Android project (front end).;Sayo Oladeji;Emerging Languages;Conference Session;Introductory;Java has undoubtedly come a long way and has served businesses well. Part of what makes Java great is its outstanding backward compatibility. This, however, comes at a cost, a cost that partly necessitated the emergence of new languages targeting the same battle-tested JVM platform. This session’s speakers discuss their journey in a Java enterprise from standard Java to Kotlin—the motivations, the gains, and the gotchas. They address practical concerns such as build times, footprints, testing support, framework support, tooling support, and typical issues faced in 100% Kotlin as well as mixed-source projects. They approach this discussion from two production perspectives: a Java EE project (back end) and a native Android project (front end).
1492381871412001FnW4;Going Reactive with Spring 5 and Project Reactor;Spring 5 is here! One of the most exciting introductions in this release is support for reactive programming, building on Project Reactor to support message-driven, elastic, resilient, and responsive services. Spring 5 integrates an MVC-like component model adapted to support reactive processing and a new type of web endpoint: functional reactive endpoints. This session dives into the net-new Netty-based web runtime and shows how to integrate it with existing Spring-stack technologies and leverage powerful new testing mechanisms to make code better and life easier, and it ties it all together with a live coding demo. If there's more to your life than CRUD, you need to be there.;Mark Heckler;Java, Cloud, and Server-Side Development;Conference Session;Introductory;Spring 5 is here! One of the most exciting introductions in this release is support for reactive programming, building on Project Reactor to support message-driven, elastic, resilient, and responsive services. Spring 5 integrates an MVC-like component model adapted to support reactive processing and a new type of web endpoint: functional reactive endpoints. This session dives into the net-new Netty-based web runtime and shows how to integrate it with existing Spring-stack technologies and leverage powerful new testing mechanisms to make code better and life easier, and it ties it all together with a live coding demo. If there's more to your life than CRUD, you need to be there.
1492158524778001CuIB;Java EE Postmodernism;Postmodernism articulates that the world is in a state of perpetual incompleteness and permanent unresolve. Enterprise Java specs move slowly, and many alternatives exist around our ecosystem. Java EE developers have over the years been mocked by many: Spring, Ruby, Scala, Node, and lately microservices. We’ve seen ’em come, and no doubt we’ll see ’em go. Still, enterprise Java is going strong in many places. This session takes a look at how different stacks and solutions affect the life of enterprise Java development today, whether they are perceived as good or bad, and how enterprise Java development is evolving and adjusting to the new normal in a postmodern world. ;Bert Ertman;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Postmodernism articulates that the world is in a state of perpetual incompleteness and permanent unresolve. Enterprise Java specs move slowly, and many alternatives exist around our ecosystem. Java EE developers have over the years been mocked by many: Spring, Ruby, Scala, Node, and lately microservices. We’ve seen ’em come, and no doubt we’ll see ’em go. Still, enterprise Java is going strong in many places. This session takes a look at how different stacks and solutions affect the life of enterprise Java development today, whether they are perceived as good or bad, and how enterprise Java development is evolving and adjusting to the new normal in a postmodern world. 
1492452130956001YXlR;JDK9 Through the Command Line;JDK9 will introduce several changes to the /bin directory, some tools will go away, and some new ones will arrive. This session starts enumerating these changes and explaining what the current best alternative is, what migration strategy one might take and, most importantly, what the long-awaited benefits of moving toward the latest JDK are in terms of monitoring and insight.;Andrzej Grzesik;Java Development Tools;Conference Session;Introductory;JDK9 will introduce several changes to the /bin directory, some tools will go away, and some new ones will arrive. This session starts enumerating these changes and explaining what the current best alternative is, what migration strategy one might take and, most importantly, what the long-awaited benefits of moving toward the latest JDK are in terms of monitoring and insight.
1492114251697001CJ3b;Managing Consistency, State, and Identity in Distributed Microservices;Building distributed Java applications is markedly different from traditional monlithic design. In this new modular landscape, we face many challenges: parallelism, asynchronous boundaries, state management, identity management, and consistency deficiencies, to name a few. Of all these problems, consistency, state management, and identity management can be particularly challenging. This session discusses the ins and outs of dealing with modular JVM-based application consistency, distributed state, and identity coherence with techniques such as idempotency, eventual and casual consistency, the CAP theorem, single source of truth, and distributed domain design.;Duncan DeVore;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Building distributed Java applications is markedly different from traditional monlithic design. In this new modular landscape, we face many challenges: parallelism, asynchronous boundaries, state management, identity management, and consistency deficiencies, to name a few. Of all these problems, consistency, state management, and identity management can be particularly challenging. This session discusses the ins and outs of dealing with modular JVM-based application consistency, distributed state, and identity coherence with techniques such as idempotency, eventual and casual consistency, the CAP theorem, single source of truth, and distributed domain design.
1491918105735001tMSd;Modules or Microservices?;Microservices promise a scalable architecture and increased flexibility. Then you find out that running a microservices-based architecture is not that straightforward after all. The popular debate is often framed in a false dichotomy between the messy monolith and the lean microservices architecture. In this session, you’ll see there’s a third way: the modularized application. The presentation explores what the right (and wrong) reasons are for going with a microservices architecture and also what the alternative of a modularized app (for example, with Java 9) entails. Splitting an existing app into microservices isn't always the clear winner. There’s a place for both microservices and larger applications with a strong internal modular structure. Choose wisely!;Sander Mak;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;Microservices promise a scalable architecture and increased flexibility. Then you find out that running a microservices-based architecture is not that straightforward after all. The popular debate is often framed in a false dichotomy between the messy monolith and the lean microservices architecture. In this session, you’ll see there’s a third way: the modularized application. The presentation explores what the right (and wrong) reasons are for going with a microservices architecture and also what the alternative of a modularized app (for example, with Java 9) entails. Splitting an existing app into microservices isn't always the clear winner. There’s a place for both microservices and larger applications with a strong internal modular structure. Choose wisely!
14924905343680013Xgr;Panel: Accelerating the Adoption of Java EE 8 with MicroProfile;This session is a panel discussion in which Java EE and MicroProfile community members discuss how they think Eclipse MicroProfile can accelerate the adoption of Java EE 8. Java EE as an industry standard provides a stable, mature foundation for server-side Java development. MicroProfile is leveraging Java EE technologies as it innovates with specifications and frameworks that implement microservices programming patterns. The goal of MicroProfile is to rapidly iterate these frameworks in open source, put them into developers’ hands today for use with their Java EE applications, and accelerate the path toward standardization. Discussions also include recent MicroProfile advancements and a roadmap.;Kevin Sutter;Java, Cloud, and Server-Side Development;Conference Session;Advanced;This session is a panel discussion in which Java EE and MicroProfile community members discuss how they think Eclipse MicroProfile can accelerate the adoption of Java EE 8. Java EE as an industry standard provides a stable, mature foundation for server-side Java development. MicroProfile is leveraging Java EE technologies as it innovates with specifications and frameworks that implement microservices programming patterns. The goal of MicroProfile is to rapidly iterate these frameworks in open source, put them into developers’ hands today for use with their Java EE applications, and accelerate the path toward standardization. Discussions also include recent MicroProfile advancements and a roadmap.
1494302754146001OwtG;Delivering Better Code Faster with Spock;The Spock framework is the logical choice for testing your Java code, whether it's unit test, integration test, or user acceptance tests. It provides the structure needed to make tests easier to create, maintain, and understand, which means that more tests will be written and maintained. Moreover, Spock supports behavior-driven development (big brother to TDD), and the living documentation it creates makes it easier for new developers to get up to speed on existing projects. Learn more in this session.;Burk Hufnagel;Java Development Tools;Conference Session;Intermediate;The Spock framework is the logical choice for testing your Java code, whether it's unit test, integration test, or user acceptance tests. It provides the structure needed to make tests easier to create, maintain, and understand, which means that more tests will be written and maintained. Moreover, Spock supports behavior-driven development (big brother to TDD), and the living documentation it creates makes it easier for new developers to get up to speed on existing projects. Learn more in this session.
14941324336960015ykO;Emerging Languages Bowl 2017: The Growth Spurt Continues;The panelists in this session continue the quest for a winner of the emerging languages bowl, which has replaced the former script bowl. Some JVM-based languages from previous years—Frege, Golo, Kotlin, Mirah, and Red Line—and new languages such as eta and Lux go through the following two rounds of heavy combat.<br>The audience will pick the winner and will leave the fun-filled and unique panel session with an idea of which language might be the most relevant to their needs.;Dierk Koenig;Emerging Languages;Conference Session;Intermediate;The panelists in this session continue the quest for a winner of the emerging languages bowl, which has replaced the former script bowl. Some JVM-based languages from previous years—Frege, Golo, Kotlin, Mirah, and Red Line—and new languages such as eta and Lux go through the following two rounds of heavy combat.<br>• A common task round<br>• A community round<br>The audience will pick the winner and will leave the fun-filled and unique panel session with an idea of which language might be the most relevant to their needs.
1494113684659001U6t3;Immutable Collections;This session discusses immutable collections, specifically those called persistent collections, commonly used in JVM languages such as Scala and Clojure and more recently introduced in the Java functional library vavr. The presentation explains the fundamental structure of persistent collections, analyzes their pros and cons, and assesses their performance. It also evaluates persistent collections to see how they might integrate with existing APIs in the Java platform. At the end of the session, you should have a good idea of how persistent collections work and whether they are a good solution for your needs.;Paul Sandoz;Core Java Platform;Conference Session;Intermediate;This session discusses immutable collections, specifically those called persistent collections, commonly used in JVM languages such as Scala and Clojure and more recently introduced in the Java functional library vavr. The presentation explains the fundamental structure of persistent collections, analyzes their pros and cons, and assesses their performance. It also evaluates persistent collections to see how they might integrate with existing APIs in the Java platform. At the end of the session, you should have a good idea of how persistent collections work and whether they are a good solution for your needs.
14940673784130015zSD;Java Versus JavaScript for the Enterprise?;JavaScript is the native language of the browser, and the browser is everywhere. How do we deal with this brave new world? This session explains how the challenges of the enterprise are being solved via a range of Java technologies and introduces a range of free and open source JavaScript-related technologies and tools used throughout Oracle for handling enterprise-level requirements.;Geertjan Wielenga;Java Development Tools;Conference Session;Introductory;JavaScript is the native language of the browser, and the browser is everywhere. How do we deal with this brave new world? This session explains how the challenges of the enterprise are being solved via a range of Java technologies and introduces a range of free and open source JavaScript-related technologies and tools used throughout Oracle for handling enterprise-level requirements.
14941423733230015vtf;Makers of the Oracle CodeLounge;The Oracle Code Lounge is full of technology demos, ranging from CNC routers to 3D printers to robots and machine learning. All of these projects are community-driven, written with open source technologies, and powered by Oracle Cloud. In this session, find out from the makers who built these demos how they demo were made and what interesting technology challenges were overcome.;Stephen Chin;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;The Oracle Code Lounge is full of technology demos, ranging from CNC routers to 3D printers to robots and machine learning. All of these projects are community-driven, written with open source technologies, and powered by Oracle Cloud. In this session, find out from the makers who built these demos how they demo were made and what interesting technology challenges were overcome.
14942518320930015Ry8;Meet Apache NetBeans;Over the past several months, NetBeans has been moving to Apache. The cutting-edge development tool for Java, JavaScript, and much more is an Apache project! In this panel session, find out about the latest developments from NetBeans community leaders and learn how to get involved yourself.;Georgia Ingham;Developer Community Day: NetBeans;Conference Session;Introductory;Over the past several months, NetBeans has been moving to Apache. The cutting-edge development tool for Java, JavaScript, and much more is an Apache project! In this panel session, find out about the latest developments from NetBeans community leaders and learn how to get involved yourself.
14941999807250015CWB;Migrating to Modules;The introductory session “Modules in One Lesson” assumed an ideal world in which applications are constructed solely from modules, but that is not the world in which we live today. How do we get there from here? This session involves live coding of a simple Java 8 application that uses some popular libraries and then modularizing it with Java 9. You’ll see how Project Jigsaw and the Java Platform Module System give you the ability to migrate to modules at your own pace, even if the libraries upon which you depend have not yet been modularized.;Mark Reinhold;Core Java Platform;Conference Session;Intermediate;The introductory session “Modules in One Lesson” assumed an ideal world in which applications are constructed solely from modules, but that is not the world in which we live today. How do we get there from here? This session involves live coding of a simple Java 8 application that uses some popular libraries and then modularizing it with Java 9. You’ll see how Project Jigsaw and the Java Platform Module System give you the ability to migrate to modules at your own pace, even if the libraries upon which you depend have not yet been modularized.
1494108604269001Tmjt;Productive and Effective Development with Spring and Java EE;This live coding session shines some light on a range of productivity tools that make software development a pleasure rather than a chore. The presenter live-codes two applications. The first, a Java EE application with JBoss Forge that uses JPA, Bean Validation, REST, and Angular, is tested with Arquillian from within JBoss Forge. You’ll see how a Java EE microservice can be developed in Forge and run with JBoss Swarm. The second application is developed on Spring Boot, and you’ll see how to develop and run a Spring application with JRebel. You’ll learn how to write code productively with tools designed for developers.;Simon Maple;Java Development Tools;Conference Session;Introductory;This live coding session shines some light on a range of productivity tools that make software development a pleasure rather than a chore. The presenter live-codes two applications. The first, a Java EE application with JBoss Forge that uses JPA, Bean Validation, REST, and Angular, is tested with Arquillian from within JBoss Forge. You’ll see how a Java EE microservice can be developed in Forge and run with JBoss Swarm. The second application is developed on Spring Boot, and you’ll see how to develop and run a Spring application with JRebel. You’ll learn how to write code productively with tools designed for developers.
1494180295603001UAyV;Shenandoah 2.0: Now That We’ve Gotten the GC Pause Times Under Control, What’s Next?;Shenandoah is in OpenJDK 8 and 9 in Fedora and RHEL, and Red Hat hopes to have it accepted upstream in JDK 10. With the pause-time goals met, there is still more to do. Generational GC improves performance for programs with many short-lived objects, by collecting only the young part of the heap, but that technique pessimizes performance for least recently used (LRU) applications such as web caches. This session explores an alternative that makes it possible to perform partial collections of any regions. You can use generational heuristics to collect young regions, LRU heuristics for old regions, or adaptive heuristics that choose regions based on previous application behavior. Come to this session for a deep dive into the implementation of Shenandoah 2.0.;Christine Flood;Core Java Platform;Conference Session;Advanced;Shenandoah is in OpenJDK 8 and 9 in Fedora and RHEL, and Red Hat hopes to have it accepted upstream in JDK 10. With the pause-time goals met, there is still more to do. Generational GC improves performance for programs with many short-lived objects, by collecting only the young part of the heap, but that technique pessimizes performance for least recently used (LRU) applications such as web caches. This session explores an alternative that makes it possible to perform partial collections of any regions. You can use generational heuristics to collect young regions, LRU heuristics for old regions, or adaptive heuristics that choose regions based on previous application behavior. Come to this session for a deep dive into the implementation of Shenandoah 2.0.
14942327564820015ouy;Super Duke Land;Over the last few years, several new UI toolkits and framework have been developed. Some common basics are always the same, but the rendering engines of these toolkits have different features and use completely different approaches for rendering. To really understand the benefits and pitfalls of the toolkits and engines, you need to know how the different rendering approaches work internally. This can be a very complex topic, so this session’s speakers give you insight into this area with a new and funny approach. Using a custom Java-based game engine instead of several boring business applications, they show the difference between the rendering types and present an overview of the pros and cons. So if you ever want to see a Java-based Duke platformer, don’t miss this session.;Hendrik Ebbers;Java Clients and User Interfaces;Conference Session;Intermediate;Over the last few years, several new UI toolkits and framework have been developed. Some common basics are always the same, but the rendering engines of these toolkits have different features and use completely different approaches for rendering. To really understand the benefits and pitfalls of the toolkits and engines, you need to know how the different rendering approaches work internally. This can be a very complex topic, so this session’s speakers give you insight into this area with a new and funny approach. Using a custom Java-based game engine instead of several boring business applications, they show the difference between the rendering types and present an overview of the pros and cons. So if you ever want to see a Java-based Duke platformer, don’t miss this session.
14941662383780015Fe1;What If Everything Were a Database?;Creating software is hard and unnecessarily complex. This session discusses Eve, a programming language that lowers the complexity of software development by treating everything as a record you read and write. Eve makes some interesting design choices, the most prominent of which are reactive blocks of code, making the whole platform reactive and transparent for introspection. Come take a look at Eve, the platform and the language. The presentation covers how treating everything as a record enables Eve to be a declarative programming language and how it provides an alternative solution for the typical use cases in software development.;Oleg Shelajev;Emerging Languages;Conference Session;Advanced;Creating software is hard and unnecessarily complex. This session discusses Eve, a programming language that lowers the complexity of software development by treating everything as a record you read and write. Eve makes some interesting design choices, the most prominent of which are reactive blocks of code, making the whole platform reactive and transparent for introspection. Come take a look at Eve, the platform and the language. The presentation covers how treating everything as a record enables Eve to be a declarative programming language and how it provides an alternative solution for the typical use cases in software development.
1494231341238001TX1y;You Are Not Cut Out to Be a Java Contractor;So you want to be an indepenendent contractor in the Java space. What does it mean to be a Java contractor? What qualifications do you need? What do you need to look for when becoming a contractor? Should you pay for tools or not? This is a session on guidance, including “clean code,” not necessarily all technical. It covers the following:<br>;Peter Pilgrim;Developer Community Day: Community;Conference Session;Introductory;So you want to be an indepenendent contractor in the Java space. What does it mean to be a Java contractor? What qualifications do you need? What do you need to look for when becoming a contractor? Should you pay for tools or not? This is a session on guidance, including “clean code,” not necessarily all technical. It covers the following:<br>&bull, Attitude, responsibility, behavior at work<br>&bull, Training<br> &bull, Security clearance, based on real-world experience<br>&bull, Umbrella company versus limited company (Ltd.) and the equivalent in the US
14942651564950015BRE;You Deserve Great Tools: Play on Gradle and the Midtier Behind linkedin.com;linkedin.com is built with EmberJS, but under the bonnet, there are midtier services built with Play Framework, coded predominantly in Java 8 with a minimum amount of Scala code. Most Play apps in the world are developed, tested, and built with SBT, the standard Scala automation tool. LinkedIn is (finally!) using Gradle and Java to drive its production Play apps. Attend this session to learn how LinkedIn significantly improved developer productivity by switching from SBT to Gradle. It believes that it is the first enterprise to develop massive production Play applications with Java 8 and Gradle instead of the traditional Scala and SBT.;Szczepan Faber;Emerging Languages;Conference Session;Intermediate;linkedin.com is built with EmberJS, but under the bonnet, there are midtier services built with Play Framework, coded predominantly in Java 8 with a minimum amount of Scala code. Most Play apps in the world are developed, tested, and built with SBT, the standard Scala automation tool. LinkedIn is (finally!) using Gradle and Java to drive its production Play apps. Attend this session to learn how LinkedIn significantly improved developer productivity by switching from SBT to Gradle. It believes that it is the first enterprise to develop massive production Play applications with Java 8 and Gradle instead of the traditional Scala and SBT.
14941997951280015asu;Ask the JDK Architects;Bring your favorite questions about Java SE and the Java Development Kit—past, present, or future—to this open Q&A session with key architects from Oracle’s Java team.;Mark Reinhold;Core Java Platform;Conference Session;Intermediate;Bring your favorite questions about Java SE and the Java Development Kit—past, present, or future—to this open Q&A session with key architects from Oracle’s Java team.
149422153461700153Q5;Deconstructing and Evolving REST Security;The learning curve for security is severe and unforgiving. Specifications promise infinite flexibility, habitually give old concepts new names, offer endless extensions, and almost seem designed to deliberately confuse. With an eye on architecturual impact, actual HTTP messages, and aggressive distaste for fancy terminology, this session delves into OAuth 2.0 as it pertains to REST and shows how it falls into two camps: stateful and stateless. It then explores a competing Amazon-style approach called HTTP Signatures, ideal for B2B APIs. Finally, it discusses a new internet draft launched this year that combines them both into the perfect two-factor system that could provide a one-stop shop for business as well as mobile REST scenarios.;David Blevins;Java, Cloud, and Server-Side Development;Conference Session;Introductory;The learning curve for security is severe and unforgiving. Specifications promise infinite flexibility, habitually give old concepts new names, offer endless extensions, and almost seem designed to deliberately confuse. With an eye on architecturual impact, actual HTTP messages, and aggressive distaste for fancy terminology, this session delves into OAuth 2.0 as it pertains to REST and shows how it falls into two camps: stateful and stateless. It then explores a competing Amazon-style approach called HTTP Signatures, ideal for B2B APIs. Finally, it discusses a new internet draft launched this year that combines them both into the perfect two-factor system that could provide a one-stop shop for business as well as mobile REST scenarios.
1494175084313001Titn;How to Use Java Cryptography API Securely ;Are you overwhelmed by the overabundance of choices provided by the Java Cryptography API when choosing an encryption algorithm? Are you on top of all the latest happenings in cryptographic communities and know which cryptographic primitives can be broken and how? Due to time constraints, do you find yourself copy/pasting from the internet, hoping and praying that it’s secured? If any of your answers are “yes,” come to this session. It goes over all cryptographic primitive: RNGs, encryption/decryption algorithms, HMACs, and so on. The presentation points out areas that require careful attention, helps you make correct algorithmic and keying material choices, and provides plenty of code examples showing correct and incorrect usages.;Mansi Sheth;Core Java Platform;Conference Session;Intermediate;Are you overwhelmed by the overabundance of choices provided by the Java Cryptography API when choosing an encryption algorithm? Are you on top of all the latest happenings in cryptographic communities and know which cryptographic primitives can be broken and how? Due to time constraints, do you find yourself copy/pasting from the internet, hoping and praying that it’s secured? If any of your answers are “yes,” come to this session. It goes over all cryptographic primitive: RNGs, encryption/decryption algorithms, HMACs, and so on. The presentation points out areas that require careful attention, helps you make correct algorithmic and keying material choices, and provides plenty of code examples showing correct and incorrect usages.
1495219070020001yZuY;JavaScript Libraries: Which Ones for Your Project?;The JavaScript ecosystem is characterized by innovation and change. New JavaScript libraries appear all the time. How do you choose which JavaScript libraries to incorporate into your enterprise application architecture? Is it always the right approach to adopt the latest and newest solutions, and what are the criteria to use when evaluating new tools and technologies? This session attempts to make sense of the JavaScript ecosystem. Libraries and frameworks such as Angular, Backbone, Oracle JavaScript Extension Toolkit (Oracle JET), and many more are included, and you will also see a range of demos and live coding. Come with your questions, and let’s discuss your JavaScript needs and how to solve them most effectively.;Geertjan Wielenga;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;The JavaScript ecosystem is characterized by innovation and change. New JavaScript libraries appear all the time. How do you choose which JavaScript libraries to incorporate into your enterprise application architecture? Is it always the right approach to adopt the latest and newest solutions, and what are the criteria to use when evaluating new tools and technologies? This session attempts to make sense of the JavaScript ecosystem. Libraries and frameworks such as Angular, Backbone, Oracle JavaScript Extension Toolkit (Oracle JET), and many more are included, and you will also see a range of demos and live coding. Come with your questions, and let’s discuss your JavaScript needs and how to solve them most effectively.
1494093025680001UdjW;Java Test Automation for REST, Web, and Mobile;Unit tests: check. But do you cover the other types of test in your project? Learn how to automate tests, increase test coverage, and smash bugs before they reach production. In this totally hands-on session, you’ll watch a live demo that uses a sample Java EE application with a REST endpoint, with automation of the tests for the service and UI layers (web and mobile). Come check out how tools such as RestAssured, for REST, Selenium WebDriver, for the web, and Appium, for mobile, can raise your testing skills to a higher level.;Edson Yanaga;Java Development Tools;Conference Session;Intermediate;Unit tests: check. But do you cover the other types of test in your project? Learn how to automate tests, increase test coverage, and smash bugs before they reach production. In this totally hands-on session, you’ll watch a live demo that uses a sample Java EE application with a REST endpoint, with automation of the tests for the service and UI layers (web and mobile). Come check out how tools such as RestAssured, for REST, Selenium WebDriver, for the web, and Appium, for mobile, can raise your testing skills to a higher level.
1494082615410001T3OT;Monitoring JVMs in the Cloud with Thermostat;Thermostat is a monitoring and profiling tool for JVMs designed for production environments with distributed systems. Java applications now see deployment in cloud environments via containers on systems such as Kubernetes or Openshift. Thermostat has been redeveloped with the ability to monitor and profile these applications. In this session, you will see how Thermostat has tackled the task of monitoring and profiling containerized Java applications running on Openshift. A demo showcases how Thermostat can be used to diagnose JVM performance.;Jie Kang;Java Development Tools;Conference Session;Introductory;Thermostat is a monitoring and profiling tool for JVMs designed for production environments with distributed systems. Java applications now see deployment in cloud environments via containers on systems such as Kubernetes or Openshift. Thermostat has been redeveloped with the ability to monitor and profile these applications. In this session, you will see how Thermostat has tackled the task of monitoring and profiling containerized Java applications running on Openshift. A demo showcases how Thermostat can be used to diagnose JVM performance.
14940155799020015ajE;Operationalizing Machine Learning into “Predictive” Enterprise Applications;Most data science projects begin with data, “tools,” and scripts but fail to get beyond the data scientist. They hit a wall when attempting to “operationalize” the models. Netflix never implemented the algorithm that won the Netflix $1 Million Challenge. This dichotomy between enterprise and algorithms is eliminated when algorithms are built into the data management platforms. By “moving algorithms to the data,” Oracle Database and Oracle Big Data Cloud Service are now data management and advanced analytical platforms. Developers use SQL, R, and the Oracle Data Miner UI to build, evaluate, and deploy advanced analytical methodologies.  In this session, see how to go beyond “tools” to applications. The presentation shows several Oracle “predictive” applications as examples.;Charlie Berger;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Most data science projects begin with data, “tools,” and scripts but fail to get beyond the data scientist. They hit a wall when attempting to “operationalize” the models. Netflix never implemented the algorithm that won the Netflix $1 Million Challenge. This dichotomy between enterprise and algorithms is eliminated when algorithms are built into the data management platforms. By “moving algorithms to the data,” Oracle Database and Oracle Big Data Cloud Service are now data management and advanced analytical platforms. Developers use SQL, R, and the Oracle Data Miner UI to build, evaluate, and deploy advanced analytical methodologies.  In this session, see how to go beyond “tools” to applications. The presentation shows several Oracle “predictive” applications as examples.
1494168910792001T9J3;Performance Pipeline and Java Performance Tools;This session describes the performance pipeline, a concept of mapping performance-related work and activities toward the stages of a software delivery pipeline. The main idea behind the performance pipeline is being aware of the performance of your application and that taking steps not to introduce performance regressions is a continuous process. The presentation lists and explores the existing Java performance tools and when to apply them: profilers (general-purpose and problem-specific), micro/macro-benchmarks, memory leak analyzers, APM tools, load test libraries, and more. In the end, you’ll use the right tools and test performance proactively rather than solve problems your users report to you after the fact.;Simon Maple;Java Development Tools;Conference Session;Intermediate;This session describes the performance pipeline, a concept of mapping performance-related work and activities toward the stages of a software delivery pipeline. The main idea behind the performance pipeline is being aware of the performance of your application and that taking steps not to introduce performance regressions is a continuous process. The presentation lists and explores the existing Java performance tools and when to apply them: profilers (general-purpose and problem-specific), micro/macro-benchmarks, memory leak analyzers, APM tools, load test libraries, and more. In the end, you’ll use the right tools and test performance proactively rather than solve problems your users report to you after the fact.
1494100964697001UMOJ;Prepare for JDK 9;The modularization of the Java SE Platform in JDK 9 brings many benefits but also many changes. Existing code that uses only official Java SE Platform APIs and supported JDK-specific APIs should continue to work without change. Code that uses certain deprecated features or any JDK-internal APIs is likely to break, however. This session shows you how to prepare existing code for JDK 9 and takes a look at new features designed to help migration, such as JDK versioning, multirelease JARs, and enhanced deprecation.;Alan Bateman;Core Java Platform;Conference Session;Introductory;The modularization of the Java SE Platform in JDK 9 brings many benefits but also many changes. Existing code that uses only official Java SE Platform APIs and supported JDK-specific APIs should continue to work without change. Code that uses certain deprecated features or any JDK-internal APIs is likely to break, however. This session shows you how to prepare existing code for JDK 9 and takes a look at new features designed to help migration, such as JDK versioning, multirelease JARs, and enhanced deprecation.
1496697013696001itp1;Simplifying and Optimizing Your DevOps Development and Deployment with Graal;Use the right language for the task at hand. Don’t be limited by corporate requirements that were created 5, 10, or 25 years ago. Find out how Oracle’s innovative new Project Graal can unshackle your DevOps teams. Hear how Graal simplifies development for developers, enables you to use the right tool for the job, makes operations simpler for administrators, increases application performance, and is open source so you can innovate down to the virtual machine.;Eric Sedlar;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Use the right language for the task at hand. Don’t be limited by corporate requirements that were created 5, 10, or 25 years ago. Find out how Oracle’s innovative new Project Graal can unshackle your DevOps teams. Hear how Graal simplifies development for developers, enables you to use the right tool for the job, makes operations simpler for administrators, increases application performance, and is open source so you can innovate down to the virtual machine.
1494284647089001OXOy;The Part They Don’t Tell You About Microservices;You invest your time and effort breaking up that monolithic Frankenstein into a suite of elegant composable microservices, you containerize them, and you deploy them somewhere in the cloud. Then you proudly watch it all come together, reaping the benefits of the most scalable of all modern architectures. It’s all fine and dandy from this point on. Too good to be true? Of course it is! This session is about the part of the story they don’t tell you: what to do when you wake up to find yourself in the weeds diagnosing that first bug and tracing calls through the convoluted web of microservices. With demos and code snippets, the presentation introduces must-have tools for monitoring the infrastructure, container, system, service levels, and much more. ;Muktesh Mishra;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;You invest your time and effort breaking up that monolithic Frankenstein into a suite of elegant composable microservices, you containerize them, and you deploy them somewhere in the cloud. Then you proudly watch it all come together, reaping the benefits of the most scalable of all modern architectures. It’s all fine and dandy from this point on. Too good to be true? Of course it is! This session is about the part of the story they don’t tell you: what to do when you wake up to find yourself in the weeds diagnosing that first bug and tracing calls through the convoluted web of microservices. With demos and code snippets, the presentation introduces must-have tools for monitoring the infrastructure, container, system, service levels, and much more. 
1496769213248001magT;The Road to Contributing to the Java Technology Community by Developing a Tool;The Java technologies are so diverse that you may hesitate to contribute, especially if you are a non-English speaker. Developing a tool can be a good way to participate in the Java community. We developed HeapStats, an open-source lightweight JVM monitoring tool for Java heap and GC status. We shared it with local Java user group members, who use the tool to improve performance. The team won the Duke's Choice Award last year. This session will discuss how to contribute to the Java community, why we created this tool, and how you can use the HeapStats tool for troubleshooting, and optimizing performance.;Yuji KUBOTA;Developer Community Day: Community;Conference Session;Introductory;The Java technologies are so diverse that you may hesitate to contribute, especially if you are a non-English speaker. Developing a tool can be a good way to participate in the Java community. We developed HeapStats, an open-source lightweight JVM monitoring tool for Java heap and GC status. We shared it with local Java user group members, who use the tool to improve performance. The team won the Duke's Choice Award last year. This session will discuss how to contribute to the Java community, why we created this tool, and how you can use the HeapStats tool for troubleshooting, and optimizing performance.
1495493743330001Uvdq;Traffic and Performance Analytics and Cloud Bursting with Machine Learning;You’ve moved Development to the DevOps model to become more agile, yet Operations is still a struggle, due to lack of insight into traffic and the performance of your Java applications. Come to this session to learn how machine learning can detect traffic anomalies and improve the performance of your application to optimize your customer experience. Learn how to predict capacity shortfall and identify your cloud-bursting periods through seasonality analysis to make sure you don’t run out of resources. ;Jagan Athreya;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;You’ve moved Development to the DevOps model to become more agile, yet Operations is still a struggle, due to lack of insight into traffic and the performance of your Java applications. Come to this session to learn how machine learning can detect traffic anomalies and improve the performance of your application to optimize your customer experience. Learn how to predict capacity shortfall and identify your cloud-bursting periods through seasonality analysis to make sure you don’t run out of resources. 
14942522145800015L9H;You Deserve Great Tools: Commit-to-Production Automation at LinkedIn;Come to this session to learn about tools, practices, and the culture LinkedIn engineers employ to craft great products. The highlights include 3 x 3 continuous delivery: three releases a day and three hours maximum time between commit and production, automated cross-testing between software components that live in thousands of separate code repositories, and a delightful engineering experience across different languages and technology stacks.;Szczepan Faber;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;Come to this session to learn about tools, practices, and the culture LinkedIn engineers employ to craft great products. The highlights include 3 x 3 continuous delivery: three releases a day and three hours maximum time between commit and production, automated cross-testing between software components that live in thousands of separate code repositories, and a delightful engineering experience across different languages and technology stacks.
1494313579206001gYCU;Delivering Developer Tools at Scale with Swagger and the Open Source Community;We live in a cloud-paced world in which developers use a plethora of programming languages, frameworks, and DevOps tools. Supporting such a fragmented development landscape, at the breakneck pace of innovation that the cloud allows, is no easy task. Come learn how the Developer Experience team of the Oracle Cloud Infrastructure group delivers and supports a variety of open source developer tools (Ruby, Python, Java SDKs, and CLI, to name a few) for a quickly growing set of cloud services without breaking a sweat. In this session, you’ll get valuable knowledge about how leveraging Swagger and the open source community can lead to huge productivity gains, whether you’re delivering a cloud, an app, or anything in between.;Joe Levy;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;We live in a cloud-paced world in which developers use a plethora of programming languages, frameworks, and DevOps tools. Supporting such a fragmented development landscape, at the breakneck pace of innovation that the cloud allows, is no easy task. Come learn how the Developer Experience team of the Oracle Cloud Infrastructure group delivers and supports a variety of open source developer tools (Ruby, Python, Java SDKs, and CLI, to name a few) for a quickly growing set of cloud services without breaking a sweat. In this session, you’ll get valuable knowledge about how leveraging Swagger and the open source community can lead to huge productivity gains, whether you’re delivering a cloud, an app, or anything in between.
1494221598488001UUBu;Enterprise JavaScript: What the Heck?!;Enterprise JavaScript is a set of API modules that aims to standardize the usage of HTTP client and server, database access, file operations, WebSocket, messaging, SOAP, and even thread and stream manipulations for the JavaScript language. This session discusses the new API paradigm in Eclipse Dirigible and shows examples highlighting the features and usage of each of the modules. It emphasizes the most-important benefits, such as portability, avoiding engine/vendor lock-in, and making use of proven (Java) API implementations and frameworks, to name a few. It also draws some comparisons and analogies with the world of Enterprise Java. More info about this topic can be found at http://www.dirigible.io/api/index.html.;Vladimir Pavlov;Emerging Languages;Conference Session;Introductory;Enterprise JavaScript is a set of API modules that aims to standardize the usage of HTTP client and server, database access, file operations, WebSocket, messaging, SOAP, and even thread and stream manipulations for the JavaScript language. This session discusses the new API paradigm in Eclipse Dirigible and shows examples highlighting the features and usage of each of the modules. It emphasizes the most-important benefits, such as portability, avoiding engine/vendor lock-in, and making use of proven (Java) API implementations and frameworks, to name a few. It also draws some comparisons and analogies with the world of Enterprise Java. More info about this topic can be found at http://www.dirigible.io/api/index.html.
1494141835435001T0Kc;Feeding Nine Million Java Developers: How and What?;Oracle supports the largest technical audience in the world by, among other things, engaging with nine million Java developers worldwide. This takes community management to a whole different scale and introduces its own unique set of challenges and opportunities. For example,<br>Come learn the unique challenges of managing the Java community and also how you can engage with the largest technical audience in the world.;Stephen Chin;Developer Community Day: Community;Conference Session;Introductory;Oracle supports the largest technical audience in the world by, among other things, engaging with nine million Java developers worldwide. This takes community management to a whole different scale and introduces its own unique set of challenges and opportunities. For example,<br>&bull, How you feed nine million Java developers?<br>&bull, How you grow the community?<br>&bull, How do champions emerge?<br>&bull, How do you measure success?<br><br>Come learn the unique challenges of managing the Java community and also how you can engage with the largest technical audience in the world.
1494252610350001TOtq;Java Performance Tuning with Free Tools;What are the tools you use for Java performance tuning? What’s your methodology, how do you establish your benchmarks? And which tools and technologies do you use? In this session, Kirk Pepperdine, performance guru and JavaOne Rock Star speaker, shares his best practices and insights with you.;Kirk Pepperdine;Developer Community Day: NetBeans;Conference Session;Introductory;What are the tools you use for Java performance tuning? What’s your methodology, how do you establish your benchmarks? And which tools and technologies do you use? In this session, Kirk Pepperdine, performance guru and JavaOne Rock Star speaker, shares his best practices and insights with you.
1495686539100001MWP9;Measuring DevRel Success: Are We There Yet?;To DevRel or not to DevRel? That is a question a lot of organizations with developer-facing APIs ask themselves. This session discusses the different disciplines in developer relations and how to measure them (and what not to measure). It also addresses how to communicate these numbers internally and drive action if you want to move the numbers.;Amir Shevat;Developer Community Day: Developer Relations;Conference Session;Intermediate;To DevRel or not to DevRel? That is a question a lot of organizations with developer-facing APIs ask themselves. This session discusses the different disciplines in developer relations and how to measure them (and what not to measure). It also addresses how to communicate these numbers internally and drive action if you want to move the numbers.
1494015638404001TeGa;Modernize Your IT Landscape with API-Driven Architectures;APIs are key for managing the challenges of digital transformation projects and for building future-proof, modern software solutions. In addition, APIs are essential for building up new digital economies and for evolving new business models. But very often, consistent implementation guidelines and design best practices are missing. The variety of different tools—such as API Gateway, Mobile Backend as a Service (MBaaS), and Node.js—is also a huge challenge for getting started. This session demystifies this, showing different classes of APIs, how they can be implemented, and the challenges and benefits of using a specific implementation technique.;Sven Bernhardt;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;APIs are key for managing the challenges of digital transformation projects and for building future-proof, modern software solutions. In addition, APIs are essential for building up new digital economies and for evolving new business models. But very often, consistent implementation guidelines and design best practices are missing. The variety of different tools—such as API Gateway, Mobile Backend as a Service (MBaaS), and Node.js—is also a huge challenge for getting started. This session demystifies this, showing different classes of APIs, how they can be implemented, and the challenges and benefits of using a specific implementation technique.
1496428072463001F7ng;Remotely Update Java IoT Devices with Eclipse Hawkbit and SWUpdate;Connecting embedded devices to the internet is not trivial, but an even-harder-to-solve problem follows once the devices are deployed. The issue is how to manage remotely updating IoT devices with solid tools to minimize deployment failures. Updating an IoT device remotely requires solid knowledge of server-side applications, DevOps, and expertise with different embedded operating systems. It also demands knowledge of a full IoT pipeline, from the embedded devices to back-end applications. This session is a hands-on journey through the entire remote update pipeline. It covers an embedded OS, JVM, and single application updates managed by an open source Java web tool, Eclipse Hawkbit.;Nicola La Gloria;Java and Devices;Conference Session;Intermediate;Connecting embedded devices to the internet is not trivial, but an even-harder-to-solve problem follows once the devices are deployed. The issue is how to manage remotely updating IoT devices with solid tools to minimize deployment failures. Updating an IoT device remotely requires solid knowledge of server-side applications, DevOps, and expertise with different embedded operating systems. It also demands knowledge of a full IoT pipeline, from the embedded devices to back-end applications. This session is a hands-on journey through the entire remote update pipeline. It covers an embedded OS, JVM, and single application updates managed by an open source Java web tool, Eclipse Hawkbit.
14940625551550015c5u;The G1 GC in JDK 9;The G1 garbage collector is the default garbage collector in JDK 9. This session presents the goals of the G1 garbage collector, how it achieves them, and how it differs from the other garbage collectors in OpenJDK. The first part of the presentation explains the idea behind generational region-based memory management and how G1 can achieve good throughput while still meeting a pause-time goal. The second part then focuses on improvements made to G1 coming in JDK 9 and also gives a sneak peek at some of the features coming post-JDK 9. ;Erik Helin;Core Java Platform;Conference Session;Introductory;The G1 garbage collector is the default garbage collector in JDK 9. This session presents the goals of the G1 garbage collector, how it achieves them, and how it differs from the other garbage collectors in OpenJDK. The first part of the presentation explains the idea behind generational region-based memory management and how G1 can achieve good throughput while still meeting a pause-time goal. The second part then focuses on improvements made to G1 coming in JDK 9 and also gives a sneak peek at some of the features coming post-JDK 9. 
1494108230234001Tm2r;The Good Cop/Bad Cop Guide to Java 9;The Java 9 release brings with it modularity, a new REPL, a new default garbage collector, an HTTP 2 client, multiversion JARs, API updates, and much more. This session looks at which features <i>really</i> benefit Java developers, with interactive demos. The two speakers take turns playing good cop/bad cop on each feature, and <i>you</i> can vote on which features are important to you. The energetic session cuts through the hype to outline how Java 9 will realistically affect the everyday pragmatic developer. You’ll learn what’s in the Java 9 release and how you can benefit from what’s new in Java.;Simon Maple;Core Java Platform;Conference Session;Introductory;The Java 9 release brings with it modularity, a new REPL, a new default garbage collector, an HTTP 2 client, multiversion JARs, API updates, and much more. This session looks at which features <i>really</i> benefit Java developers, with interactive demos. The two speakers take turns playing good cop/bad cop on each feature, and <i>you</i> can vote on which features are important to you. The energetic session cuts through the hype to outline how Java 9 will realistically affect the everyday pragmatic developer. You’ll learn what’s in the Java 9 release and how you can benefit from what’s new in Java.
1494251193317001T8Ms;You Deserve Great Tools: Mockito 2 for Cleaner Tests and Enhanced Productivity;Learn how to write cleaner tests with the Mockito 2 release. Discover features and practices that boost productivity and reduce troubleshooting. This presentation and live demos are brought to you by Szczepan Faber, whose life’s mission is building great tools for engineers. Szczepan created Mockito in 2007, and version 2 was released in October 2016 through the effort of a great community (50 contributors). By now Mockito is used on a daily basis by almost every Java engineer in the world.;Szczepan Faber;Java Development Tools;Conference Session;Intermediate;Learn how to write cleaner tests with the Mockito 2 release. Discover features and practices that boost productivity and reduce troubleshooting. This presentation and live demos are brought to you by Szczepan Faber, whose life’s mission is building great tools for engineers. Szczepan created Mockito in 2007, and version 2 was released in October 2016 through the effort of a great community (50 contributors). By now Mockito is used on a daily basis by almost every Java engineer in the world.
1494243076732001TnaI;Apache Kafka: Scalable Message Processing and More;In the world of sensors and social media streams, the integration and handling of high-volume event streams are more important than ever. Events have to be handled both efficiently and reliably, and often many consumers or systems are interested in all or part of the events. How do we make sure all these events are accepted and forwarded in an efficient and reliable way? Apache Kafka, a distributed, highly scalable messaging broker built for exchanging huge amounts of messages between a source and a target, can be a great help in such scenarios. This session introduces Apache Kafka and its place in a modern architecture, shows its integration with the Oracle stack, and discusses Oracle Event Hub Cloud Service, the managed Kafka service.;Guido Schmutz;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;In the world of sensors and social media streams, the integration and handling of high-volume event streams are more important than ever. Events have to be handled both efficiently and reliably, and often many consumers or systems are interested in all or part of the events. How do we make sure all these events are accepted and forwarded in an efficient and reliable way? Apache Kafka, a distributed, highly scalable messaging broker built for exchanging huge amounts of messages between a source and a target, can be a great help in such scenarios. This session introduces Apache Kafka and its place in a modern architecture, shows its integration with the Oracle stack, and discusses Oracle Event Hub Cloud Service, the managed Kafka service.
1494212572063001UbJA;API Deep Dive: Designing Eclipse Collections ;When designing an API, its authors have to consider many aspects: style, naming, scope, and implementation details are among these aspects. They have a direct impact on the resulting code, and its implementation can go in many different directions. How do you choose the best route to go? How do you guarantee consistency and performance across the framework? In this session, the mastermind behind Eclipse Collections (and previously GS Collections) shares the design choices he had to face and how he did it, the impact on different implementation strategies, and how the framework became a Eclipse project. Come take a look behind the curtains of a widely used API that has many years of development and that you can contribute to.;Nikhil Nanivadekar;Core Java Platform;Conference Session;Advanced;When designing an API, its authors have to consider many aspects: style, naming, scope, and implementation details are among these aspects. They have a direct impact on the resulting code, and its implementation can go in many different directions. How do you choose the best route to go? How do you guarantee consistency and performance across the framework? In this session, the mastermind behind Eclipse Collections (and previously GS Collections) shares the design choices he had to face and how he did it, the impact on different implementation strategies, and how the framework became a Eclipse project. Come take a look behind the curtains of a widely used API that has many years of development and that you can contribute to.
1494154650032001UGQ3;Boost Your Java IDE with Kubernetes;What if your IDE could run in a container? And what if it could be scheduled and scaled with a container orchestrator such as Kubernetes? You could share the same repeatable dev environment with your whole team. You could run it in the cloud and scale it as needed. Unfortunately, that’s not something that can be done with any old Java IDE. The IDE needs to have been designed from the ground up to run in the cloud. Luckily, such an IDE exists: it’s an open source Eclipse project called Che. This session takes a look at Che, the benefits of running an IDE in the cloud, and the work the speaker’s company did to make Che, a web app written in Java, run on Kubernetes.;Mario Loriedo;Java Development Tools;Conference Session;Intermediate;What if your IDE could run in a container? And what if it could be scheduled and scaled with a container orchestrator such as Kubernetes? You could share the same repeatable dev environment with your whole team. You could run it in the cloud and scale it as needed. Unfortunately, that’s not something that can be done with any old Java IDE. The IDE needs to have been designed from the ground up to run in the cloud. Luckily, such an IDE exists: it’s an open source Eclipse project called Che. This session takes a look at Che, the benefits of running an IDE in the cloud, and the work the speaker’s company did to make Che, a web app written in Java, run on Kubernetes.
1494170624081001TkWW;Deus Ex Scala: Finding a Home for Scala in the Corporate Machine;This session is part technical case study, part project postmortem, and part reflections on building a Scala team from the ground up. It discusses how Scala can succeed in a highly regulated, generally risk-averse environment and why it can be worth that risk and lead to a happier, healthier team. Still not sure if this session will be worth your time? You might enjoy it if you believe in Life Beyond Java but the rest of your team thinks that Java 8 lambdas killed Scala and you are looking for moral support. On the other hand, the session may be less relevant for you if you believe that Java 8 lambdas killed Scala and you’re tired of hearing from that one teammate who keeps trying to convince you otherwise.;Sten Anderson;Emerging Languages;Conference Session;Introductory;This session is part technical case study, part project postmortem, and part reflections on building a Scala team from the ground up. It discusses how Scala can succeed in a highly regulated, generally risk-averse environment and why it can be worth that risk and lead to a happier, healthier team. Still not sure if this session will be worth your time? You might enjoy it if you believe in Life Beyond Java but the rest of your team thinks that Java 8 lambdas killed Scala and you are looking for moral support. On the other hand, the session may be less relevant for you if you believe that Java 8 lambdas killed Scala and you’re tired of hearing from that one teammate who keeps trying to convince you otherwise.
1495672891211001MdXW;DevRel for Skeptics;You are dependent on others in your company to be successful. How do you sell the idea of developer evangelism and community to your company? Attend this session to learn the steps of building and growing a DevRel program where it doesn’t exist or needs a reboot.;Tori Wieldt;Developer Community Day: Developer Relations;Conference Session;Introductory;You are dependent on others in your company to be successful. How do you sell the idea of developer evangelism and community to your company? Attend this session to learn the steps of building and growing a DevRel program where it doesn’t exist or needs a reboot.
1494131858171001TLQr;Discover CDI 2.0 in Live Coding;CDI 2.0 brings a lot of new features that enable it to deal with asynchronous operation, run on Java SE, or create extensions in an easy way. This session demonstrates with code how these features work and how they can help simplify existing CDI 1.x code. It also shows you how to start working with CDI 2.0 on some Java EE application servers or MicroProfile implementations.;Antoine Sabot-Durand;Java, Cloud, and Server-Side Development;Conference Session;Intermediate;CDI 2.0 brings a lot of new features that enable it to deal with asynchronous operation, run on Java SE, or create extensions in an easy way. This session demonstrates with code how these features work and how they can help simplify existing CDI 1.x code. It also shows you how to start working with CDI 2.0 on some Java EE application servers or MicroProfile implementations.
1494140618217001TBPJ;Groovy Support in NetBeans: A State of the Union;With the ongoing transition of NetBeans into an Apache project integration, support of similiar Apache projects in its IDE is very much welcome. One such project is Apache Groovy, and its integration is what this session is all about. The presentation showcases the current state of integration and takes a sneak peek into upcoming enhancements of its integration in IDE, covering support of language features, debugging, code completion and coverage, and the like.;Sven Reimers;Java Development Tools;Conference Session;Introductory;With the ongoing transition of NetBeans into an Apache project integration, support of similiar Apache projects in its IDE is very much welcome. One such project is Apache Groovy, and its integration is what this session is all about. The presentation showcases the current state of integration and takes a sneak peek into upcoming enhancements of its integration in IDE, covering support of language features, debugging, code completion and coverage, and the like.
1496783060228001x48l;Let’s Wing It: A Study in DevRel Strategy;Developer relations strategy is often an afterthought. This session’s speaker asks whether that’s OK and gets the opinion of DevRel leaders from companies large and small.;Baruch Sadogursky;Developer Community Day: Developer Relations;Conference Session;Advanced;Developer relations strategy is often an afterthought. This session’s speaker asks whether that’s OK and gets the opinion of DevRel leaders from companies large and small.
1494199915876001UNku;Modules in One Lesson;This session presents a practical introduction, with live coding, to Project Jigsaw and the Java Platform Module System in Java 9. The presentation involves constructing and hacking on a simple modular application to explore the essential aspects of the module system. You’ll see how the module system ensures reliable configuration and strong encapsulation, how it improves security, and how it makes the JDK itself configurable.;Mark Reinhold;Core Java Platform;Conference Session;Intermediate;This session presents a practical introduction, with live coding, to Project Jigsaw and the Java Platform Module System in Java 9. The presentation involves constructing and hacking on a simple modular application to explore the essential aspects of the module system. You’ll see how the module system ensures reliable configuration and strong encapsulation, how it improves security, and how it makes the JDK itself configurable.
1494052832721001TFwW;Streaming Solutions for Real-Time Problems;The world is going “real-time” and constantly producing what’s popularly known as streaming data, which falls somewhere in the middle of request/response and (offline) batch systems. Think about the millions of events flowing in per second. How would your applications consume and process the data and make the insights readily available to end users and other systems in real time—all this in a low-latency, large-scale, fault-tolerant manner? This demands a new kind of architecture, and a niche breed of distributed platforms has sprung up to tackle these problems. In this session, the speakers present their take on building such a system with Apache Kafka, Kafka Streams, and Redis.;Anand Kothari;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Introductory;The world is going “real-time” and constantly producing what’s popularly known as streaming data, which falls somewhere in the middle of request/response and (offline) batch systems. Think about the millions of events flowing in per second. How would your applications consume and process the data and make the insights readily available to end users and other systems in real time—all this in a low-latency, large-scale, fault-tolerant manner? This demands a new kind of architecture, and a niche breed of distributed platforms has sprung up to tackle these problems. In this session, the speakers present their take on building such a system with Apache Kafka, Kafka Streams, and Redis.
1494199946472001TooA;Trust Your Pipeline: Automatically Testing an End-to-End Java Application;Move fast and reduce risks while delivering your best application ever. When you trust your pipeline, you can increase your development speed, because you know you will catch bugs before they reach production. Doing unit tests is a first step, but in today’s cloud-based, distributed architectures, you need to apply other testing strategies as well. This interactive presentation shows how you can use state-of-the-art open source testing tools to create a fast and trustworthy testing pipeline. Starting from an end-to-end distributed Java EE application based on REST and microservices, the presenters test both the server side and its web and mobile front ends.;Bruno Souza;Oracle Code: Containers, Microservices, DevOps, Databases, APIs, and more;Conference Session;Intermediate;Move fast and reduce risks while delivering your best application ever. When you trust your pipeline, you can increase your development speed, because you know you will catch bugs before they reach production. Doing unit tests is a first step, but in today’s cloud-based, distributed architectures, you need to apply other testing strategies as well. This interactive presentation shows how you can use state-of-the-art open source testing tools to create a fast and trustworthy testing pipeline. Starting from an end-to-end distributed Java EE application based on REST and microservices, the presenters test both the server side and its web and mobile front ends.
1494256132162001Tcd3;Visual JShell: JShell on Steroids;JShell adds interactivity to the Java language and opens the door to a vast number of new, exciting applications. In this session, a whole new layer—instant interactive visualization of any Java object—is added to JShell. The presentation introduces a polished JavaFX-based user interface for the visualization, based on the Visual Reflection Library (VRL) and VWorkflows, a powerful flow and node visualization library. This enables users to visually explore the whole JDK. Users can define data flows visually and combine those with textual JShell scripts. You will learn how to experiment with new ideas and how to produce stunning visualizations in an instant. Attendees will get access to the source code and the sample applications.;Michael Hoffer;Java Development Tools;Conference Session;Intermediate;JShell adds interactivity to the Java language and opens the door to a vast number of new, exciting applications. In this session, a whole new layer—instant interactive visualization of any Java object—is added to JShell. The presentation introduces a polished JavaFX-based user interface for the visualization, based on the Visual Reflection Library (VRL) and VWorkflows, a powerful flow and node visualization library. This enables users to visually explore the whole JDK. Users can define data flows visually and combine those with textual JShell scripts. You will learn how to experiment with new ideas and how to produce stunning visualizations in an instant. Attendees will get access to the source code and the sample applications.
